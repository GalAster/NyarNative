GrammarInfo {
    url: None,
    name: Identifier("Valkyrie", 8..16),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Program": GrammarRule {
            name: Identifier("Program", 259..266),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: START_OF_INPUT,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Shebang", 279..286),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Shebang", 279..286),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Statement", 294..303),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Statement", 294..303),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: END_OF_INPUT,
                            },
                        ],
                    },
                },
            },
            range: 246..313,
        },
        "Statement": GrammarRule {
            name: Identifier("Statement", 408..417),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineNamespace", 454..469),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineNamespace", 454..469),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineNamespace", 454..469),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineClass", 476..487),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineClass", 476..487),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineClass", 476..487),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineUnion", 494..505),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineUnion", 494..505),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineUnion", 494..505),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineEnumerate", 512..527),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineEnumerate", 512..527),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineEnumerate", 512..527),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineTrait", 534..545),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineTrait", 534..545),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineTrait", 534..545),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineExtends", 552..565),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineExtends", 552..565),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineExtends", 552..565),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineFunction", 572..586),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineFunction", 572..586),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineFunction", 572..586),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineVariable", 593..607),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineVariable", 593..607),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineVariable", 593..607),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineImport", 651..663),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineImport", 651..663),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineImport", 651..663),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ControlFlow", 670..681),
                        ),
                        branch: Expression {
                            tag: Identifier("ControlFlow", 670..681),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ControlFlow", 670..681),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("WhileStatement", 688..702),
                        ),
                        branch: Expression {
                            tag: Identifier("WhileStatement", 688..702),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("WhileStatement", 688..702),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ForStatement", 709..721),
                        ),
                        branch: Expression {
                            tag: Identifier("ForStatement", 709..721),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ForStatement", 709..721),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ExpressionRoot", 728..742),
                        ),
                        branch: Expression {
                            tag: Identifier("ExpressionRoot", 728..742),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ExpressionRoot", 728..742),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Eos", 749..752),
                        ),
                        branch: Expression {
                            tag: Identifier("Eos", 749..752),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS", 749..752),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 402..754,
        },
        "EOS": GrammarRule {
            name: Identifier("EOS", 838..841),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Omit", 862..866),
                        ),
                        branch: Expression {
                            tag: Identifier("Omit", 862..866),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[;；]",
                                span: 852..858,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Show", 884..888),
                        ),
                        branch: Expression {
                            tag: Identifier("Show", 884..888),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⁏|;;",
                                span: 873..881,
                            },
                        },
                    },
                ],
            },
            range: 832..890,
        },
        "EOS_FREE": GrammarRule {
            name: Identifier("EOS_FREE", 955..963),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，;；⁏]",
                        span: 970..983,
                    },
                },
            },
            range: 949..985,
        },
        "DefineNamespace": GrammarRule {
            name: Identifier("DefineNamespace", 1079..1094),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_NAMESPACE", 1102..1114),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_NAMESPACE", 1115..1127),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_NAMESPACE", 1115..1127),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("NamepathFree", 1129..1141),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1129..1141),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 1143..1146),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1073..1149,
        },
        "OP_NAMESPACE": GrammarRule {
            name: Identifier("OP_NAMESPACE", 1173..1185),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Main", 1199..1203),
                        ),
                        branch: Expression {
                            tag: Identifier("Main", 1199..1203),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 1194..1197,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Test", 1215..1219),
                        ),
                        branch: Expression {
                            tag: Identifier("Test", 1215..1219),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 1210..1213,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Hide", 1231..1235),
                        ),
                        branch: Expression {
                            tag: Identifier("Hide", 1231..1235),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 1226..1229,
                            },
                        },
                    },
                ],
            },
            range: 1151..1237,
        },
        "DefineImport": GrammarRule {
            name: Identifier("DefineImport", 1328..1340),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AnnotationTerm", 1347..1361),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AnnotationTerm", 1347..1361),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IMPORT", 1364..1373),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ChoiceExpression {
                                    branches: [
                                        Expression {
                                            tag: Identifier("EOS_FREE", 1386..1394),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("EOS_FREE", 1386..1394),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: Identifier("ImportBlock", 1405..1416),
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("ImportBlock", 1405..1416),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: HIDE,
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: Identifier("EOS_FREE", 1417..1425),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 1417..1425),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: Identifier("ImportTerm", 1437..1447),
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("ImportTerm", 1437..1447),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: HIDE,
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: Identifier("EOS_FREE", 1448..1456),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 1448..1456),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1322..1465,
        },
        "ImportBlock": GrammarRule {
            name: Identifier("ImportBlock", 1472..1483),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 1491..1494,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ImportTerm", 1495..1505),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ImportTerm", 1495..1505),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 1507..1510,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1466..1512,
        },
        "ImportTerm": GrammarRule {
            name: Identifier("ImportTerm", 1519..1529),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAll", 1538..1547),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAll", 1538..1547),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAll", 1538..1547),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportSpace", 1554..1565),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportSpace", 1554..1565),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportSpace", 1554..1565),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportName", 1572..1582),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportName", 1572..1582),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportName", 1572..1582),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EosFree", 1589..1597),
                        ),
                        branch: Expression {
                            tag: Identifier("EosFree", 1589..1597),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS_FREE", 1589..1597),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 1513..1599,
        },
        "ImportAll": GrammarRule {
            name: Identifier("ImportAll", 1640..1649),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("path", 1659..1663),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 1664..1674),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("NS_CONCAT", 1675..1684),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 1,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("OP_IMPORT_ALL", 1687..1700),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1634..1702,
        },
        "ImportSpace": GrammarRule {
            name: Identifier("ImportSpace", 1752..1763),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("path", 1772..1776),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 1777..1787),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: ConcatExpression {
                                                                                sequence: [
                                                                                    Expression {
                                                                                        tag: None,
                                                                                        remark: false,
                                                                                        body: RuleReference {
                                                                                            name: Identifier("NS_CONCAT", 1789..1798),
                                                                                            boxed: false,
                                                                                            inline: false,
                                                                                        },
                                                                                    },
                                                                                    Expression {
                                                                                        tag: None,
                                                                                        remark: false,
                                                                                        body: HIDE,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("path", 1799..1803),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 1804..1814),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("NS_CONCAT", 1817..1826),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("body", 1828..1832),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ImportBlock", 1833..1844),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1746..1846,
        },
        "ImportName": GrammarRule {
            name: Identifier("ImportName", 1942..1952),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: ConcatExpression {
                                                                                sequence: [
                                                                                    Expression {
                                                                                        tag: Identifier("path", 1962..1966),
                                                                                        remark: false,
                                                                                        body: RuleReference {
                                                                                            name: Identifier("Identifier", 1967..1977),
                                                                                            boxed: false,
                                                                                            inline: false,
                                                                                        },
                                                                                    },
                                                                                    Expression {
                                                                                        tag: None,
                                                                                        remark: false,
                                                                                        body: HIDE,
                                                                                    },
                                                                                    Expression {
                                                                                        tag: None,
                                                                                        remark: false,
                                                                                        body: RuleReference {
                                                                                            name: Identifier("NS_CONCAT", 1978..1987),
                                                                                            boxed: false,
                                                                                            inline: false,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 4294967295,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: HIDE,
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: Identifier("item", 1990..1994),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("ImportNameItem", 1995..2009),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("alias", 2010..2015),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ImportAs", 2016..2024),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1936..2026,
        },
        "ImportAs": GrammarRule {
            name: Identifier("ImportAs", 2076..2084),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_AS", 2094..2099),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("alias", 2100..2105),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ImportNameItem", 2106..2120),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 1,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 2070..2124,
        },
        "ImportNameItem": GrammarRule {
            name: Identifier("ImportNameItem", 2138..2152),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ProceduralName", 2161..2175),
                        ),
                        branch: Expression {
                            tag: Identifier("ProceduralName", 2161..2175),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ProceduralName", 2161..2175),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("AttributeName", 2182..2195),
                        ),
                        branch: Expression {
                            tag: Identifier("AttributeName", 2182..2195),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("AttributeName", 2182..2195),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 2202..2212),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 2202..2212),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 2202..2212),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 2125..2214,
        },
        "DefineConstraint": GrammarRule {
            name: Identifier("DefineConstraint", 2464..2480),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AnnotationHead", 2487..2501),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationHead", 2487..2501),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_CONSTRAINT", 2506..2519),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_CONSTRAINT", 2506..2519),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ConstraintParameters", 2520..2540),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ConstraintParameters", 2520..2540),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ConstraintBlock", 2542..2557),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ConstraintBlock", 2542..2557),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2458..2559,
        },
        "ConstraintParameters": GrammarRule {
            name: Identifier("ConstraintParameters", 2566..2586),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("Identifier", 2595..2605),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2595..2605),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2608..2613),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2614..2624),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2614..2624),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2628..2633),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "<",
                                                insensitive: false,
                                                range: 2641..2644,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("Identifier", 2645..2655),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2645..2655),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2658..2663),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2664..2674),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2664..2674),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2678..2683),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ">",
                                                insensitive: false,
                                                range: 2685..2688,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟨",
                                                insensitive: false,
                                                range: 2695..2700,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("Identifier", 2701..2711),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2701..2711),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2714..2719),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2720..2730),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2720..2730),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2734..2739),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟩",
                                                insensitive: false,
                                                range: 2741..2746,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2560..2748,
        },
        "ConstraintBlock": GrammarRule {
            name: Identifier("ConstraintBlock", 2755..2770),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 2777..2780,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("ConstraintStatement", 2782..2801),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ConstraintStatement", 2782..2801),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("ConstraintImplements", 2804..2824),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ConstraintImplements", 2804..2824),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("EOS_FREE", 2827..2835),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 2827..2835),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 2838..2841,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2749..2843,
        },
        "ConstraintStatement": GrammarRule {
            name: Identifier("ConstraintStatement", 2850..2869),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("WhereBlock", 2876..2886),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("WhereBlock", 2876..2886),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2844..2957,
        },
        "ConstraintImplements": GrammarRule {
            name: Identifier("ConstraintImplements", 2964..2984),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_IMPLEMENTS", 2991..3004),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_IMPLEMENTS", 2991..3004),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2958..3024,
        },
        "WhereBlock": GrammarRule {
            name: Identifier("WhereBlock", 3031..3041),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHERE", 3048..3056),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHERE", 3048..3056),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 3057..3060,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("WhereBound", 3061..3071),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("WhereBound", 3061..3071),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 3073..3076,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3025..3078,
        },
        "WhereBound": GrammarRule {
            name: Identifier("WhereBound", 3085..3095),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("EOS_FREE", 3148..3156),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("EOS_FREE", 3148..3156),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3079..3158,
        },
        "DefineClass": GrammarRule {
            name: Identifier("DefineClass", 3356..3367),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineConstraint", 3374..3390),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineConstraint", 3374..3390),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("AnnotationHead", 3396..3410),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationHead", 3396..3410),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_CLASS", 3415..3423),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_CLASS", 3415..3423),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 3424..3434),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3424..3434),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineGeneric", 3435..3448),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineGeneric", 3435..3448),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineInherit", 3450..3463),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineInherit", 3450..3463),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeHint", 3465..3473),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeHint", 3465..3473),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 3474..3484),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 3474..3484),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 3486..3489),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3350..3492,
        },
        "ClassBlock": GrammarRule {
            name: Identifier("ClassBlock", 3499..3509),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 3516..3519,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ClassTerm", 3520..3529),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassTerm", 3520..3529),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 3531..3534,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3493..3536,
        },
        "ClassTerm": GrammarRule {
            name: Identifier("ClassTerm", 3543..3552),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ProceduralCall", 3561..3575),
                        ),
                        branch: Expression {
                            tag: Identifier("ProceduralCall", 3561..3575),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ProceduralCall", 3561..3575),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineMethod", 3582..3594),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineMethod", 3582..3594),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineMethod", 3582..3594),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineDomain", 3601..3613),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineDomain", 3601..3613),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineDomain", 3601..3613),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineField", 3620..3631),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineField", 3620..3631),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineField", 3620..3631),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EosFree", 3638..3646),
                        ),
                        branch: Expression {
                            tag: Identifier("EosFree", 3638..3646),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS_FREE", 3638..3646),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 3537..3648,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 3671..3679),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Class", 3701..3706),
                        ),
                        branch: Expression {
                            tag: Identifier("Class", 3701..3706),
                            remark: false,
                            body: YggdrasilText {
                                text: "class",
                                insensitive: false,
                                range: 3688..3695,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Structure", 3726..3735),
                        ),
                        branch: Expression {
                            tag: Identifier("Structure", 3726..3735),
                            remark: false,
                            body: YggdrasilText {
                                text: "structure",
                                insensitive: false,
                                range: 3713..3724,
                            },
                        },
                    },
                ],
            },
            range: 3649..3737,
        },
        "DefineField": GrammarRule {
            name: Identifier("DefineField", 3865..3876),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AnnotationMix", 3883..3896),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationMix", 3883..3896),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 3901..3911),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3901..3911),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeHint", 3912..3920),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeHint", 3912..3920),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ParameterDefault", 3921..3937),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ParameterDefault", 3921..3937),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3859..3939,
        },
        "ParameterDefault": GrammarRule {
            name: Identifier("ParameterDefault", 3946..3962),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "=",
                                            insensitive: false,
                                            range: 3970..3973,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("MainExpression", 3974..3988),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainExpression", 3974..3988),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 1,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 3940..3992,
        },
        "DefineMethod": GrammarRule {
            name: Identifier("DefineMethod", 3999..4011),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AnnotationMix", 4018..4031),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationMix", 4018..4031),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Namepath", 4032..4040),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 4032..4040),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("FunctionMiddle", 4041..4055),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("FunctionMiddle", 4041..4055),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Continuation", 4056..4068),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Continuation", 4056..4068),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3993..4071,
        },
        "DefineDomain": GrammarRule {
            name: Identifier("DefineDomain", 4078..4090),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AnnotationMix", 4097..4110),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationMix", 4097..4110),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("DomainTerm", 4115..4125),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("DomainTerm", 4115..4125),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 4126..4129,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Statement", 4130..4139),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Statement", 4130..4139),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 4141..4144,
                                },
                            },
                        ],
                    },
                },
            },
            range: 4072..4146,
        },
        "DomainTerm": GrammarRule {
            name: Identifier("DomainTerm", 4153..4163),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 4172..4182),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 4172..4182),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 4172..4182),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 4147..4184,
        },
        "DefineInherit": GrammarRule {
            name: Identifier("DefineInherit", 4191..4204),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 4211..4214,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("InheritTerm", 4216..4227),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("InheritTerm", 4216..4227),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: YggdrasilText {
                                                                                        text: ",",
                                                                                        insensitive: false,
                                                                                        range: 4229..4232,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("InheritTerm", 4233..4244),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("InheritTerm", 4233..4244),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: ",",
                                                                insensitive: false,
                                                                range: 4247..4250,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 4254..4257,
                                },
                            },
                        ],
                    },
                },
            },
            range: 4185..4259,
        },
        "InheritTerm": GrammarRule {
            name: Identifier("InheritTerm", 4266..4277),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AnnotationMix", 4284..4297),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationMix", 4284..4297),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeExpression", 4298..4312),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeExpression", 4298..4312),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 4260..4314,
        },
        "ObjectStatement": GrammarRule {
            name: Identifier("ObjectStatement", 4442..4457),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_Object", 4464..4473),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_Object", 4464..4473),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineInherit", 4474..4487),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineInherit", 4474..4487),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeHint", 4489..4497),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeHint", 4489..4497),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 4498..4508),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 4498..4508),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4510..4513),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4436..4516,
        },
        "DefineEnumerate": GrammarRule {
            name: Identifier("DefineEnumerate", 4644..4659),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AnnotationHead", 4666..4680),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationHead", 4666..4680),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_FLAGS", 4685..4693),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FLAGS", 4685..4693),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 4694..4704),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4694..4704),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineInherit", 4705..4718),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineInherit", 4705..4718),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeHint", 4720..4728),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeHint", 4720..4728),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 4729..4732,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("FlagTerm", 4733..4741),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("FlagTerm", 4733..4741),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 4743..4746,
                                },
                            },
                        ],
                    },
                },
            },
            range: 4638..4748,
        },
        "FlagTerm": GrammarRule {
            name: Identifier("FlagTerm", 4755..4763),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ProceduralCall", 4772..4786),
                        ),
                        branch: Expression {
                            tag: Identifier("ProceduralCall", 4772..4786),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ProceduralCall", 4772..4786),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineMethod", 4793..4805),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineMethod", 4793..4805),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineMethod", 4793..4805),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("FlagField", 4812..4821),
                        ),
                        branch: Expression {
                            tag: Identifier("FlagField", 4812..4821),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("FlagField", 4812..4821),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EosFree", 4828..4836),
                        ),
                        branch: Expression {
                            tag: Identifier("EosFree", 4828..4836),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS_FREE", 4828..4836),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 4749..4838,
        },
        "FlagField": GrammarRule {
            name: Identifier("FlagField", 4845..4854),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 4861..4871),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4861..4871),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ParameterDefault", 4872..4888),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ParameterDefault", 4872..4888),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 4839..4890,
        },
        "KW_FLAGS": GrammarRule {
            name: Identifier("KW_FLAGS", 4929..4937),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Enum", 4959..4963),
                        ),
                        branch: Expression {
                            tag: Identifier("Enum", 4959..4963),
                            remark: false,
                            body: YggdrasilText {
                                text: "enumerate",
                                insensitive: false,
                                range: 4946..4957,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Flags", 4983..4988),
                        ),
                        branch: Expression {
                            tag: Identifier("Flags", 4983..4988),
                            remark: false,
                            body: YggdrasilText {
                                text: "flags",
                                insensitive: false,
                                range: 4970..4977,
                            },
                        },
                    },
                ],
            },
            range: 4891..4990,
        },
        "DefineUnion": GrammarRule {
            name: Identifier("DefineUnion", 5118..5129),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineConstraint", 5136..5152),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineConstraint", 5136..5152),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("AnnotationHead", 5158..5172),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationHead", 5158..5172),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_UNION", 5177..5185),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_UNION", 5177..5185),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 5186..5196),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 5186..5196),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineGeneric", 5197..5210),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineGeneric", 5197..5210),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineInherit", 5212..5225),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineInherit", 5212..5225),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeHint", 5227..5235),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeHint", 5227..5235),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 5236..5239,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("UnionTerm", 5240..5249),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("UnionTerm", 5240..5249),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 5251..5254,
                                },
                            },
                        ],
                    },
                },
            },
            range: 5112..5256,
        },
        "UnionTerm": GrammarRule {
            name: Identifier("UnionTerm", 5263..5272),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ProceduralCall", 5281..5295),
                        ),
                        branch: Expression {
                            tag: Identifier("ProceduralCall", 5281..5295),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ProceduralCall", 5281..5295),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineMethod", 5302..5314),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineMethod", 5302..5314),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineMethod", 5302..5314),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineVariant", 5321..5334),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineVariant", 5321..5334),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineVariant", 5321..5334),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EosFree", 5341..5349),
                        ),
                        branch: Expression {
                            tag: Identifier("EosFree", 5341..5349),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS_FREE", 5341..5349),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5257..5351,
        },
        "DefineVariant": GrammarRule {
            name: Identifier("DefineVariant", 5358..5371),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AnnotationTerm", 5378..5392),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AnnotationTerm", 5378..5392),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 5398..5408),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 5398..5408),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ClassBlock", 5409..5419),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ClassBlock", 5409..5419),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5352..5422,
        },
        "KW_UNION": GrammarRule {
            name: Identifier("KW_UNION", 5445..5453),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "union",
                        insensitive: false,
                        range: 5460..5467,
                    },
                },
            },
            range: 5423..5469,
        },
        "DefineTrait": GrammarRule {
            name: Identifier("DefineTrait", 5597..5608),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineConstraint", 5615..5631),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineConstraint", 5615..5631),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("AnnotationHead", 5637..5651),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationHead", 5637..5651),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_TRAIT", 5656..5664),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_TRAIT", 5656..5664),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 5665..5675),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 5665..5675),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineGeneric", 5676..5689),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineGeneric", 5676..5689),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineInherit", 5691..5704),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineInherit", 5691..5704),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeHint", 5706..5714),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeHint", 5706..5714),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TraitBlock", 5715..5725),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TraitBlock", 5715..5725),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 5727..5730),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5591..5733,
        },
        "DefineExtends": GrammarRule {
            name: Identifier("DefineExtends", 5740..5753),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineConstraint", 5760..5776),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineConstraint", 5760..5776),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("AnnotationHead", 5782..5796),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationHead", 5782..5796),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_EXTENDS", 5801..5811),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_EXTENDS", 5801..5811),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeExpression", 5812..5826),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeExpression", 5812..5826),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeHint", 5827..5835),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeHint", 5827..5835),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TraitBlock", 5836..5846),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TraitBlock", 5836..5846),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 5848..5851),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5734..5854,
        },
        "TraitBlock": GrammarRule {
            name: Identifier("TraitBlock", 5861..5871),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 5878..5881,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("TraitTerm", 5882..5891),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TraitTerm", 5882..5891),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 5893..5896,
                                },
                            },
                        ],
                    },
                },
            },
            range: 5855..5898,
        },
        "TraitTerm": GrammarRule {
            name: Identifier("TraitTerm", 5905..5914),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ProceduralCall", 5923..5937),
                        ),
                        branch: Expression {
                            tag: Identifier("ProceduralCall", 5923..5937),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ProceduralCall", 5923..5937),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineMethod", 5944..5956),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineMethod", 5944..5956),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineMethod", 5944..5956),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineField", 5963..5974),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineField", 5963..5974),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineField", 5963..5974),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EosFree", 5981..5989),
                        ),
                        branch: Expression {
                            tag: Identifier("EosFree", 5981..5989),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS_FREE", 5981..5989),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5899..5991,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 6014..6022),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Trait", 6044..6049),
                        ),
                        branch: Expression {
                            tag: Identifier("Trait", 6044..6049),
                            remark: false,
                            body: YggdrasilText {
                                text: "trait",
                                insensitive: false,
                                range: 6031..6038,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Interface", 6069..6078),
                        ),
                        branch: Expression {
                            tag: Identifier("Interface", 6069..6078),
                            remark: false,
                            body: YggdrasilText {
                                text: "interface",
                                insensitive: false,
                                range: 6056..6067,
                            },
                        },
                    },
                ],
            },
            range: 5992..6080,
        },
        "DefineFunction": GrammarRule {
            name: Identifier("DefineFunction", 6208..6222),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AnnotationHead", 6229..6243),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationHead", 6229..6243),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_FUNCTION", 6244..6255),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FUNCTION", 6244..6255),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Namepath", 6256..6264),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 6256..6264),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("FunctionMiddle", 6265..6279),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("FunctionMiddle", 6265..6279),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Continuation", 6280..6292),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Continuation", 6280..6292),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 6202..6294,
        },
        "DefineLambda": GrammarRule {
            name: Identifier("DefineLambda", 6301..6313),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AnnotationTerm", 6320..6334),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AnnotationTerm", 6320..6334),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_LAMBDA", 6340..6349),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_LAMBDA", 6340..6349),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("FunctionMiddle", 6350..6364),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("FunctionMiddle", 6350..6364),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Continuation", 6365..6377),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Continuation", 6365..6377),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 6295..6379,
        },
        "FunctionMiddle": GrammarRule {
            name: Identifier("FunctionMiddle", 6386..6400),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineGeneric", 6407..6420),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineGeneric", 6407..6420),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 6422..6425,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("FunctionParameters", 6426..6444),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("FunctionParameters", 6426..6444),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 6445..6448,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TypeReturn", 6449..6459),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeReturn", 6449..6459),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TypeEffect", 6461..6471),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeEffect", 6461..6471),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 6380..6474,
        },
        "TypeHint": GrammarRule {
            name: Identifier("TypeHint", 6481..6489),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COLON", 6499..6504),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("hint", 6505..6509),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeExpression", 6510..6524),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 1,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 6475..6528,
        },
        "TypeReturn": GrammarRule {
            name: Identifier("TypeReturn", 6535..6545),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ARROW1", 6552..6558),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ARROW1", 6552..6558),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeExpression", 6559..6573),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeExpression", 6559..6573),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 6529..6575,
        },
        "TypeEffect": GrammarRule {
            name: Identifier("TypeEffect", 6582..6592),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "/",
                                    insensitive: false,
                                    range: 6599..6602,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeExpression", 6603..6617),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeExpression", 6603..6617),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 6576..6619,
        },
        "FunctionParameters": GrammarRule {
            name: Identifier("FunctionParameters", 6633..6651),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: Identifier("ParameterItem", 6659..6672),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ParameterItem", 6659..6672),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: ConcatExpression {
                                                    sequence: [
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 6680..6685),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: Identifier("ParameterItem", 6688..6701),
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("ParameterItem", 6688..6701),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            operators: [
                                                RepeatsBetween(
                                                    YggdrasilCounter {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ),
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: ConcatExpression {
                                                    sequence: [
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 6711..6716),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            operators: [
                                                RepeatsBetween(
                                                    YggdrasilCounter {
                                                        min: 0,
                                                        max: 1,
                                                    },
                                                ),
                                            ],
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 1,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 6620..6722,
        },
        "ParameterItem": GrammarRule {
            name: Identifier("ParameterItem", 6729..6742),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LMark", 6756..6761),
                        ),
                        branch: Expression {
                            tag: Identifier("LMark", 6756..6761),
                            remark: false,
                            body: YggdrasilText {
                                text: "<",
                                insensitive: false,
                                range: 6751..6754,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RMark", 6773..6778),
                        ),
                        branch: Expression {
                            tag: Identifier("RMark", 6773..6778),
                            remark: false,
                            body: YggdrasilText {
                                text: ">",
                                insensitive: false,
                                range: 6768..6771,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ParameterPair", 6785..6798),
                        ),
                        branch: Expression {
                            tag: Identifier("ParameterPair", 6785..6798),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ParameterPair", 6785..6798),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("OmitDict", 6812..6820),
                        ),
                        branch: Expression {
                            tag: Identifier("OmitDict", 6812..6820),
                            remark: false,
                            body: YggdrasilText {
                                text: "...",
                                insensitive: false,
                                range: 6805..6810,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("OmitList", 6834..6842),
                        ),
                        branch: Expression {
                            tag: Identifier("OmitList", 6834..6842),
                            remark: false,
                            body: YggdrasilText {
                                text: "..",
                                insensitive: false,
                                range: 6827..6831,
                            },
                        },
                    },
                ],
            },
            range: 6723..6844,
        },
        "ParameterPair": GrammarRule {
            name: Identifier("ParameterPair", 6851..6864),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierAhead", 6871..6884),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierAhead", 6871..6884),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ParameterHint", 6886..6899),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ParameterHint", 6886..6899),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 6905..6915),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 6905..6915),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeHint", 6916..6924),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeHint", 6916..6924),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ParameterDefault", 6925..6941),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ParameterDefault", 6925..6941),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 6845..6943,
        },
        "ParameterHint": GrammarRule {
            name: Identifier("ParameterHint", 6955..6968),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[.]{2,3}|[~^]",
                        span: 6975..6990,
                    },
                },
            },
            range: 6944..6992,
        },
        "Continuation": GrammarRule {
            name: Identifier("Continuation", 6999..7011),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 7018..7021,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Statement", 7022..7031),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Statement", 7022..7031),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 7033..7036,
                                },
                            },
                        ],
                    },
                },
            },
            range: 6993..7038,
        },
        "KW_FUNCTION": GrammarRule {
            name: Identifier("KW_FUNCTION", 7061..7072),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Micro", 7099..7104),
                        ),
                        branch: Expression {
                            tag: Identifier("Micro", 7099..7104),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "micro|function",
                                span: 7081..7097,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Macro", 7129..7134),
                        ),
                        branch: Expression {
                            tag: Identifier("Macro", 7129..7134),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "macro",
                                span: 7111..7118,
                            },
                        },
                    },
                ],
            },
            range: 7039..7136,
        },
        "DefineVariable": GrammarRule {
            name: Identifier("DefineVariable", 7264..7278),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AnnotationTerm", 7285..7299),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AnnotationTerm", 7285..7299),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_LET", 7305..7311),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_LET", 7305..7311),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("LetPattern", 7312..7322),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("LetPattern", 7312..7322),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeHint", 7323..7331),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeHint", 7323..7331),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ParameterDefault", 7332..7348),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ParameterDefault", 7332..7348),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 7350..7353),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7258..7356,
        },
        "LetPattern": GrammarRule {
            name: Identifier("LetPattern", 7363..7373),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("StandardPattern", 7382..7397),
                        ),
                        branch: Expression {
                            tag: Identifier("StandardPattern", 7382..7397),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("StandardPattern", 7382..7397),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("BarePattern", 7404..7415),
                        ),
                        branch: Expression {
                            tag: Identifier("BarePattern", 7404..7415),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("BarePattern", 7404..7415),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7357..7417,
        },
        "StandardPattern": GrammarRule {
            name: Identifier("StandardPattern", 7541..7556),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TuplePattern", 7565..7577),
                        ),
                        branch: Expression {
                            tag: Identifier("TuplePattern", 7565..7577),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TuplePattern", 7565..7577),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7535..7579,
        },
        "BarePattern": GrammarRule {
            name: Identifier("BarePattern", 7607..7618),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("BarePatternItem", 7625..7640),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("BarePatternItem", 7625..7640),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("COMMA", 7643..7648),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: Identifier("BarePatternItem", 7649..7664),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("BarePatternItem", 7649..7664),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("COMMA", 7668..7673),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7601..7676,
        },
        "BarePatternItem": GrammarRule {
            name: Identifier("BarePatternItem", 7683..7698),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierAhead", 7705..7718),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierAhead", 7705..7718),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 7720..7730),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 7720..7730),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7677..7732,
        },
        "TuplePattern": GrammarRule {
            name: Identifier("TuplePattern", 7786..7798),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("Namepath", 7807..7815),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Namepath", 7807..7815),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "(",
                                                insensitive: false,
                                                range: 7817..7820,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("PatternItem", 7822..7833),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("PatternItem", 7822..7833),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ConcatExpression {
                                                                                        sequence: [
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("COMMA", 7836..7841),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: HIDE,
                                                                                            },
                                                                                            Expression {
                                                                                                tag: Identifier("PatternItem", 7842..7853),
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("PatternItem", 7842..7853),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 7857..7862),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ")",
                                                insensitive: false,
                                                range: 7866..7869,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("Namepath", 7876..7884),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Namepath", 7876..7884),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "{",
                                                insensitive: false,
                                                range: 7886..7889,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("PatternItem", 7891..7902),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("PatternItem", 7891..7902),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ConcatExpression {
                                                                                        sequence: [
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("COMMA", 7905..7910),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: HIDE,
                                                                                            },
                                                                                            Expression {
                                                                                                tag: Identifier("PatternItem", 7911..7922),
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("PatternItem", 7911..7922),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 7926..7931),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "}",
                                                insensitive: false,
                                                range: 7935..7938,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "[",
                                                insensitive: false,
                                                range: 7945..7948,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("PatternItem", 7950..7961),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("PatternItem", 7950..7961),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ConcatExpression {
                                                                                        sequence: [
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("COMMA", 7964..7969),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: HIDE,
                                                                                            },
                                                                                            Expression {
                                                                                                tag: Identifier("PatternItem", 7970..7981),
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("PatternItem", 7970..7981),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 7985..7990),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "]",
                                                insensitive: false,
                                                range: 7994..7997,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7780..7999,
        },
        "PatternItem": GrammarRule {
            name: Identifier("PatternItem", 8006..8017),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TuplePatternItem", 8026..8042),
                        ),
                        branch: Expression {
                            tag: Identifier("TuplePatternItem", 8026..8042),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TuplePatternItem", 8026..8042),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("OmitDict", 8056..8064),
                        ),
                        branch: Expression {
                            tag: Identifier("OmitDict", 8056..8064),
                            remark: false,
                            body: YggdrasilText {
                                text: "...",
                                insensitive: false,
                                range: 8049..8054,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("OmitList", 8078..8086),
                        ),
                        branch: Expression {
                            tag: Identifier("OmitList", 8078..8086),
                            remark: false,
                            body: YggdrasilText {
                                text: "..",
                                insensitive: false,
                                range: 8071..8075,
                            },
                        },
                    },
                ],
            },
            range: 8000..8088,
        },
        "TuplePatternItem": GrammarRule {
            name: Identifier("TuplePatternItem", 8095..8111),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AnnotationMix", 8118..8131),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AnnotationMix", 8118..8131),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ParameterHint", 8132..8145),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ParameterHint", 8132..8145),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 8147..8157),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 8147..8157),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("COLON", 8159..8164),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COLON", 8159..8164),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("StandardPattern", 8165..8180),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("StandardPattern", 8165..8180),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8089..8184,
        },
        "WhileStatement": GrammarRule {
            name: Identifier("WhileStatement", 8312..8326),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHILE", 8333..8341),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHILE", 8333..8341),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 8342..8358),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 8342..8358),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Continuation", 8360..8372),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Continuation", 8360..8372),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 8374..8377),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8306..8380,
        },
        "KW_WHILE": GrammarRule {
            name: Identifier("KW_WHILE", 8403..8411),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("While", 8429..8434),
                        ),
                        branch: Expression {
                            tag: Identifier("While", 8429..8434),
                            remark: false,
                            body: YggdrasilText {
                                text: "while",
                                insensitive: false,
                                range: 8420..8427,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Until", 8450..8455),
                        ),
                        branch: Expression {
                            tag: Identifier("Until", 8450..8455),
                            remark: false,
                            body: YggdrasilText {
                                text: "until",
                                insensitive: false,
                                range: 8441..8448,
                            },
                        },
                    },
                ],
            },
            range: 8381..8457,
        },
        "ForStatement": GrammarRule {
            name: Identifier("ForStatement", 8585..8597),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_FOR", 8604..8610),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 8604..8610),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("LetPattern", 8611..8621),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("LetPattern", 8611..8621),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_IN", 8622..8627),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IN", 8622..8627),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 8628..8644),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 8628..8644),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("IfGuard", 8646..8653),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfGuard", 8646..8653),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Continuation", 8654..8666),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Continuation", 8654..8666),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 8668..8671),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8579..8674,
        },
        "IfGuard": GrammarRule {
            name: Identifier("IfGuard", 8681..8688),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_IF", 8698..8703),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("condition", 8704..8713),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 8714..8730),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 1,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 8675..8734,
        },
        "ControlFlow": GrammarRule {
            name: Identifier("ControlFlow", 8862..8873),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AnnotationTerm", 8880..8894),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AnnotationTerm", 8880..8894),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_CONTROL", 8900..8910),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_CONTROL", 8900..8910),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("JumpLabel", 8911..8920),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("JumpLabel", 8911..8920),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("MainExpression", 8921..8935),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainExpression", 8921..8935),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8856..8938,
        },
        "JumpLabel": GrammarRule {
            name: Identifier("JumpLabel", 8952..8961),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "^",
                                            insensitive: false,
                                            range: 8969..8972,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 8973..8983),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 8973..8983),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 1,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 8939..8987,
        },
        "ExpressionRoot": GrammarRule {
            name: Identifier("ExpressionRoot", 9115..9129),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AnnotationTerm", 9136..9150),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AnnotationTerm", 9136..9150),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 9152..9166),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 9152..9166),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 9167..9178),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 9167..9178),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("EOS", 9180..9183),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 9180..9183),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9109..9186,
        },
        "MatchExpression": GrammarRule {
            name: Identifier("MatchExpression", 9314..9329),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_MATCH", 9336..9344),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_MATCH", 9336..9344),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ChoiceExpression {
                                    branches: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 9358..9368),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 9358..9368),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("BIND_L", 9369..9375),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("BIND_L", 9369..9375),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: HIDE,
                                                    },
                                                    Expression {
                                                        tag: Identifier("InlineExpression", 9378..9394),
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("InlineExpression", 9378..9394),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: Identifier("InlineExpression", 9405..9421),
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("InlineExpression", 9405..9421),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: HIDE,
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: Identifier("BIND_R", 9423..9429),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("BIND_R", 9423..9429),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 9430..9440),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 9430..9440),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MatchBlock", 9453..9463),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MatchBlock", 9453..9463),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9308..9465,
        },
        "SwitchStatement": GrammarRule {
            name: Identifier("SwitchStatement", 9472..9487),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_SWITCH", 9494..9503),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_SWITCH", 9494..9503),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MatchBlock", 9504..9514),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MatchBlock", 9504..9514),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9466..9516,
        },
        "MatchBlock": GrammarRule {
            name: Identifier("MatchBlock", 9523..9533),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 9540..9543,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MatchTerms", 9544..9554),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MatchTerms", 9544..9554),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 9556..9559,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9517..9561,
        },
        "MatchTerms": GrammarRule {
            name: Identifier("MatchTerms", 9568..9578),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MatchType", 9587..9596),
                        ),
                        branch: Expression {
                            tag: Identifier("MatchType", 9587..9596),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MatchType", 9587..9596),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MatchCase", 9603..9612),
                        ),
                        branch: Expression {
                            tag: Identifier("MatchCase", 9603..9612),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MatchCase", 9603..9612),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MatchWhen", 9619..9628),
                        ),
                        branch: Expression {
                            tag: Identifier("MatchWhen", 9619..9628),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MatchWhen", 9619..9628),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MatchElse", 9635..9644),
                        ),
                        branch: Expression {
                            tag: Identifier("MatchElse", 9635..9644),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MatchElse", 9635..9644),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Comma", 9651..9656),
                        ),
                        branch: Expression {
                            tag: Identifier("Comma", 9651..9656),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("COMMA", 9651..9656),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 9562..9658,
        },
        "MatchType": GrammarRule {
            name: Identifier("MatchType", 9665..9674),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_TYPE", 9681..9688),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_TYPE", 9681..9688),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeExpression", 9689..9703),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeExpression", 9689..9703),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("IfGuard", 9704..9711),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfGuard", 9704..9711),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 9713..9718),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MatchStatement", 9719..9733),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MatchStatement", 9719..9733),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9659..9736,
        },
        "MatchCase": GrammarRule {
            name: Identifier("MatchCase", 9743..9752),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_CASE", 9759..9766),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_CASE", 9759..9766),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("CasePattern", 9767..9778),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("CasePattern", 9767..9778),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("IfGuard", 9779..9786),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfGuard", 9779..9786),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 9788..9793),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MatchStatement", 9794..9808),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MatchStatement", 9794..9808),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9737..9811,
        },
        "CasePattern": GrammarRule {
            name: Identifier("CasePattern", 9818..9829),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("StandardPattern", 9838..9853),
                        ),
                        branch: Expression {
                            tag: Identifier("StandardPattern", 9838..9853),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("StandardPattern", 9838..9853),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Namepath", 9860..9868),
                        ),
                        branch: Expression {
                            tag: Identifier("Namepath", 9860..9868),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Namepath", 9860..9868),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 9812..9870,
        },
        "MatchWhen": GrammarRule {
            name: Identifier("MatchWhen", 9877..9886),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHEN", 9893..9900),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHEN", 9893..9900),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("InlineExpression", 9901..9917),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("InlineExpression", 9901..9917),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 9919..9924),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MatchStatement", 9925..9939),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MatchStatement", 9925..9939),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9871..9942,
        },
        "MatchElse": GrammarRule {
            name: Identifier("MatchElse", 9949..9958),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_ELSE", 9965..9972),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 9965..9972),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 9974..9979),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MatchStatement", 9980..9994),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MatchStatement", 9980..9994),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9943..9997,
        },
        "MatchStatement": GrammarRule {
            name: Identifier("MatchStatement", 10011..10025),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "type|case|when|else|[,，]",
                                            span: 10033..10061,
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Statement", 10066..10075),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Statement", 10066..10075),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9998..10077,
        },
        "KW_MATCH": GrammarRule {
            name: Identifier("KW_MATCH", 10100..10108),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Match", 10126..10131),
                        ),
                        branch: Expression {
                            tag: Identifier("Match", 10126..10131),
                            remark: false,
                            body: YggdrasilText {
                                text: "match",
                                insensitive: false,
                                range: 10117..10124,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Catch", 10147..10152),
                        ),
                        branch: Expression {
                            tag: Identifier("Catch", 10147..10152),
                            remark: false,
                            body: YggdrasilText {
                                text: "catch",
                                insensitive: false,
                                range: 10138..10145,
                            },
                        },
                    },
                ],
            },
            range: 10078..10154,
        },
        "BIND_L": GrammarRule {
            name: Identifier("BIND_L", 10184..10190),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "≔|:=",
                        span: 10192..10200,
                    },
                },
            },
            range: 10184..10200,
        },
        "BIND_R": GrammarRule {
            name: Identifier("BIND_R", 10205..10211),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "≕|=:",
                        span: 10213..10221,
                    },
                },
            },
            range: 10205..10221,
        },
        "DotMatchCall": GrammarRule {
            name: Identifier("DotMatchCall", 10358..10370),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 10377..10388),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 10377..10388),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("DOT", 10393..10396),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 10398..10408),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("KW_MATCH", 10410..10418),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_MATCH", 10410..10418),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("WhiteSpace", 10421..10431),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: Identifier("BIND_R", 10433..10439),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("BIND_R", 10433..10439),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("WhiteSpace", 10441..10451),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 10453..10463),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 10453..10463),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 10467..10477),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MatchBlock", 10479..10489),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MatchBlock", 10479..10489),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 10345..10491,
        },
        "MainExpression": GrammarRule {
            name: Identifier("MainExpression", 10626..10640),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("MainTerm", 10647..10655),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainTerm", 10647..10655),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 10662..10671),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 10662..10671),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainTerm", 10674..10682),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainTerm", 10674..10682),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 10613..10686,
        },
        "MainTerm": GrammarRule {
            name: Identifier("MainTerm", 10700..10708),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 10716..10726),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 10716..10726),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 10734..10744),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 10734..10744),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("MainSuffixTerm", 10745..10759),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainSuffixTerm", 10745..10759),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 10687..10762,
        },
        "MainFactor": GrammarRule {
            name: Identifier("MainFactor", 10770..10780),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SwitchStatement", 10789..10804),
                        ),
                        branch: Expression {
                            tag: Identifier("SwitchStatement", 10789..10804),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("SwitchStatement", 10789..10804),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TryStatement", 10811..10823),
                        ),
                        branch: Expression {
                            tag: Identifier("TryStatement", 10811..10823),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TryStatement", 10811..10823),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MatchExpression", 10830..10845),
                        ),
                        branch: Expression {
                            tag: Identifier("MatchExpression", 10830..10845),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MatchExpression", 10830..10845),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineLambda", 10852..10864),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineLambda", 10852..10864),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineLambda", 10852..10864),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ObjectStatement", 10871..10886),
                        ),
                        branch: Expression {
                            tag: Identifier("ObjectStatement", 10871..10886),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ObjectStatement", 10871..10886),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NewStatement", 10893..10905),
                        ),
                        branch: Expression {
                            tag: Identifier("NewStatement", 10893..10905),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("NewStatement", 10893..10905),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GroupFactor", 10912..10923),
                        ),
                        branch: Expression {
                            tag: Identifier("GroupFactor", 10912..10923),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("GroupFactor", 10912..10923),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Leading", 10930..10937),
                        ),
                        branch: Expression {
                            tag: Identifier("Leading", 10930..10937),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Leading", 10930..10937),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 10764..10939,
        },
        "GroupFactor": GrammarRule {
            name: Identifier("GroupFactor", 10953..10964),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 10971..10974,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 10977..10991),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 10977..10991),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 10994..10997,
                                },
                            },
                        ],
                    },
                },
            },
            range: 10940..10999,
        },
        "Leading": GrammarRule {
            name: Identifier("Leading", 11006..11013),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ProceduralCall", 11022..11036),
                        ),
                        branch: Expression {
                            tag: Identifier("ProceduralCall", 11022..11036),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ProceduralCall", 11022..11036),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TupleLiteralStrict", 11043..11061),
                        ),
                        branch: Expression {
                            tag: Identifier("TupleLiteralStrict", 11043..11061),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TupleLiteralStrict", 11043..11061),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeLiteral", 11068..11080),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeLiteral", 11068..11080),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeLiteral", 11068..11080),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextLiteral", 11087..11098),
                        ),
                        branch: Expression {
                            tag: Identifier("TextLiteral", 11087..11098),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextLiteral", 11087..11098),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Slot", 11105..11109),
                        ),
                        branch: Expression {
                            tag: Identifier("Slot", 11105..11109),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Slot", 11105..11109),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Number", 11116..11122),
                        ),
                        branch: Expression {
                            tag: Identifier("Number", 11116..11122),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Number", 11116..11122),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Special", 11129..11136),
                        ),
                        branch: Expression {
                            tag: Identifier("Special", 11129..11136),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Special", 11129..11136),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Namepath", 11143..11151),
                        ),
                        branch: Expression {
                            tag: Identifier("Namepath", 11143..11151),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Namepath", 11143..11151),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 11000..11153,
        },
        "MainSuffixTerm": GrammarRule {
            name: Identifier("MainSuffixTerm", 11183..11197),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DotMatchCall", 11227..11239),
                        ),
                        branch: Expression {
                            tag: Identifier("DotMatchCall", 11227..11239),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("DotMatchCall", 11211..11223),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DotMatchCall", 11211..11223),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DotClosureCall", 11267..11281),
                        ),
                        branch: Expression {
                            tag: Identifier("DotClosureCall", 11267..11281),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("DotClosureCall", 11251..11265),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DotClosureCall", 11251..11265),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TupleCall", 11288..11297),
                        ),
                        branch: Expression {
                            tag: Identifier("TupleCall", 11288..11297),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TupleCall", 11288..11297),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("InlineSuffixTerm", 11304..11320),
                        ),
                        branch: Expression {
                            tag: Identifier("InlineSuffixTerm", 11304..11320),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("InlineSuffixTerm", 11304..11320),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 11154..11322,
        },
        "MainPrefix": GrammarRule {
            name: Identifier("MainPrefix", 11488..11498),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[¬!+]\n    | [-]\n    | [.]{2,3}\n    | [⅟]\n    | [√∛∜]\n    | [&*]",
                        span: 11505..11585,
                    },
                },
            },
            range: 11444..11587,
        },
        "TypePrefix": GrammarRule {
            name: Identifier("TypePrefix", 11632..11642),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[-+¬]\n    | [~&]",
                        span: 11649..11674,
                    },
                },
            },
            range: 11588..11676,
        },
        "MainInfix": GrammarRule {
            name: Identifier("MainInfix", 11721..11730),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: true,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[+\\-*٪⁒÷/%]=?\n    | /%=? | %%=?\n    | [√^]\n    # start with ?, !, =\n    | [?]=\n    | !==|=!=|===|==|!=|=|[!≢≠≡]\n    # start with `<, >`\n    | <<<|<<=|<<|<=|[⋘≪⩽≤<]\n    | >>>|>>=|>>|>=|[⋙≫⩾≥>]\n    # start with &, |\n    | [&|]{1,3}\n    | [∧⊼⩟∨⊽⊻]\n    # start with .\n    | [.]{1,2}[<=]\n    | [.]=\n    | [∈∊∉∋∍∌]\n    | (not\\s+)?in\n    | is(\\s+not)?\n    # map, apply\n    | /@ | [⇴⨵⊕⟴] | @{2,3}",
                        span: 11739..12199,
                    },
                },
            },
            range: 11677..12201,
        },
        "TypeInfix": GrammarRule {
            name: Identifier("TypeInfix", 12246..12255),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[⟶]\n    | ->\n    | [-+&|∧∨]",
                        span: 12262..12303,
                    },
                },
            },
            range: 12202..12305,
        },
        "MainSuffix": GrammarRule {
            name: Identifier("MainSuffix", 12350..12360),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[!]\n    | [٪⁒%‰‱]\n    | [′″‴⁗]\n    | [℃℉]",
                        span: 12367..12435,
                    },
                },
            },
            range: 12306..12437,
        },
        "TypeSuffix": GrammarRule {
            name: Identifier("TypeSuffix", 12482..12492),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[!?]",
                        span: 12499..12505,
                    },
                },
            },
            range: 12438..12507,
        },
        "InlineExpression": GrammarRule {
            name: Identifier("InlineExpression", 12649..12665),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("InlineTerm", 12672..12682),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("InlineTerm", 12672..12682),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 12689..12698),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 12689..12698),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("InlineTerm", 12701..12711),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("InlineTerm", 12701..12711),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 12636..12715,
        },
        "InlineTerm": GrammarRule {
            name: Identifier("InlineTerm", 12729..12739),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 12747..12757),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 12747..12757),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 12765..12775),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 12765..12775),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineSuffixTerm", 12776..12792),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineSuffixTerm", 12776..12792),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 12716..12795,
        },
        "InlineSuffixTerm": GrammarRule {
            name: Identifier("InlineSuffixTerm", 12802..12818),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainSuffix", 12844..12854),
                        ),
                        branch: Expression {
                            tag: Identifier("MainSuffix", 12844..12854),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("MainSuffix", 12832..12842),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainSuffix", 12832..12842),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DotCall", 12878..12885),
                        ),
                        branch: Expression {
                            tag: Identifier("DotCall", 12878..12885),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("DotCall", 12866..12873),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DotCall", 12866..12873),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("InlineTupleCall", 12892..12907),
                        ),
                        branch: Expression {
                            tag: Identifier("InlineTupleCall", 12892..12907),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("InlineTupleCall", 12892..12907),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeCall", 12914..12923),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeCall", 12914..12923),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeCall", 12914..12923),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GenericCall", 12930..12941),
                        ),
                        branch: Expression {
                            tag: Identifier("GenericCall", 12930..12941),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("GenericCall", 12930..12941),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 12796..12943,
        },
        "TypeExpression": GrammarRule {
            name: Identifier("TypeExpression", 13078..13092),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TypeTerm", 13099..13107),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeTerm", 13099..13107),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("TypeInfix", 13114..13123),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypeInfix", 13114..13123),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("TypeTerm", 13126..13134),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypeTerm", 13126..13134),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 13065..13138,
        },
        "TypeTerm": GrammarRule {
            name: Identifier("TypeTerm", 13152..13160),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("TypePrefix", 13168..13178),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypePrefix", 13168..13178),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 13186..13196),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 13186..13196),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TypeSuffixTerm", 13197..13211),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeSuffixTerm", 13197..13211),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 13139..13214,
        },
        "TypeFactor": GrammarRule {
            name: Identifier("TypeFactor", 13228..13238),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TypeExpression", 13275..13289),
                        ),
                        branch: Expression {
                            tag: Identifier("TypeExpression", 13275..13289),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "(",
                                            insensitive: false,
                                            range: 13247..13250,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("TypeExpression", 13253..13267),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeExpression", 13253..13267),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ")",
                                            insensitive: false,
                                            range: 13270..13273,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Leading", 13296..13303),
                        ),
                        branch: Expression {
                            tag: Identifier("Leading", 13296..13303),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Leading", 13296..13303),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 13215..13305,
        },
        "TypeSuffixTerm": GrammarRule {
            name: Identifier("TypeSuffixTerm", 13312..13326),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GenericHide", 13335..13346),
                        ),
                        branch: Expression {
                            tag: Identifier("GenericHide", 13335..13346),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("GenericHide", 13335..13346),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TypeSuffix", 13353..13363),
                        ),
                        branch: Expression {
                            tag: Identifier("TypeSuffix", 13353..13363),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TypeSuffix", 13353..13363),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 13306..13365,
        },
        "TryStatement": GrammarRule {
            name: Identifier("TryStatement", 13493..13505),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_TRY", 13512..13518),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_TRY", 13512..13518),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TypeExpression", 13519..13533),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeExpression", 13519..13533),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Continuation", 13535..13547),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Continuation", 13535..13547),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 13487..13549,
        },
        "NewStatement": GrammarRule {
            name: Identifier("NewStatement", 13677..13689),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_NEW", 13696..13702),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_NEW", 13696..13702),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierAhead", 13703..13716),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierAhead", 13703..13716),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Namepath", 13718..13726),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 13718..13726),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("GenericHide", 13727..13738),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("GenericHide", 13727..13738),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TupleLiteral", 13740..13752),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TupleLiteral", 13740..13752),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("NewBlock", 13754..13762),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("NewBlock", 13754..13762),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 13765..13768),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 13671..13771,
        },
        "NewBlock": GrammarRule {
            name: Identifier("NewBlock", 13778..13786),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 13793..13796,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("NewPair", 13798..13805),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("NewPair", 13798..13805),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: Identifier("EOS_FREE", 13807..13815),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("EOS_FREE", 13807..13815),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("NewPair", 13816..13823),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("NewPair", 13816..13823),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: Identifier("EOS_FREE", 13826..13834),
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("EOS_FREE", 13826..13834),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 13838..13841,
                                },
                            },
                        ],
                    },
                },
            },
            range: 13772..13843,
        },
        "NewPair": GrammarRule {
            name: Identifier("NewPair", 13857..13864),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("NewPairKey", 13872..13882),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("NewPairKey", 13872..13882),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("COLON", 13885..13890),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COLON", 13885..13890),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainExpression", 13898..13912),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 13898..13912),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 13844..13914,
        },
        "NewPairKey": GrammarRule {
            name: Identifier("NewPairKey", 13921..13931),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 13940..13950),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 13940..13950),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 13940..13950),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextRaw", 13957..13964),
                        ),
                        branch: Expression {
                            tag: Identifier("TextRaw", 13957..13964),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextRaw", 13957..13964),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeLiteral", 13971..13983),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeLiteral", 13971..13983),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeLiteral", 13971..13983),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 13915..13985,
        },
        "DotCall": GrammarRule {
            name: Identifier("DotCall", 14120..14127),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 14134..14145),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 14134..14145),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("DOT", 14150..14153),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 14155..14165),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("DotCallItem", 14167..14178),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("DotCallItem", 14167..14178),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 14107..14180,
        },
        "DotCallItem": GrammarRule {
            name: Identifier("DotCallItem", 14187..14198),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Namepath", 14207..14215),
                        ),
                        branch: Expression {
                            tag: Identifier("Namepath", 14207..14215),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Namepath", 14207..14215),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Integer", 14222..14229),
                        ),
                        branch: Expression {
                            tag: Identifier("Integer", 14222..14229),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Integer", 14222..14229),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 14181..14231,
        },
        "DotClosureCall": GrammarRule {
            name: Identifier("DotClosureCall", 14366..14380),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 14387..14398),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 14387..14398),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("DOT", 14403..14406),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 14408..14418),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Continuation", 14420..14432),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Continuation", 14420..14432),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 14353..14434,
        },
        "InlineTupleCall": GrammarRule {
            name: Identifier("InlineTupleCall", 14569..14584),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 14592..14602),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 14604..14615),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 14604..14615),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 14618..14628),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("TupleLiteral", 14630..14642),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TupleLiteral", 14630..14642),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 14556..14644,
        },
        "TupleCall": GrammarRule {
            name: Identifier("TupleCall", 14658..14667),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 14675..14685),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 14687..14698),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 14687..14698),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 14701..14711),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ChoiceExpression {
                                    branches: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: Identifier("TupleLiteral", 14725..14737),
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("TupleLiteral", 14725..14737),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: UnaryExpression {
                                                                                base: Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("WhiteSpace", 14740..14750),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                operators: [
                                                                                    RepeatsBetween(
                                                                                        YggdrasilCounter {
                                                                                            min: 0,
                                                                                            max: 1,
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Continuation", 14752..14764),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Continuation", 14752..14764),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: Identifier("Continuation", 14777..14789),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Continuation", 14777..14789),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 14645..14797,
        },
        "TupleLiteral": GrammarRule {
            name: Identifier("TupleLiteral", 14804..14816),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 14823..14826,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TupleTerms", 14827..14837),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TupleTerms", 14827..14837),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 14838..14841,
                                },
                            },
                        ],
                    },
                },
            },
            range: 14798..14843,
        },
        "TupleLiteralStrict": GrammarRule {
            name: Identifier("TupleLiteralStrict", 14857..14875),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "(",
                                                insensitive: false,
                                                range: 14884..14887,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ")",
                                                insensitive: false,
                                                range: 14890..14893,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "(",
                                                insensitive: false,
                                                range: 14900..14903,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("TuplePair", 14906..14915),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("TuplePair", 14906..14915),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COMMA", 14919..14924),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ")",
                                                insensitive: false,
                                                range: 14927..14930,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "(",
                                                insensitive: false,
                                                range: 14937..14940,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("TuplePair", 14943..14952),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("TuplePair", 14943..14952),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("COMMA", 14960..14965),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: Identifier("TuplePair", 14968..14977),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TuplePair", 14968..14977),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("COMMA", 14987..14992),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ")",
                                                insensitive: false,
                                                range: 14997..15000,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 14844..15002,
        },
        "TupleTerms": GrammarRule {
            name: Identifier("TupleTerms", 15016..15026),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: Identifier("TuplePair", 15034..15043),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TuplePair", 15034..15043),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: ConcatExpression {
                                                    sequence: [
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 15051..15056),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: Identifier("TuplePair", 15059..15068),
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("TuplePair", 15059..15068),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            operators: [
                                                RepeatsBetween(
                                                    YggdrasilCounter {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ),
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: ConcatExpression {
                                                    sequence: [
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 15078..15083),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            operators: [
                                                RepeatsBetween(
                                                    YggdrasilCounter {
                                                        min: 0,
                                                        max: 1,
                                                    },
                                                ),
                                            ],
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 1,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 15003..15089,
        },
        "TuplePair": GrammarRule {
            name: Identifier("TuplePair", 15096..15105),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("TupleKey", 15113..15121),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TupleKey", 15113..15121),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("COLON", 15122..15127),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COLON", 15122..15127),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 15130..15144),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 15130..15144),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 15090..15146,
        },
        "TupleKey": GrammarRule {
            name: Identifier("TupleKey", 15153..15161),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 15170..15180),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 15170..15180),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 15170..15180),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Integer", 15187..15194),
                        ),
                        branch: Expression {
                            tag: Identifier("Integer", 15187..15194),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Integer", 15187..15194),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TextRaw", 15201..15208),
                        ),
                        branch: Expression {
                            tag: Identifier("TextRaw", 15201..15208),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TextRaw", 15201..15208),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 15147..15210,
        },
        "RangeCall": GrammarRule {
            name: Identifier("RangeCall", 15345..15354),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 15362..15372),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 15374..15385),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 15374..15385),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 15388..15398),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("RangeLiteral", 15400..15412),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("RangeLiteral", 15400..15412),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 15332..15414,
        },
        "RangeLiteral": GrammarRule {
            name: Identifier("RangeLiteral", 15421..15433),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeLiteralIndex0", 15442..15460),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeLiteralIndex0", 15442..15460),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeLiteralIndex0", 15442..15460),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeLiteralIndex1", 15467..15485),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeLiteralIndex1", 15467..15485),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeLiteralIndex1", 15467..15485),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 15415..15487,
        },
        "RangeLiteralIndex0": GrammarRule {
            name: Identifier("RangeLiteralIndex0", 15494..15512),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "⁅",
                                    insensitive: false,
                                    range: 15519..15524,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("SubscriptAxis", 15526..15539),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("SubscriptAxis", 15526..15539),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 15542..15547),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("SubscriptAxis", 15548..15561),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("SubscriptAxis", 15548..15561),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 15565..15570),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "⁆",
                                    insensitive: false,
                                    range: 15574..15579,
                                },
                            },
                        ],
                    },
                },
            },
            range: 15488..15581,
        },
        "RangeLiteralIndex1": GrammarRule {
            name: Identifier("RangeLiteralIndex1", 15588..15606),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "[",
                                    insensitive: false,
                                    range: 15613..15616,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("SubscriptAxis", 15618..15631),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("SubscriptAxis", 15618..15631),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 15634..15639),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("SubscriptAxis", 15640..15653),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("SubscriptAxis", 15640..15653),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 15657..15662),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "]",
                                    insensitive: false,
                                    range: 15666..15669,
                                },
                            },
                        ],
                    },
                },
            },
            range: 15582..15671,
        },
        "SubscriptAxis": GrammarRule {
            name: Identifier("SubscriptAxis", 15678..15691),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SubscriptRange", 15700..15714),
                        ),
                        branch: Expression {
                            tag: Identifier("SubscriptRange", 15700..15714),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("SubscriptRange", 15700..15714),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SubscriptOnly", 15721..15734),
                        ),
                        branch: Expression {
                            tag: Identifier("SubscriptOnly", 15721..15734),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("SubscriptOnly", 15721..15734),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 15672..15736,
        },
        "SubscriptOnly": GrammarRule {
            name: Identifier("SubscriptOnly", 15743..15756),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("index", 15763..15768),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("MainExpression", 15769..15783),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 15737..15785,
        },
        "SubscriptRange": GrammarRule {
            name: Identifier("SubscriptRange", 15799..15813),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("head", 15823..15827),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainExpression", 15828..15842),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ChoiceExpression {
                                    branches: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("RangeOmit", 15862..15871),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("step", 15878..15882),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("MainExpression", 15883..15897),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("COLON", 15910..15915),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("tail", 15922..15926),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("MainExpression", 15927..15941),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: UnaryExpression {
                                                                                base: Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ConcatExpression {
                                                                                        sequence: [
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: HIDE,
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("COLON", 15948..15953),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: UnaryExpression {
                                                                                                    base: Expression {
                                                                                                        tag: None,
                                                                                                        remark: false,
                                                                                                        body: ConcatExpression {
                                                                                                            sequence: [
                                                                                                                Expression {
                                                                                                                    tag: None,
                                                                                                                    remark: false,
                                                                                                                    body: HIDE,
                                                                                                                },
                                                                                                                Expression {
                                                                                                                    tag: Identifier("step", 15960..15964),
                                                                                                                    remark: false,
                                                                                                                    body: RuleReference {
                                                                                                                        name: Identifier("MainExpression", 15965..15979),
                                                                                                                        boxed: false,
                                                                                                                        inline: false,
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    operators: [
                                                                                                        RepeatsBetween(
                                                                                                            YggdrasilCounter {
                                                                                                                min: 0,
                                                                                                                max: 1,
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                operators: [
                                                                                    RepeatsBetween(
                                                                                        YggdrasilCounter {
                                                                                            min: 0,
                                                                                            max: 1,
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 15786..15993,
        },
        "RangeOmit": GrammarRule {
            name: Identifier("RangeOmit", 16014..16023),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: Identifier("PROPORTION", 16030..16040),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("PROPORTION", 16030..16040),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("COLON", 16043..16048),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 16043..16048),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("COLON", 16051..16056),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 16051..16056),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 15994..16058,
        },
        "DefineGeneric": GrammarRule {
            name: Identifier("DefineGeneric", 16186..16199),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("PROPORTION", 16208..16218),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION", 16208..16218),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "<",
                                                insensitive: false,
                                                range: 16220..16223,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("GenericParameter", 16224..16240),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("GenericParameter", 16224..16240),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ">",
                                                insensitive: false,
                                                range: 16241..16244,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟨",
                                                insensitive: false,
                                                range: 16251..16256,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("GenericParameter", 16257..16273),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("GenericParameter", 16257..16273),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟩",
                                                insensitive: false,
                                                range: 16274..16279,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 16180..16281,
        },
        "GenericParameter": GrammarRule {
            name: Identifier("GenericParameter", 16295..16311),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: Identifier("GenericParameterPair", 16319..16339),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("GenericParameterPair", 16319..16339),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: ConcatExpression {
                                                    sequence: [
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 16347..16352),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: Identifier("GenericParameterPair", 16355..16375),
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("GenericParameterPair", 16355..16375),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            operators: [
                                                RepeatsBetween(
                                                    YggdrasilCounter {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ),
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: ConcatExpression {
                                                    sequence: [
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 16385..16390),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            operators: [
                                                RepeatsBetween(
                                                    YggdrasilCounter {
                                                        min: 0,
                                                        max: 1,
                                                    },
                                                ),
                                            ],
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 1,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 16282..16396,
        },
        "GenericParameterPair": GrammarRule {
            name: Identifier("GenericParameterPair", 16403..16423),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 16430..16440),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 16430..16440),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("COLON", 16443..16448),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: Identifier("bound", 16449..16454),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypeExpression", 16455..16469),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilText {
                                                                    text: "=",
                                                                    insensitive: false,
                                                                    range: 16473..16476,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: Identifier("default", 16477..16484),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypeExpression", 16485..16499),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 16397..16503,
        },
        "GenericCall": GrammarRule {
            name: Identifier("GenericCall", 16631..16642),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 16649..16660),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 16649..16660),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ChoiceExpression {
                                    branches: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: Identifier("PROPORTION", 16674..16684),
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("PROPORTION", 16674..16684),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: HIDE,
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: YggdrasilText {
                                                            text: "<",
                                                            insensitive: false,
                                                            range: 16685..16688,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: HIDE,
                                                    },
                                                    Expression {
                                                        tag: Identifier("GenericTerms", 16689..16701),
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("GenericTerms", 16689..16701),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: HIDE,
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: YggdrasilText {
                                                            text: ">",
                                                            insensitive: false,
                                                            range: 16702..16705,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: YggdrasilText {
                                                            text: "⟨",
                                                            insensitive: false,
                                                            range: 16716..16721,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: HIDE,
                                                    },
                                                    Expression {
                                                        tag: Identifier("GenericTerms", 16722..16734),
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("GenericTerms", 16722..16734),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: HIDE,
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: YggdrasilText {
                                                            text: "⟩",
                                                            insensitive: false,
                                                            range: 16735..16740,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("PROPORTION", 16752..16762),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION", 16752..16762),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Namepath", 16763..16771),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Namepath", 16763..16771),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 16625..16775,
        },
        "GenericHide": GrammarRule {
            name: Identifier("GenericHide", 16782..16793),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("PROPORTION", 16802..16812),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION", 16802..16812),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "<",
                                                insensitive: false,
                                                range: 16814..16817,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("GenericTerms", 16818..16830),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("GenericTerms", 16818..16830),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ">",
                                                insensitive: false,
                                                range: 16831..16834,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟨",
                                                insensitive: false,
                                                range: 16841..16846,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("GenericTerms", 16847..16859),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("GenericTerms", 16847..16859),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟩",
                                                insensitive: false,
                                                range: 16860..16865,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 16776..16867,
        },
        "GenericTerms": GrammarRule {
            name: Identifier("GenericTerms", 16881..16893),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: Identifier("GenericPair", 16901..16912),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("GenericPair", 16901..16912),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: ConcatExpression {
                                                    sequence: [
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 16920..16925),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: Identifier("GenericPair", 16928..16939),
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("GenericPair", 16928..16939),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            operators: [
                                                RepeatsBetween(
                                                    YggdrasilCounter {
                                                        min: 0,
                                                        max: 4294967295,
                                                    },
                                                ),
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: ConcatExpression {
                                                    sequence: [
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: HIDE,
                                                        },
                                                        Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 16949..16954),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                            operators: [
                                                RepeatsBetween(
                                                    YggdrasilCounter {
                                                        min: 0,
                                                        max: 1,
                                                    },
                                                ),
                                            ],
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 1,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 16868..16960,
        },
        "GenericPair": GrammarRule {
            name: Identifier("GenericPair", 16967..16978),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("Identifier", 16986..16996),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 16986..16996),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("COLON", 16997..17002),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COLON", 16997..17002),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeExpression", 17005..17019),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeExpression", 17005..17019),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 16961..17021,
        },
        "AnnotationHead": GrammarRule {
            name: Identifier("AnnotationHead", 17149..17163),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AnnotationTerm", 17170..17184),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AnnotationTerm", 17170..17184),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierCall", 17186..17198),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierCall", 17186..17198),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 17143..17201,
        },
        "AnnotationMix": GrammarRule {
            name: Identifier("AnnotationMix", 17208..17221),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AnnotationTermMix", 17228..17245),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AnnotationTermMix", 17228..17245),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierAhead", 17247..17260),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierAhead", 17247..17260),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 17202..17263,
        },
        "AnnotationTerm": GrammarRule {
            name: Identifier("AnnotationTerm", 17270..17284),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("AttributeList", 17293..17306),
                        ),
                        branch: Expression {
                            tag: Identifier("AttributeList", 17293..17306),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("AttributeList", 17293..17306),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("AttributeCall", 17313..17326),
                        ),
                        branch: Expression {
                            tag: Identifier("AttributeCall", 17313..17326),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("AttributeCall", 17313..17326),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 17264..17328,
        },
        "AnnotationTermMix": GrammarRule {
            name: Identifier("AnnotationTermMix", 17335..17352),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("AttributeList", 17361..17374),
                        ),
                        branch: Expression {
                            tag: Identifier("AttributeList", 17361..17374),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("AttributeList", 17361..17374),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("AttributeCall", 17381..17394),
                        ),
                        branch: Expression {
                            tag: Identifier("AttributeCall", 17381..17394),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("AttributeCall", 17381..17394),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ProceduralCall", 17401..17415),
                        ),
                        branch: Expression {
                            tag: Identifier("ProceduralCall", 17401..17415),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ProceduralCall", 17401..17415),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 17329..17417,
        },
        "AttributeList": GrammarRule {
            name: Identifier("AttributeList", 17424..17437),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "#",
                                    insensitive: false,
                                    range: 17444..17447,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "[",
                                    insensitive: false,
                                    range: 17448..17451,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("AttributeItem", 17453..17466),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeItem", 17453..17466),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("EOS_FREE", 17474..17482),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("AttributeItem", 17485..17498),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("AttributeItem", 17485..17498),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("EOS_FREE", 17508..17516),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "]",
                                    insensitive: false,
                                    range: 17521..17524,
                                },
                            },
                        ],
                    },
                },
            },
            range: 17418..17526,
        },
        "AttributeCall": GrammarRule {
            name: Identifier("AttributeCall", 17573..17586),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "#",
                                    insensitive: false,
                                    range: 17593..17596,
                                },
                            },
                            Expression {
                                tag: Identifier("AttributeItem", 17597..17610),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AttributeItem", 17597..17610),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 17560..17612,
        },
        "AttributeItem": GrammarRule {
            name: Identifier("AttributeItem", 17619..17632),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Namepath", 17639..17647),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 17639..17647),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("DOT", 17650..17653),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 17654..17664),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 17654..17664),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TupleLiteral", 17671..17683),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TupleLiteral", 17671..17683),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Continuation", 17685..17697),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Continuation", 17685..17697),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 17613..17700,
        },
        "AttributeName": GrammarRule {
            name: Identifier("AttributeName", 17714..17727),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "#",
                                    insensitive: false,
                                    range: 17734..17737,
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 17738..17748),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 17738..17748),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 17701..17750,
        },
        "ProceduralCall": GrammarRule {
            name: Identifier("ProceduralCall", 17789..17803),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "@",
                                    insensitive: false,
                                    range: 17810..17813,
                                },
                            },
                            Expression {
                                tag: Identifier("Namepath", 17814..17822),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 17814..17822),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TupleLiteral", 17825..17837),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TupleLiteral", 17825..17837),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Continuation", 17841..17853),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Continuation", 17841..17853),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 17776..17856,
        },
        "ProceduralName": GrammarRule {
            name: Identifier("ProceduralName", 17870..17884),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "@",
                                    insensitive: false,
                                    range: 17891..17894,
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 17895..17905),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 17895..17905),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 17857..17907,
        },
        "TextLiteral": GrammarRule {
            name: Identifier("TextLiteral", 18040..18051),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("Identifier", 18058..18068),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 18058..18068),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("TextRaw", 18070..18077),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TextRaw", 18070..18077),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 18027..18079,
        },
        "TextRaw": GrammarRule {
            name: Identifier("TextRaw", 18116..18123),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "\"\"\"\"",
                                                insensitive: false,
                                                range: 18132..18138,
                                            },
                                        },
                                        Expression {
                                            tag: Identifier("TEXT_CONTENT5", 18139..18152),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("TEXT_CONTENT5", 18139..18152),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "\"\"\"\"",
                                                insensitive: false,
                                                range: 18153..18159,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "''''",
                                                insensitive: false,
                                                range: 18166..18172,
                                            },
                                        },
                                        Expression {
                                            tag: Identifier("TEXT_CONTENT6", 18173..18186),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("TEXT_CONTENT6", 18173..18186),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "''''",
                                                insensitive: false,
                                                range: 18187..18193,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "\"\"\"",
                                                insensitive: false,
                                                range: 18200..18205,
                                            },
                                        },
                                        Expression {
                                            tag: Identifier("TEXT_CONTENT3", 18206..18219),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("TEXT_CONTENT3", 18206..18219),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "\"\"\"",
                                                insensitive: false,
                                                range: 18220..18225,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "'''",
                                                insensitive: false,
                                                range: 18232..18237,
                                            },
                                        },
                                        Expression {
                                            tag: Identifier("TEXT_CONTENT4", 18238..18251),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("TEXT_CONTENT4", 18238..18251),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "'''",
                                                insensitive: false,
                                                range: 18252..18257,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "\"",
                                                insensitive: false,
                                                range: 18264..18267,
                                            },
                                        },
                                        Expression {
                                            tag: Identifier("TEXT_CONTENT1", 18268..18281),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("TEXT_CONTENT1", 18268..18281),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "\"",
                                                insensitive: false,
                                                range: 18282..18285,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "'",
                                                insensitive: false,
                                                range: 18292..18295,
                                            },
                                        },
                                        Expression {
                                            tag: Identifier("TEXT_CONTENT2", 18296..18309),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("TEXT_CONTENT2", 18296..18309),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "'",
                                                insensitive: false,
                                                range: 18310..18313,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 18080..18315,
        },
        "Text_L": GrammarRule {
            name: Identifier("Text_L", 18327..18333),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: HIDE,
                },
            },
            range: 18316..18342,
        },
        "Text_R": GrammarRule {
            name: Identifier("Text_R", 18354..18360),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: HIDE,
                },
            },
            range: 18343..18369,
        },
        "Text_X": GrammarRule {
            name: Identifier("Text_X", 18381..18387),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: HIDE,
                },
            },
            range: 18370..18396,
        },
        "TEXT_CONTENT1": GrammarRule {
            name: Identifier("TEXT_CONTENT1", 18415..18428),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[^\"]",
                                span: 18431..18435,
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 18397..18438,
        },
        "TEXT_CONTENT2": GrammarRule {
            name: Identifier("TEXT_CONTENT2", 18457..18470),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[^']",
                                span: 18473..18477,
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 18439..18480,
        },
        "TEXT_CONTENT3": GrammarRule {
            name: Identifier("TEXT_CONTENT3", 18499..18512),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: YggdrasilText {
                                                    text: "\"\"\"",
                                                    insensitive: false,
                                                    range: 18517..18522,
                                                },
                                            },
                                            operators: [
                                                Negative,
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ANY,
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 1,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 18481..18530,
        },
        "TEXT_CONTENT4": GrammarRule {
            name: Identifier("TEXT_CONTENT4", 18549..18562),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: YggdrasilText {
                                                    text: "'''",
                                                    insensitive: false,
                                                    range: 18567..18572,
                                                },
                                            },
                                            operators: [
                                                Negative,
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ANY,
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 1,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 18531..18580,
        },
        "TEXT_CONTENT5": GrammarRule {
            name: Identifier("TEXT_CONTENT5", 18599..18612),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: YggdrasilText {
                                                    text: "\"\"\"\"",
                                                    insensitive: false,
                                                    range: 18617..18623,
                                                },
                                            },
                                            operators: [
                                                Negative,
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ANY,
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 1,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 18581..18631,
        },
        "TEXT_CONTENT6": GrammarRule {
            name: Identifier("TEXT_CONTENT6", 18650..18663),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: UnaryExpression {
                                            base: Expression {
                                                tag: None,
                                                remark: false,
                                                body: YggdrasilText {
                                                    text: "''''",
                                                    insensitive: false,
                                                    range: 18668..18674,
                                                },
                                            },
                                            operators: [
                                                Negative,
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ANY,
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 1,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 18632..18682,
        },
        "ModifierCall": GrammarRule {
            name: Identifier("ModifierCall", 18815..18827),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KEYWORDS_STOP", 18837..18850),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 18852..18862),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 18852..18862),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 18802..18864,
        },
        "ModifierAhead": GrammarRule {
            name: Identifier("ModifierAhead", 18878..18891),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("IDENTIFIER_STOP", 18917..18932),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 18934..18944),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 18934..18944),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 18865..18946,
        },
        "KEYWORDS_STOP": GrammarRule {
            name: Identifier("KEYWORDS_STOP", 18969..18982),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "template | generic | constraint\n    | class | structure\n    | enumerate | flags | union\n    | function | micro | macro\n    | trait | interface\n    | extends?",
                        span: 18989..19154,
                    },
                },
            },
            range: 18947..19156,
        },
        "IDENTIFIER_STOP": GrammarRule {
            name: Identifier("IDENTIFIER_STOP", 19186..19201),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 19208..19218),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 19208..19218),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilRegex {
                                    raw: "[\\[\\](){}<>⟨:∷,.;∈=]|in|is",
                                    span: 19221..19255,
                                },
                            },
                        ],
                    },
                },
            },
            range: 19157..19257,
        },
        "Slot": GrammarRule {
            name: Identifier("Slot", 19392..19396),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("OP_SLOT", 19403..19410),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("OP_SLOT", 19403..19410),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("SlotItem", 19411..19419),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SlotItem", 19411..19419),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 19379..19422,
        },
        "SlotItem": GrammarRule {
            name: Identifier("SlotItem", 19429..19437),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Integer", 19446..19453),
                        ),
                        branch: Expression {
                            tag: Identifier("Integer", 19446..19453),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Integer", 19446..19453),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 19460..19470),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 19460..19470),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 19460..19470),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 19423..19472,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 19486..19498),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 19506..19516),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 19506..19516),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION2", 19524..19535),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 19538..19548),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 19538..19548),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 19473..19552,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 19566..19574),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 19581..19591),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 19581..19591),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION", 19599..19609),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 19612..19622),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 19612..19622),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 19553..19626,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 19640..19650),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierBare", 19659..19673),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierBare", 19659..19673),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierBare", 19659..19673),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierRaw", 19680..19693),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierRaw", 19680..19693),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierRaw", 19680..19693),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 19627..19695,
        },
        "IdentifierBare": GrammarRule {
            name: Identifier("IdentifierBare", 19707..19721),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 19728..19763,
                    },
                },
            },
            range: 19696..19765,
        },
        "IdentifierRaw": GrammarRule {
            name: Identifier("IdentifierRaw", 19779..19792),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 19799..19802,
                                },
                            },
                            Expression {
                                tag: Identifier("IdentifierRawText", 19803..19820),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IdentifierRawText", 19803..19820),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 19821..19824,
                                },
                            },
                        ],
                    },
                },
            },
            range: 19766..19826,
        },
        "IdentifierRawText": GrammarRule {
            name: Identifier("IdentifierRawText", 19838..19855),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[^`]",
                                            span: 19862..19866,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 1,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 19827..19869,
        },
        "Special": GrammarRule {
            name: Identifier("Special", 19881..19888),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[∅∞]|true|false|[?]{3}",
                        span: 19895..19923,
                    },
                },
            },
            range: 19870..19925,
        },
        "Number": GrammarRule {
            name: Identifier("Number", 20053..20059),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DecimalX", 20068..20076),
                        ),
                        branch: Expression {
                            tag: Identifier("DecimalX", 20068..20076),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DecimalX", 20068..20076),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Decimal", 20083..20090),
                        ),
                        branch: Expression {
                            tag: Identifier("Decimal", 20083..20090),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Decimal", 20083..20090),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 20047..20092,
        },
        "Sign": GrammarRule {
            name: Identifier("Sign", 20099..20103),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Positive", 20117..20125),
                        ),
                        branch: Expression {
                            tag: Identifier("Positive", 20117..20125),
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 20112..20115,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Netative", 20137..20145),
                        ),
                        branch: Expression {
                            tag: Identifier("Netative", 20137..20145),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 20132..20135,
                            },
                        },
                    },
                ],
            },
            range: 20093..20147,
        },
        "Integer": GrammarRule {
            name: Identifier("Integer", 20159..20166),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-9](_*[0-9])*",
                        span: 20173..20190,
                    },
                },
            },
            range: 20148..20192,
        },
        "DigitsX": GrammarRule {
            name: Identifier("DigitsX", 20204..20211),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-9a-zA-Z](_*[0-9a-zA-Z])*",
                        span: 20218..20247,
                    },
                },
            },
            range: 20193..20249,
        },
        "Decimal": GrammarRule {
            name: Identifier("Decimal", 20263..20270),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("lhs", 20280..20283),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Integer", 20284..20291),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("dot", 20293..20296),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("DOT", 20297..20300),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: Identifier("rhs", 20301..20304),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Integer", 20305..20312),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: YggdrasilRegex {
                                                                    raw: "[⁑]|[*]{2}",
                                                                    span: 20321..20335,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: Identifier("sign", 20337..20341),
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("Sign", 20342..20346),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: Identifier("shift", 20349..20354),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Integer", 20355..20362),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilRegex {
                                                        raw: "[_]*",
                                                        span: 20370..20376,
                                                    },
                                                },
                                                Expression {
                                                    tag: Identifier("unit", 20377..20381),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 20382..20392),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 20250..20396,
        },
        "DecimalX": GrammarRule {
            name: Identifier("DecimalX", 20410..20418),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("base", 20427..20431),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Integer", 20432..20439),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[⁂]|[*]{3}",
                                                span: 20440..20454,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("lhs", 20460..20463),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("DigitsX", 20464..20471),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("dot", 20473..20476),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("DOT", 20477..20480),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: Identifier("rhs", 20481..20484),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("DigitsX", 20485..20492),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilRegex {
                                                        raw: "[⁑]|[*]{2}",
                                                        span: 20501..20515,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: UnaryExpression {
                                                                                base: Expression {
                                                                                    tag: Identifier("sign", 20529..20533),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("Sign", 20534..20538),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                operators: [
                                                                                    RepeatsBetween(
                                                                                        YggdrasilCounter {
                                                                                            min: 0,
                                                                                            max: 1,
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("shift", 20541..20546),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Integer", 20547..20554),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: UnaryExpression {
                                                                                base: Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ConcatExpression {
                                                                                        sequence: [
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: YggdrasilRegex {
                                                                                                    raw: "[_]*",
                                                                                                    span: 20556..20562,
                                                                                                },
                                                                                            },
                                                                                            Expression {
                                                                                                tag: Identifier("unit", 20563..20567),
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("Identifier", 20568..20578),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                operators: [
                                                                                    RepeatsBetween(
                                                                                        YggdrasilCounter {
                                                                                            min: 0,
                                                                                            max: 1,
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("unit", 20591..20595),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 20596..20606),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 20397..20616,
        },
        "PROPORTION": GrammarRule {
            name: Identifier("PROPORTION", 20773..20783),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "∷|::",
                        span: 20785..20793,
                    },
                },
            },
            range: 20773..20793,
        },
        "NS_CONCAT": GrammarRule {
            name: Identifier("NS_CONCAT", 20798..20807),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[.∷]|::",
                        span: 20809..20820,
                    },
                },
            },
            range: 20798..20820,
        },
        "COLON": GrammarRule {
            name: Identifier("COLON", 20825..20830),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[:：]",
                        span: 20832..20838,
                    },
                },
            },
            range: 20825..20838,
        },
        "ARROW1": GrammarRule {
            name: Identifier("ARROW1", 20843..20849),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[:：⟶]|->",
                        span: 20851..20865,
                    },
                },
            },
            range: 20843..20865,
        },
        "COMMA": GrammarRule {
            name: Identifier("COMMA", 20870..20875),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，]",
                        span: 20877..20883,
                    },
                },
            },
            range: 20870..20883,
        },
        "DOT": GrammarRule {
            name: Identifier("DOT", 20888..20891),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[.．]",
                        span: 20895..20901,
                    },
                },
            },
            range: 20888..20901,
        },
        "OP_SLOT": GrammarRule {
            name: Identifier("OP_SLOT", 20906..20913),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[$]{1,3}",
                        span: 20915..20925,
                    },
                },
            },
            range: 20906..20925,
        },
        "OFFSET_L": GrammarRule {
            name: Identifier("OFFSET_L", 20946..20954),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "⁅",
                        insensitive: false,
                        range: 20956..20961,
                    },
                },
            },
            range: 20946..20961,
        },
        "OFFSET_R": GrammarRule {
            name: Identifier("OFFSET_R", 20966..20974),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "⁆",
                        insensitive: false,
                        range: 20976..20981,
                    },
                },
            },
            range: 20966..20981,
        },
        "PROPORTION2": GrammarRule {
            name: Identifier("PROPORTION2", 20990..21001),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[.．∷]|::",
                        span: 21022..21036,
                    },
                },
            },
            range: 20984..21038,
        },
        "OP_IMPORT_ALL": GrammarRule {
            name: Identifier("OP_IMPORT_ALL", 21083..21096),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "*",
                        insensitive: false,
                        range: 21098..21101,
                    },
                },
            },
            range: 21083..21101,
        },
        "OP_AND_THEN": GrammarRule {
            name: Identifier("OP_AND_THEN", 21106..21117),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "?",
                        insensitive: false,
                        range: 21119..21122,
                    },
                },
            },
            range: 21106..21122,
        },
        "OP_BIND": GrammarRule {
            name: Identifier("OP_BIND", 21127..21134),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "≔|:=",
                        span: 21136..21144,
                    },
                },
            },
            range: 21127..21144,
        },
        "KW_CONTROL": GrammarRule {
            name: Identifier("KW_CONTROL", 21190..21200),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "continue\n    | break\n    | fallthrough!?\n    | raise | throw\n    | return\n    | resume\n    | yield\\s+break\n    | yield\\s+from\n    | yield\\s+wait\n    | yield(\\s+return)?",
                        span: 21207..21383,
                    },
                },
            },
            range: 21147..21385,
        },
        "KW_NAMESPACE": GrammarRule {
            name: Identifier("KW_NAMESPACE", 21430..21442),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "namespace",
                        insensitive: false,
                        range: 21444..21455,
                    },
                },
            },
            range: 21430..21455,
        },
        "KW_IMPORT": GrammarRule {
            name: Identifier("KW_IMPORT", 21460..21469),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "using",
                        insensitive: false,
                        range: 21471..21478,
                    },
                },
            },
            range: 21460..21478,
        },
        "KW_CONSTRAINT": GrammarRule {
            name: Identifier("KW_CONSTRAINT", 21604..21617),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "template|generic|constraint|∀",
                        span: 21619..21652,
                    },
                },
            },
            range: 21604..21652,
        },
        "KW_WHERE": GrammarRule {
            name: Identifier("KW_WHERE", 21657..21665),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "where",
                        insensitive: false,
                        range: 21667..21674,
                    },
                },
            },
            range: 21657..21674,
        },
        "KW_IMPLEMENTS": GrammarRule {
            name: Identifier("KW_IMPLEMENTS", 21679..21692),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "implements?",
                        span: 21694..21707,
                    },
                },
            },
            range: 21679..21707,
        },
        "KW_EXTENDS": GrammarRule {
            name: Identifier("KW_EXTENDS", 21712..21722),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "extends?",
                        span: 21724..21734,
                    },
                },
            },
            range: 21712..21734,
        },
        "KW_INHERITS": GrammarRule {
            name: Identifier("KW_INHERITS", 21739..21750),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "inherits?",
                        span: 21752..21763,
                    },
                },
            },
            range: 21739..21763,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 21889..21895),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "for",
                        insensitive: false,
                        range: 21897..21902,
                    },
                },
            },
            range: 21889..21902,
        },
        "KW_END": GrammarRule {
            name: Identifier("KW_END", 21907..21913),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "end",
                        insensitive: false,
                        range: 21915..21920,
                    },
                },
            },
            range: 21907..21920,
        },
        "KW_LET": GrammarRule {
            name: Identifier("KW_LET", 22046..22052),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "let",
                        insensitive: false,
                        range: 22054..22059,
                    },
                },
            },
            range: 22046..22059,
        },
        "KW_NEW": GrammarRule {
            name: Identifier("KW_NEW", 22064..22070),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "new",
                        insensitive: false,
                        range: 22072..22077,
                    },
                },
            },
            range: 22064..22077,
        },
        "KW_OBJECT": GrammarRule {
            name: Identifier("KW_OBJECT", 22082..22091),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "object",
                        insensitive: false,
                        range: 22093..22101,
                    },
                },
            },
            range: 22082..22101,
        },
        "KW_LAMBDA": GrammarRule {
            name: Identifier("KW_LAMBDA", 22106..22115),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "lambda",
                        insensitive: false,
                        range: 22117..22125,
                    },
                },
            },
            range: 22106..22125,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 22251..22256),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "if",
                        insensitive: false,
                        range: 22258..22262,
                    },
                },
            },
            range: 22251..22262,
        },
        "KW_SWITCH": GrammarRule {
            name: Identifier("KW_SWITCH", 22267..22276),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "switch",
                        insensitive: false,
                        range: 22278..22286,
                    },
                },
            },
            range: 22267..22286,
        },
        "KW_TRY": GrammarRule {
            name: Identifier("KW_TRY", 22291..22297),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "try",
                        insensitive: false,
                        range: 22299..22304,
                    },
                },
            },
            range: 22291..22304,
        },
        "KW_TYPE": GrammarRule {
            name: Identifier("KW_TYPE", 22309..22316),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "type",
                        insensitive: false,
                        range: 22318..22324,
                    },
                },
            },
            range: 22309..22324,
        },
        "KW_CASE": GrammarRule {
            name: Identifier("KW_CASE", 22329..22336),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "case",
                        insensitive: false,
                        range: 22338..22344,
                    },
                },
            },
            range: 22329..22344,
        },
        "KW_WHEN": GrammarRule {
            name: Identifier("KW_WHEN", 22349..22356),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "when",
                        insensitive: false,
                        range: 22358..22364,
                    },
                },
            },
            range: 22349..22364,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 22369..22376),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "else",
                        insensitive: false,
                        range: 22378..22384,
                    },
                },
            },
            range: 22369..22384,
        },
        "KW_NOT": GrammarRule {
            name: Identifier("KW_NOT", 22510..22516),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "not",
                        insensitive: false,
                        range: 22518..22523,
                    },
                },
            },
            range: 22510..22523,
        },
        "KW_IN": GrammarRule {
            name: Identifier("KW_IN", 22528..22533),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "in|∈",
                        span: 22535..22543,
                    },
                },
            },
            range: 22528..22543,
        },
        "KW_IS": GrammarRule {
            name: Identifier("KW_IS", 22548..22553),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "is",
                        insensitive: false,
                        range: 22555..22559,
                    },
                },
            },
            range: 22548..22559,
        },
        "KW_AS": GrammarRule {
            name: Identifier("KW_AS", 22564..22569),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "as",
                        insensitive: false,
                        range: 22571..22575,
                    },
                },
            },
            range: 22564..22575,
        },
        "Shebang": GrammarRule {
            name: Identifier("Shebang", 22712..22719),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "#!",
                                    insensitive: false,
                                    range: 22726..22730,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: REST_OF_LINE,
                            },
                        ],
                    },
                },
            },
            range: 22699..22736,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 22759..22769),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[^\\S\\r\\n]+",
                        span: 22776..22789,
                    },
                },
            },
            range: 22737..22791,
        },
        "SkipSpace": GrammarRule {
            name: Identifier("SkipSpace", 22819..22828),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: true,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 22835..22853,
                    },
                },
            },
            range: 22792..22855,
        },
        "Comment": GrammarRule {
            name: Identifier("Comment", 22883..22890),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: true,
                styles: [
                    "comment",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "//",
                                                insensitive: false,
                                                range: 22899..22903,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: REST_OF_LINE,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "/*",
                                                insensitive: false,
                                                range: 22914..22918,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "*/",
                                                insensitive: false,
                                                range: 22919..22923,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 22856..22925,
        },
        "StringInterpolations": GrammarRule {
            name: Identifier("StringInterpolations", 23302..23322),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("StringInterpolationTerm", 23329..23352),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("StringInterpolationTerm", 23329..23352),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: END_OF_INPUT,
                            },
                        ],
                    },
                },
            },
            range: 23289..23359,
        },
        "StringInterpolationTerm": GrammarRule {
            name: Identifier("StringInterpolationTerm", 23366..23389),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EscapeUnicode", 23398..23411),
                        ),
                        branch: Expression {
                            tag: Identifier("EscapeUnicode", 23398..23411),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EscapeUnicode", 23398..23411),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EscapeCharacter", 23418..23433),
                        ),
                        branch: Expression {
                            tag: Identifier("EscapeCharacter", 23418..23433),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EscapeCharacter", 23418..23433),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("StringInterpolationSimple", 23440..23465),
                        ),
                        branch: Expression {
                            tag: Identifier("StringInterpolationSimple", 23440..23465),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("StringInterpolationSimple", 23440..23465),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("StringInterpolationComplex", 23472..23498),
                        ),
                        branch: Expression {
                            tag: Identifier("StringInterpolationComplex", 23472..23498),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("StringInterpolationComplex", 23472..23498),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("StringInterpolationText", 23505..23528),
                        ),
                        branch: Expression {
                            tag: Identifier("StringInterpolationText", 23505..23528),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("StringInterpolationText", 23505..23528),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 23360..23530,
        },
        "EscapeCharacter": GrammarRule {
            name: Identifier("EscapeCharacter", 23549..23564),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\\\.|\\{\\{|\\}\\}",
                        span: 23571..23588,
                    },
                },
            },
            range: 23531..23590,
        },
        "EscapeUnicode": GrammarRule {
            name: Identifier("EscapeUnicode", 23604..23617),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "\\u",
                                                insensitive: false,
                                                range: 23624..23628,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "{",
                                                insensitive: false,
                                                range: 23629..23632,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("code", 23635..23639),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("EscapeUnicodeCode", 23640..23657),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 23660..23663,
                                },
                            },
                        ],
                    },
                },
            },
            range: 23591..23665,
        },
        "EscapeUnicodeCode": GrammarRule {
            name: Identifier("EscapeUnicodeCode", 23677..23694),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[0-9a-zA-Z]*",
                        span: 23701..23715,
                    },
                },
            },
            range: 23666..23717,
        },
        "StringInterpolationSimple": GrammarRule {
            name: Identifier("StringInterpolationSimple", 23724..23749),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 23756..23759,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 23760..23774),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 23760..23774),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COLON", 23777..23782),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("StringFormatter", 23783..23798),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("StringFormatter", 23783..23798),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 23801..23804,
                                },
                            },
                        ],
                    },
                },
            },
            range: 23718..23806,
        },
        "StringInterpolationText": GrammarRule {
            name: Identifier("StringInterpolationText", 23818..23841),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[^{}\\\\]+",
                        span: 23848..23860,
                    },
                },
            },
            range: 23807..23862,
        },
        "StringFormatter": GrammarRule {
            name: Identifier("StringFormatter", 23874..23889),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[^}]+",
                        span: 23896..23903,
                    },
                },
            },
            range: 23863..23905,
        },
        "StringInterpolationComplex": GrammarRule {
            name: Identifier("StringInterpolationComplex", 23954..23980),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 23987..23990,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 23991..24005),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 23991..24005),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("COMMA", 24008..24013),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: Identifier("TuplePair", 24014..24023),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TuplePair", 24014..24023),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("COMMA", 24027..24032),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 24034..24037,
                                },
                            },
                        ],
                    },
                },
            },
            range: 23948..24039,
        },
        "StringTemplates": GrammarRule {
            name: Identifier("StringTemplates", 24416..24431),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("StringTemplateTerm", 24438..24456),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("StringTemplateTerm", 24438..24456),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: END_OF_INPUT,
                            },
                        ],
                    },
                },
            },
            range: 24403..24463,
        },
        "StringTemplateTerm": GrammarRule {
            name: Identifier("StringTemplateTerm", 24470..24488),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ForTemplate", 24497..24508),
                        ),
                        branch: Expression {
                            tag: Identifier("ForTemplate", 24497..24508),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ForTemplate", 24497..24508),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ExpressionTemplate", 24515..24533),
                        ),
                        branch: Expression {
                            tag: Identifier("ExpressionTemplate", 24515..24533),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ExpressionTemplate", 24515..24533),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 24464..24535,
        },
        "ExpressionTemplate": GrammarRule {
            name: Identifier("ExpressionTemplate", 24542..24560),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_S", 24567..24577),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_S", 24567..24577),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 24578..24592),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 24578..24592),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_E", 24593..24603),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_E", 24593..24603),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 24536..24605,
        },
        "ForTemplate": GrammarRule {
            name: Identifier("ForTemplate", 24858..24869),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ForTemplateBegin", 24876..24892),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForTemplateBegin", 24876..24892),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ForTemplateElse", 24893..24908),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ForTemplateElse", 24893..24908),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("ForTemplateEnd", 24910..24924),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ForTemplateEnd", 24910..24924),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 24845..24926,
        },
        "ForTemplateBegin": GrammarRule {
            name: Identifier("ForTemplateBegin", 24933..24949),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_S", 24956..24966),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_S", 24956..24966),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_FOR", 24967..24973),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 24967..24973),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("LetPattern", 24974..24984),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("LetPattern", 24974..24984),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_IN", 24985..24990),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IN", 24985..24990),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 24991..25007),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 24991..25007),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("IfGuard", 25009..25016),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IfGuard", 25009..25016),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_E", 25017..25027),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_E", 25017..25027),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 24927..25029,
        },
        "ForTemplateElse": GrammarRule {
            name: Identifier("ForTemplateElse", 25036..25051),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_S", 25058..25068),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_S", 25058..25068),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_ELSE", 25069..25076),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_ELSE", 25069..25076),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_E", 25077..25087),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_E", 25077..25087),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 25030..25089,
        },
        "ForTemplateEnd": GrammarRule {
            name: Identifier("ForTemplateEnd", 25096..25110),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TEMPLATE_S", 25117..25127),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_S", 25117..25127),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_END", 25128..25134),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_END", 25128..25134),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("KW_FOR", 25135..25141),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_FOR", 25135..25141),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TEMPLATE_E", 25143..25153),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_E", 25143..25153),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 25090..25155,
        },
        "TEMPLATE_S": GrammarRule {
            name: Identifier("TEMPLATE_S", 25186..25196),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_L", 25204..25214),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TEMPLATE_M", 25215..25225),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TEMPLATE_M", 25215..25225),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 25157..25228,
        },
        "TEMPLATE_E": GrammarRule {
            name: Identifier("TEMPLATE_E", 25258..25268),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TEMPLATE_M", 25275..25285),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TEMPLATE_M", 25275..25285),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TEMPLATE_R", 25288..25298),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 25229..25300,
        },
        "TEMPLATE_L": GrammarRule {
            name: Identifier("TEMPLATE_L", 25329..25339),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "<%",
                        insensitive: false,
                        range: 25341..25345,
                    },
                },
            },
            range: 25329..25345,
        },
        "TEMPLATE_R": GrammarRule {
            name: Identifier("TEMPLATE_R", 25350..25360),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "%>",
                        insensitive: false,
                        range: 25362..25366,
                    },
                },
            },
            range: 25350..25366,
        },
        "TEMPLATE_M": GrammarRule {
            name: Identifier("TEMPLATE_M", 25371..25381),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[-_~.=]",
                        span: 25383..25390,
                    },
                },
            },
            range: 25371..25390,
        },
    },
    token_sets: {},
    functions: {},
}