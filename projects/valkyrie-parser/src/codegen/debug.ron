GrammarInfo {
    url: None,
    name: Identifier("Valkyrie", 8..16),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Program": GrammarRule {
            name: Identifier("Program", 35..42),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("Statement", 49..58),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Statement", 49..58),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 23..61,
        },
        "Statement": GrammarRule {
            name: Identifier("Statement", 156..165),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineNamespace", 174..189),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineNamespace", 174..189),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineNamespace", 174..189),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineImport", 196..208),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineImport", 196..208),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineImport", 196..208),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineClass", 215..226),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineClass", 215..226),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineClass", 215..226),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineUnion", 233..244),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineUnion", 233..244),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineUnion", 233..244),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineFlags", 251..262),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineFlags", 251..262),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineFlags", 251..262),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineTrait", 269..280),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineTrait", 269..280),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineTrait", 269..280),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineFunction", 287..301),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineFunction", 287..301),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineFunction", 287..301),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainStatement", 308..321),
                        ),
                        branch: Expression {
                            tag: Identifier("MainStatement", 308..321),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MainStatement", 308..321),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 150..323,
        },
        "EOS": GrammarRule {
            name: Identifier("EOS", 407..410),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Omit", 431..435),
                        ),
                        branch: Expression {
                            tag: Identifier("Omit", 431..435),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[;；]",
                                span: 421..427,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Show", 453..457),
                        ),
                        branch: Expression {
                            tag: Identifier("Show", 453..457),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⁏|;;",
                                span: 442..450,
                            },
                        },
                    },
                ],
            },
            range: 401..459,
        },
        "EOS_FREE": GrammarRule {
            name: Identifier("EOS_FREE", 524..532),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，;；⁏]",
                        span: 539..552,
                    },
                },
            },
            range: 518..554,
        },
        "DefineNamespace": GrammarRule {
            name: Identifier("DefineNamespace", 648..663),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_NAMESPACE", 671..683),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_NAMESPACE", 684..696),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_NAMESPACE", 684..696),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("NamepathFree", 698..710),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 698..710),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 712..715),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 642..718,
        },
        "OP_NAMESPACE": GrammarRule {
            name: Identifier("OP_NAMESPACE", 742..754),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Main", 768..772),
                        ),
                        branch: Expression {
                            tag: Identifier("Main", 768..772),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 763..766,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Test", 784..788),
                        ),
                        branch: Expression {
                            tag: Identifier("Test", 784..788),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 779..782,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Hide", 800..804),
                        ),
                        branch: Expression {
                            tag: Identifier("Hide", 800..804),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 795..798,
                            },
                        },
                    },
                ],
            },
            range: 720..806,
        },
        "DefineImport": GrammarRule {
            name: Identifier("DefineImport", 904..916),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_IMPORT", 926..935),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("ImportTerm", 938..948),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ImportTerm", 938..948),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("EOS", 953..956),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_IMPORT", 965..974),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "{",
                                                insensitive: false,
                                                range: 977..980,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ChoiceExpression {
                                                                    branches: [
                                                                        Expression {
                                                                            tag: Identifier("ImportTerm", 988..998),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("ImportTerm", 988..998),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("EOS_FREE", 1000..1008),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "}",
                                                insensitive: false,
                                                range: 1014..1017,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("EOS", 1021..1024),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 891..1027,
        },
        "ImportTerm": GrammarRule {
            name: Identifier("ImportTerm", 1034..1044),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAs", 1053..1061),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAs", 1053..1061),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAs", 1053..1061),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAll", 1068..1077),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAll", 1068..1077),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAll", 1068..1077),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportMacro", 1084..1095),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportMacro", 1084..1095),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportMacro", 1084..1095),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportBlock", 1102..1113),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportBlock", 1102..1113),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportBlock", 1102..1113),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NamepathFree", 1120..1132),
                        ),
                        branch: Expression {
                            tag: Identifier("NamepathFree", 1120..1132),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("NamepathFree", 1120..1132),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 1028..1134,
        },
        "ImportAs": GrammarRule {
            name: Identifier("ImportAs", 1187..1195),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("NamepathFree", 1198..1210),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("NamepathFree", 1198..1210),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_AS", 1212..1217),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("alias", 1218..1223),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1224..1234),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1181..1236,
        },
        "ImportAll": GrammarRule {
            name: Identifier("ImportAll", 1277..1286),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("NamepathFree", 1289..1301),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1289..1301),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilRegex {
                                    raw: "[.∷]|::",
                                    span: 1302..1313,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("OP_IMPORT_ALL", 1314..1327),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("OP_IMPORT_ALL", 1314..1327),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1271..1329,
        },
        "ImportBlock": GrammarRule {
            name: Identifier("ImportBlock", 1381..1392),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("NamepathFree", 1400..1412),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1400..1412),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[.∷]|::",
                                            span: 1415..1426,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 1430..1433,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("ImportTerm", 1441..1451),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ImportTerm", 1441..1451),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 1453..1461),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 1467..1470,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1368..1472,
        },
        "ImportMacro": GrammarRule {
            name: Identifier("ImportMacro", 1526..1537),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("NamepathFree", 1545..1557),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("NamepathFree", 1545..1557),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[.∷]|::",
                                                span: 1558..1569,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("ImportMacroItem", 1570..1585),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("ImportMacroItem", 1570..1585),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_AS", 1587..1592),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("alias", 1593..1598),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ImportMacroItem", 1599..1614),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1520..1616,
        },
        "ImportMacroItem": GrammarRule {
            name: Identifier("ImportMacroItem", 1630..1645),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Capture", 1670..1677),
                        ),
                        branch: Expression {
                            tag: Identifier("Capture", 1670..1677),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "#",
                                            insensitive: false,
                                            range: 1654..1657,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 1658..1668),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1658..1668),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Instant", 1700..1707),
                        ),
                        branch: Expression {
                            tag: Identifier("Instant", 1700..1707),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "@",
                                            insensitive: false,
                                            range: 1684..1687,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 1688..1698),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1688..1698),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 1617..1709,
        },
        "DefineTemplate": GrammarRule {
            name: Identifier("DefineTemplate", 1837..1851),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 1858..1871),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 1858..1871),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierCall", 1873..1885),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierCall", 1873..1885),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_TEMPLATE", 1891..1902),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_TEMPLATE", 1891..1902),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TemplateParameters", 1903..1921),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TemplateParameters", 1903..1921),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TemplateBlock", 1923..1936),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TemplateBlock", 1923..1936),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1831..1938,
        },
        "TemplateParameters": GrammarRule {
            name: Identifier("TemplateParameters", 1945..1963),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("Identifier", 1972..1982),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 1972..1982),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 1985..1990),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 1991..2001),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 1991..2001),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2005..2010),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "<",
                                                insensitive: false,
                                                range: 2018..2021,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("Identifier", 2022..2032),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2022..2032),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2035..2040),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2041..2051),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2041..2051),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2055..2060),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ">",
                                                insensitive: false,
                                                range: 2062..2065,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟨",
                                                insensitive: false,
                                                range: 2072..2077,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("Identifier", 2078..2088),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2078..2088),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2091..2096),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2097..2107),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2097..2107),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2111..2116),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟩",
                                                insensitive: false,
                                                range: 2118..2123,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1939..2125,
        },
        "TemplateBlock": GrammarRule {
            name: Identifier("TemplateBlock", 2132..2145),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 2152..2155,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("TemplateStatement", 2157..2174),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TemplateStatement", 2157..2174),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("TemplateImplements", 2177..2195),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TemplateImplements", 2177..2195),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("EOS_FREE", 2198..2206),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 2198..2206),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 2209..2212,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2126..2214,
        },
        "TemplateStatement": GrammarRule {
            name: Identifier("TemplateStatement", 2221..2238),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("WhereBlock", 2245..2255),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("WhereBlock", 2245..2255),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2215..2326,
        },
        "TemplateImplements": GrammarRule {
            name: Identifier("TemplateImplements", 2333..2351),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_IMPLEMENTS", 2360..2373),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_IMPLEMENTS", 2360..2373),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2327..2393,
        },
        "WhereBlock": GrammarRule {
            name: Identifier("WhereBlock", 2400..2410),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHERE", 2417..2425),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHERE", 2417..2425),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 2426..2429,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("WhereBound", 2430..2440),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("WhereBound", 2430..2440),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 2442..2445,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2394..2447,
        },
        "WhereBound": GrammarRule {
            name: Identifier("WhereBound", 2454..2464),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("EOS_FREE", 2517..2525),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("EOS_FREE", 2517..2525),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2448..2527,
        },
        "DefineClass": GrammarRule {
            name: Identifier("DefineClass", 2725..2736),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineTemplate", 2743..2757),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineTemplate", 2743..2757),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 2759..2772),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 2759..2772),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierCall", 2774..2786),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierCall", 2774..2786),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_CLASS", 2792..2800),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_CLASS", 2792..2800),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 2801..2811),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2801..2811),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ClassInherit", 2812..2824),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ClassInherit", 2812..2824),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 2826..2836),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 2826..2836),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 2838..2841),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2719..2844,
        },
        "ClassBlock": GrammarRule {
            name: Identifier("ClassBlock", 2851..2861),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 2868..2871,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ClassBlockItem", 2872..2886),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassBlockItem", 2872..2886),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 2888..2891,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2845..2893,
        },
        "ClassBlockItem": GrammarRule {
            name: Identifier("ClassBlockItem", 2900..2914),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassDomain", 2923..2934),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassDomain", 2923..2934),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassDomain", 2923..2934),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassMethod", 2941..2952),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassMethod", 2941..2952),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassMethod", 2941..2952),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassField", 2959..2969),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassField", 2959..2969),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassField", 2959..2969),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EosFree", 2976..2984),
                        ),
                        branch: Expression {
                            tag: Identifier("EosFree", 2976..2984),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS_FREE", 2976..2984),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 2894..2986,
        },
        "ClassInherit": GrammarRule {
            name: Identifier("ClassInherit", 2993..3005),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 3012..3015,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("ClassInheritItem", 3017..3033),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassInheritItem", 3017..3033),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: YggdrasilText {
                                                                                        text: ",",
                                                                                        insensitive: false,
                                                                                        range: 3035..3038,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("ClassInheritItem", 3039..3055),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("ClassInheritItem", 3039..3055),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: ",",
                                                                insensitive: false,
                                                                range: 3058..3061,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 3065..3068,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2987..3070,
        },
        "ClassInheritItem": GrammarRule {
            name: Identifier("ClassInheritItem", 3077..3093),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Namepath", 3100..3108),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Namepath", 3100..3108),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3071..3110,
        },
        "ClassField": GrammarRule {
            name: Identifier("ClassField", 3117..3127),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 3134..3147),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 3134..3147),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("field_modifier", 3149..3163),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("field_modifier", 3149..3163),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 3169..3179),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3169..3179),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TypeHint", 3180..3188),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeHint", 3180..3188),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ParameterDefault", 3190..3206),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ParameterDefault", 3190..3206),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3111..3209,
        },
        "field_modifier": GrammarRule {
            name: Identifier("field_modifier", 3230..3244),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Namepath", 3254..3262),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilRegex {
                                                        raw: "[:=};]",
                                                        span: 3265..3271,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("ModifierCall", 3273..3285),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ModifierCall", 3273..3285),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3210..3287,
        },
        "ParameterDefault": GrammarRule {
            name: Identifier("ParameterDefault", 3294..3310),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "=",
                                    insensitive: false,
                                    range: 3317..3320,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 3321..3335),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 3321..3335),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3288..3337,
        },
        "ClassMethod": GrammarRule {
            name: Identifier("ClassMethod", 3344..3355),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 3362..3375),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 3362..3375),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("method_modifier", 3377..3392),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("method_modifier", 3377..3392),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Namepath", 3394..3402),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 3394..3402),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 3407..3410,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 3411..3414,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3338..3484,
        },
        "method_modifier": GrammarRule {
            name: Identifier("method_modifier", 3505..3520),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Namepath", 3530..3538),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilRegex {
                                                        raw: "[(<:}]",
                                                        span: 3541..3547,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("ModifierCall", 3549..3561),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ModifierCall", 3549..3561),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3485..3563,
        },
        "ClassDomain": GrammarRule {
            name: Identifier("ClassDomain", 3570..3581),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 3588..3601),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 3588..3601),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("field_modifier", 3603..3617),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("field_modifier", 3603..3617),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 3623..3633),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3623..3633),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 3634..3644),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 3634..3644),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3564..3646,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 3669..3677),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Class", 3699..3704),
                        ),
                        branch: Expression {
                            tag: Identifier("Class", 3699..3704),
                            remark: false,
                            body: YggdrasilText {
                                text: "class",
                                insensitive: false,
                                range: 3686..3693,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Structure", 3724..3733),
                        ),
                        branch: Expression {
                            tag: Identifier("Structure", 3724..3733),
                            remark: false,
                            body: YggdrasilText {
                                text: "structure",
                                insensitive: false,
                                range: 3711..3722,
                            },
                        },
                    },
                ],
            },
            range: 3647..3735,
        },
        "DefineUnion": GrammarRule {
            name: Identifier("DefineUnion", 3863..3874),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 3881..3894),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 3881..3894),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_UNION", 3896..3904),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_UNION", 3896..3904),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 3905..3915),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3905..3915),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3857..3917,
        },
        "KW_UNION": GrammarRule {
            name: Identifier("KW_UNION", 3940..3948),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "union",
                        insensitive: false,
                        range: 3955..3962,
                    },
                },
            },
            range: 3918..3964,
        },
        "DefineFlags": GrammarRule {
            name: Identifier("DefineFlags", 4092..4103),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 4110..4123),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 4110..4123),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_FLAGS", 4125..4133),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FLAGS", 4125..4133),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 4134..4144),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4134..4144),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 4086..4146,
        },
        "KW_FLAGS": GrammarRule {
            name: Identifier("KW_FLAGS", 4169..4177),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "flags",
                        insensitive: false,
                        range: 4184..4191,
                    },
                },
            },
            range: 4147..4193,
        },
        "DefineTrait": GrammarRule {
            name: Identifier("DefineTrait", 4321..4332),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_TRAIT", 4339..4347),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_TRAIT", 4339..4347),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 4315..4349,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 11684..11692),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "trait|interface",
                        span: 11694..11711,
                    },
                },
            },
            range: 11684..11711,
        },
        "DefineFunction": GrammarRule {
            name: Identifier("DefineFunction", 4566..4580),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_FUNCTION", 4587..4598),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FUNCTION", 4587..4598),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Namepath", 4599..4607),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 4599..4607),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 4560..4609,
        },
        "KW_FUNCTION": GrammarRule {
            name: Identifier("KW_FUNCTION", 4632..4643),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Micro", 4670..4675),
                        ),
                        branch: Expression {
                            tag: Identifier("Micro", 4670..4675),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "micro|function",
                                span: 4652..4668,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Macro", 4700..4705),
                        ),
                        branch: Expression {
                            tag: Identifier("Macro", 4700..4705),
                            remark: false,
                            body: YggdrasilText {
                                text: "macro",
                                insensitive: false,
                                range: 4682..4689,
                            },
                        },
                    },
                ],
            },
            range: 4610..4707,
        },
        "WhileStatement": GrammarRule {
            name: Identifier("WhileStatement", 4835..4849),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHILE", 4856..4864),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHILE", 4856..4864),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 4865..4881),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 4865..4881),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 4883..4886,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainStatement", 4887..4900),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainStatement", 4887..4900),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 4902..4905,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4907..4910),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4829..4913,
        },
        "KW_WHILE": GrammarRule {
            name: Identifier("KW_WHILE", 11856..11864),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "while",
                        span: 11866..11873,
                    },
                },
            },
            range: 11856..11873,
        },
        "ForStatement": GrammarRule {
            name: Identifier("ForStatement", 5118..5130),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_FOR", 5137..5143),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 5137..5143),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 5144..5154),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 5144..5154),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_IN", 5155..5160),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IN", 5155..5160),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 5161..5177),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 5161..5177),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 5179..5182,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainStatement", 5183..5196),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainStatement", 5183..5196),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 5198..5201,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 5203..5206),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5112..5209,
        },
        "MainStatement": GrammarRule {
            name: Identifier("MainStatement", 5344..5357),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("WhileStatement", 5366..5380),
                        ),
                        branch: Expression {
                            tag: Identifier("WhileStatement", 5366..5380),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("WhileStatement", 5366..5380),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ForStatement", 5387..5399),
                        ),
                        branch: Expression {
                            tag: Identifier("ForStatement", 5387..5399),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ForStatement", 5387..5399),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainExpression", 5406..5420),
                        ),
                        branch: Expression {
                            tag: Identifier("MainExpression", 5406..5420),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MainExpression", 5406..5420),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5331..5422,
        },
        "MainExpression": GrammarRule {
            name: Identifier("MainExpression", 5557..5571),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("MainTerm", 5578..5586),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainTerm", 5578..5586),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 5593..5602),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 5593..5602),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainTerm", 5605..5613),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainTerm", 5605..5613),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("EOS", 5616..5619),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 5616..5619),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5544..5622,
        },
        "MainTerm": GrammarRule {
            name: Identifier("MainTerm", 5636..5644),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 5652..5662),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 5652..5662),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 5670..5680),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 5670..5680),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("MainSuffix", 5681..5691),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainSuffix", 5681..5691),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5623..5694,
        },
        "MainFactor": GrammarRule {
            name: Identifier("MainFactor", 5709..5719),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainFactor0", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("MainFactor0", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "(",
                                            insensitive: false,
                                            range: 5728..5731,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("MainExpression", 5734..5748),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainExpression", 5734..5748),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ")",
                                            insensitive: false,
                                            range: 5751..5754,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Atomic", 5761..5767),
                        ),
                        branch: Expression {
                            tag: Identifier("Atomic", 5761..5767),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Atomic", 5761..5767),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5696..5769,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 5776..5782),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ProceduralCall", 5791..5805),
                        ),
                        branch: Expression {
                            tag: Identifier("ProceduralCall", 5791..5805),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ProceduralCall", 5791..5805),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TupleLiteral", 5812..5824),
                        ),
                        branch: Expression {
                            tag: Identifier("TupleLiteral", 5812..5824),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TupleLiteral", 5812..5824),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeLiteral", 5831..5843),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeLiteral", 5831..5843),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeLiteral", 5831..5843),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Namepath", 5850..5858),
                        ),
                        branch: Expression {
                            tag: Identifier("Namepath", 5850..5858),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Namepath", 5850..5858),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Integer", 5865..5872),
                        ),
                        branch: Expression {
                            tag: Identifier("Integer", 5865..5872),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Integer", 5865..5872),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 5879..5886),
                        ),
                        branch: Expression {
                            tag: Identifier("Boolean", 5879..5886),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 5879..5886),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5770..5888,
        },
        "MainInfix": GrammarRule {
            name: Identifier("MainInfix", 5935..5944),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Plus", 5961..5965),
                        ),
                        branch: Expression {
                            tag: Identifier("Plus", 5961..5965),
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 5955..5958,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("PlusAssign", 5978..5988),
                        ),
                        branch: Expression {
                            tag: Identifier("PlusAssign", 5978..5988),
                            remark: false,
                            body: YggdrasilText {
                                text: "+=",
                                insensitive: false,
                                range: 5972..5976,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Minus", 6001..6006),
                        ),
                        branch: Expression {
                            tag: Identifier("Minus", 6001..6006),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 5995..5998,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MinusAssign", 6019..6030),
                        ),
                        branch: Expression {
                            tag: Identifier("MinusAssign", 6019..6030),
                            remark: false,
                            body: YggdrasilText {
                                text: "-=",
                                insensitive: false,
                                range: 6013..6017,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Multiply", 6043..6051),
                        ),
                        branch: Expression {
                            tag: Identifier("Multiply", 6043..6051),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 6037..6040,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MultiplyAssign", 6064..6078),
                        ),
                        branch: Expression {
                            tag: Identifier("MultiplyAssign", 6064..6078),
                            remark: false,
                            body: YggdrasilText {
                                text: "*=",
                                insensitive: false,
                                range: 6058..6062,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Divide", 6091..6097),
                        ),
                        branch: Expression {
                            tag: Identifier("Divide", 6091..6097),
                            remark: false,
                            body: YggdrasilText {
                                text: "/",
                                insensitive: false,
                                range: 6085..6088,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DivideAssign", 6110..6122),
                        ),
                        branch: Expression {
                            tag: Identifier("DivideAssign", 6110..6122),
                            remark: false,
                            body: YggdrasilText {
                                text: "/=",
                                insensitive: false,
                                range: 6104..6108,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Remainder", 6135..6144),
                        ),
                        branch: Expression {
                            tag: Identifier("Remainder", 6135..6144),
                            remark: false,
                            body: YggdrasilText {
                                text: "%",
                                insensitive: false,
                                range: 6129..6132,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RemainderAssign", 6157..6172),
                        ),
                        branch: Expression {
                            tag: Identifier("RemainderAssign", 6157..6172),
                            remark: false,
                            body: YggdrasilText {
                                text: "%=",
                                insensitive: false,
                                range: 6151..6155,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Power", 6185..6190),
                        ),
                        branch: Expression {
                            tag: Identifier("Power", 6185..6190),
                            remark: false,
                            body: YggdrasilText {
                                text: "^",
                                insensitive: false,
                                range: 6179..6182,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Surd", 6205..6209),
                        ),
                        branch: Expression {
                            tag: Identifier("Surd", 6205..6209),
                            remark: false,
                            body: YggdrasilText {
                                text: "√",
                                insensitive: false,
                                range: 6197..6202,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EEE", 6256..6259),
                        ),
                        branch: Expression {
                            tag: Identifier("EEE", 6256..6259),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≡|===",
                                span: 6241..6250,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NEE", 6281..6284),
                        ),
                        branch: Expression {
                            tag: Identifier("NEE", 6281..6284),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≢|!==|=!=",
                                span: 6266..6279,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NE", 6306..6308),
                        ),
                        branch: Expression {
                            tag: Identifier("NE", 6306..6308),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≠|!=",
                                span: 6291..6299,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EE", 6328..6330),
                        ),
                        branch: Expression {
                            tag: Identifier("EE", 6328..6330),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "==",
                                span: 6315..6319,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EQ", 6350..6352),
                        ),
                        branch: Expression {
                            tag: Identifier("EQ", 6350..6352),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "=",
                                span: 6337..6340,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LLL", 6397..6400),
                        ),
                        branch: Expression {
                            tag: Identifier("LLL", 6397..6400),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⋘|<<<",
                                span: 6384..6393,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LLE", 6419..6422),
                        ),
                        branch: Expression {
                            tag: Identifier("LLE", 6419..6422),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "<<=",
                                span: 6407..6412,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LL", 6443..6445),
                        ),
                        branch: Expression {
                            tag: Identifier("LL", 6443..6445),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≪|<<",
                                span: 6429..6437,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LEQ", 6468..6471),
                        ),
                        branch: Expression {
                            tag: Identifier("LEQ", 6468..6471),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[⩽≤]|<=",
                                span: 6452..6465,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LE", 6490..6492),
                        ),
                        branch: Expression {
                            tag: Identifier("LE", 6490..6492),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "<",
                                span: 6478..6481,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GGG", 6512..6515),
                        ),
                        branch: Expression {
                            tag: Identifier("GGG", 6512..6515),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⋙|>>>",
                                span: 6499..6508,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GGE", 6534..6537),
                        ),
                        branch: Expression {
                            tag: Identifier("GGE", 6534..6537),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: ">>=",
                                span: 6522..6527,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GG", 6558..6560),
                        ),
                        branch: Expression {
                            tag: Identifier("GG", 6558..6560),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≫|>>",
                                span: 6544..6552,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GEQ", 6583..6586),
                        ),
                        branch: Expression {
                            tag: Identifier("GEQ", 6583..6586),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[⩾≥]|>=",
                                span: 6567..6580,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GE", 6598..6600),
                        ),
                        branch: Expression {
                            tag: Identifier("GE", 6598..6600),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: ">",
                                span: 6593..6596,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("And", 6632..6635),
                        ),
                        branch: Expression {
                            tag: Identifier("And", 6632..6635),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "&&|∧",
                                span: 6622..6630,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nand", 6649..6653),
                        ),
                        branch: Expression {
                            tag: Identifier("Nand", 6649..6653),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊼",
                                span: 6642..6647,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Xand", 6667..6671),
                        ),
                        branch: Expression {
                            tag: Identifier("Xand", 6667..6671),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⩟",
                                span: 6660..6665,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Or", 6698..6700),
                        ),
                        branch: Expression {
                            tag: Identifier("Or", 6698..6700),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "\\|\\||∨",
                                span: 6686..6696,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nor", 6714..6717),
                        ),
                        branch: Expression {
                            tag: Identifier("Nor", 6714..6717),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊽",
                                span: 6707..6712,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Xor", 6731..6734),
                        ),
                        branch: Expression {
                            tag: Identifier("Xor", 6731..6734),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊻",
                                span: 6724..6729,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("UpTo", 6776..6780),
                        ),
                        branch: Expression {
                            tag: Identifier("UpTo", 6776..6780),
                            remark: false,
                            body: YggdrasilText {
                                text: "..<",
                                insensitive: false,
                                range: 6763..6768,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Until", 6800..6805),
                        ),
                        branch: Expression {
                            tag: Identifier("Until", 6800..6805),
                            remark: false,
                            body: YggdrasilText {
                                text: "..=",
                                insensitive: false,
                                range: 6787..6792,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("In", 6856..6858),
                        ),
                        branch: Expression {
                            tag: Identifier("In", 6856..6858),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IN", 6831..6836),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[∈∊]",
                                            span: 6839..6847,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotIn", 6889..6894),
                        ),
                        branch: Expression {
                            tag: Identifier("NotIn", 6889..6894),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_NOT", 6866..6872),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_IN", 6875..6880),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "∉",
                                            insensitive: false,
                                            range: 6881..6886,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Contains", 6927..6935),
                        ),
                        branch: Expression {
                            tag: Identifier("Contains", 6927..6935),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[∋∍]",
                                span: 6901..6909,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotContains", 6966..6977),
                        ),
                        branch: Expression {
                            tag: Identifier("NotContains", 6966..6977),
                            remark: false,
                            body: YggdrasilText {
                                text: "∌",
                                insensitive: false,
                                range: 6942..6947,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Is", 7020..7022),
                        ),
                        branch: Expression {
                            tag: Identifier("Is", 7020..7022),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("KW_IS", 7003..7008),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotIs", 7047..7052),
                        ),
                        branch: Expression {
                            tag: Identifier("NotIs", 7047..7052),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IS", 7030..7035),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_NOT", 7038..7044),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Map", 7098..7101),
                        ),
                        branch: Expression {
                            tag: Identifier("Map", 7098..7101),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "/@",
                                            insensitive: false,
                                            range: 7082..7086,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[⇴⨵]",
                                            span: 7087..7095,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Apply3", 7123..7129),
                        ),
                        branch: Expression {
                            tag: Identifier("Apply3", 7123..7129),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "@{3}|⟴",
                                span: 7109..7119,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Apply2", 7151..7157),
                        ),
                        branch: Expression {
                            tag: Identifier("Apply2", 7151..7157),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "@{2}|⊕",
                                span: 7137..7147,
                            },
                        },
                    },
                ],
            },
            range: 5889..7159,
        },
        "MainPrefix": GrammarRule {
            name: Identifier("MainPrefix", 7189..7199),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Not", 7221..7224),
                        ),
                        branch: Expression {
                            tag: Identifier("Not", 7221..7224),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[¬!]",
                                span: 7208..7213,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Positive", 7243..7251),
                        ),
                        branch: Expression {
                            tag: Identifier("Positive", 7243..7251),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[+]",
                                span: 7231..7234,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Negative", 7270..7278),
                        ),
                        branch: Expression {
                            tag: Identifier("Negative", 7270..7278),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[-]",
                                span: 7258..7261,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Reference", 7297..7306),
                        ),
                        branch: Expression {
                            tag: Identifier("Reference", 7297..7306),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[&]",
                                span: 7285..7288,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DeconstructAll", 7327..7341),
                        ),
                        branch: Expression {
                            tag: Identifier("DeconstructAll", 7327..7341),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "…|[.]{3}",
                                span: 7313..7325,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Deconstruct", 7362..7373),
                        ),
                        branch: Expression {
                            tag: Identifier("Deconstruct", 7362..7373),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "‥|[.]{2}",
                                span: 7348..7360,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Inverse", 7394..7401),
                        ),
                        branch: Expression {
                            tag: Identifier("Inverse", 7394..7401),
                            remark: false,
                            body: YggdrasilText {
                                text: "⅟",
                                insensitive: false,
                                range: 7380..7385,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root2", 7422..7427),
                        ),
                        branch: Expression {
                            tag: Identifier("Root2", 7422..7427),
                            remark: false,
                            body: YggdrasilText {
                                text: "√",
                                insensitive: false,
                                range: 7408..7413,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root3", 7448..7453),
                        ),
                        branch: Expression {
                            tag: Identifier("Root3", 7448..7453),
                            remark: false,
                            body: YggdrasilText {
                                text: "∛",
                                insensitive: false,
                                range: 7434..7439,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root4", 7474..7479),
                        ),
                        branch: Expression {
                            tag: Identifier("Root4", 7474..7479),
                            remark: false,
                            body: YggdrasilText {
                                text: "∜",
                                insensitive: false,
                                range: 7460..7465,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Dereference", 7498..7509),
                        ),
                        branch: Expression {
                            tag: Identifier("Dereference", 7498..7509),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[*]",
                                span: 7486..7489,
                            },
                        },
                    },
                ],
            },
            range: 7160..7511,
        },
        "MainSuffix": GrammarRule {
            name: Identifier("MainSuffix", 7541..7551),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("InlineSuffix", 7560..7572),
                        ),
                        branch: Expression {
                            tag: Identifier("InlineSuffix", 7560..7572),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("InlineSuffix", 7560..7572),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7512..7574,
        },
        "InlineExpression": GrammarRule {
            name: Identifier("InlineExpression", 7716..7732),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("InlineTerm", 7739..7749),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("InlineTerm", 7739..7749),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 7756..7765),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 7756..7765),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("InlineTerm", 7768..7778),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("InlineTerm", 7768..7778),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7703..7782,
        },
        "InlineTerm": GrammarRule {
            name: Identifier("InlineTerm", 7796..7806),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 7814..7824),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 7814..7824),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 7832..7842),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 7832..7842),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineSuffix", 7843..7855),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineSuffix", 7843..7855),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7783..7858,
        },
        "InlineSuffix": GrammarRule {
            name: Identifier("InlineSuffix", 7872..7884),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("InlineSuffix0", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("InlineSuffix0", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("SuffixOperator", 7898..7912),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SuffixOperator", 7898..7912),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TupleCall", 7919..7928),
                        ),
                        branch: Expression {
                            tag: Identifier("TupleCall", 7919..7928),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TupleCall", 7919..7928),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeCall", 7935..7944),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeCall", 7935..7944),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeCall", 7935..7944),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7859..7946,
        },
        "SuffixOperator": GrammarRule {
            name: Identifier("SuffixOperator", 7969..7983),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Raise", 7998..8003),
                        ),
                        branch: Expression {
                            tag: Identifier("Raise", 7998..8003),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 7992..7995,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent2", 8016..8024),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent2", 8016..8024),
                            remark: false,
                            body: YggdrasilText {
                                text: "%",
                                insensitive: false,
                                range: 8010..8013,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent3", 8039..8047),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent3", 8039..8047),
                            remark: false,
                            body: YggdrasilText {
                                text: "‰",
                                insensitive: false,
                                range: 8031..8036,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent4", 8061..8069),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent4", 8061..8069),
                            remark: false,
                            body: YggdrasilText {
                                text: "‱",
                                insensitive: false,
                                range: 8054..8059,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime1", 8084..8090),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime1", 8084..8090),
                            remark: false,
                            body: YggdrasilText {
                                text: "′",
                                insensitive: false,
                                range: 8076..8081,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime2", 8105..8111),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime2", 8105..8111),
                            remark: false,
                            body: YggdrasilText {
                                text: "″",
                                insensitive: false,
                                range: 8097..8102,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime3", 8126..8132),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime3", 8126..8132),
                            remark: false,
                            body: YggdrasilText {
                                text: "‴",
                                insensitive: false,
                                range: 8118..8123,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime4", 8147..8153),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime4", 8147..8153),
                            remark: false,
                            body: YggdrasilText {
                                text: "⁗",
                                insensitive: false,
                                range: 8139..8144,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Celsius", 8168..8175),
                        ),
                        branch: Expression {
                            tag: Identifier("Celsius", 8168..8175),
                            remark: false,
                            body: YggdrasilText {
                                text: "℃",
                                insensitive: false,
                                range: 8160..8165,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Fahrenheit", 8190..8200),
                        ),
                        branch: Expression {
                            tag: Identifier("Fahrenheit", 8190..8200),
                            remark: false,
                            body: YggdrasilText {
                                text: "℉",
                                insensitive: false,
                                range: 8182..8187,
                            },
                        },
                    },
                ],
            },
            range: 7947..8202,
        },
        "TypeHint": GrammarRule {
            name: Identifier("TypeHint", 8331..8339),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("COLON", 8346..8351),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 8346..8351),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeExpression", 8352..8366),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeExpression", 8352..8366),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 8325..8368,
        },
        "TypeExpression": GrammarRule {
            name: Identifier("TypeExpression", 8382..8396),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TypeTerm", 8403..8411),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeTerm", 8403..8411),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("TypeInfix", 8418..8427),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypeInfix", 8418..8427),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("TypeTerm", 8430..8438),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypeTerm", 8430..8438),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8369..8442,
        },
        "TypeTerm": GrammarRule {
            name: Identifier("TypeTerm", 8456..8464),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("TypePrefix", 8472..8482),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypePrefix", 8472..8482),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 8490..8500),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 8490..8500),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TypeSuffix", 8501..8511),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeSuffix", 8501..8511),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8443..8514,
        },
        "TypeFactor": GrammarRule {
            name: Identifier("TypeFactor", 8521..8531),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TypeFactor0", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("TypeFactor0", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "(",
                                            insensitive: false,
                                            range: 8540..8543,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("TypeExpression", 8546..8560),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeExpression", 8546..8560),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ")",
                                            insensitive: false,
                                            range: 8563..8566,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Atomic", 8573..8579),
                        ),
                        branch: Expression {
                            tag: Identifier("Atomic", 8573..8579),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Atomic", 8573..8579),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 8515..8581,
        },
        "TypeInfix": GrammarRule {
            name: Identifier("TypeInfix", 8612..8621),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Union", 8638..8643),
                        ),
                        branch: Expression {
                            tag: Identifier("Union", 8638..8643),
                            remark: false,
                            body: YggdrasilText {
                                text: "|",
                                insensitive: false,
                                range: 8632..8635,
                            },
                        },
                    },
                ],
            },
            range: 8582..8645,
        },
        "TypePrefix": GrammarRule {
            name: Identifier("TypePrefix", 8659..8669),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Positive", 8690..8698),
                        ),
                        branch: Expression {
                            tag: Identifier("Positive", 8690..8698),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[+]",
                                span: 8678..8681,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Negative", 8717..8725),
                        ),
                        branch: Expression {
                            tag: Identifier("Negative", 8717..8725),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[-]",
                                span: 8705..8708,
                            },
                        },
                    },
                ],
            },
            range: 8646..8727,
        },
        "TypeSuffix": GrammarRule {
            name: Identifier("TypeSuffix", 8741..8751),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Option", 8765..8771),
                        ),
                        branch: Expression {
                            tag: Identifier("Option", 8765..8771),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 8760..8763,
                            },
                        },
                    },
                ],
            },
            range: 8728..8773,
        },
        "TupleCall": GrammarRule {
            name: Identifier("TupleCall", 8903..8912),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 8920..8930),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 8920..8930),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 8932..8943),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 8932..8943),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 8945..8955),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 8945..8955),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("TupleLiteral", 8957..8969),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TupleLiteral", 8957..8969),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 8890..8971,
        },
        "TupleLiteral": GrammarRule {
            name: Identifier("TupleLiteral", 8978..8990),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 8997..9000,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("TuplePair", 9002..9011),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TuplePair", 9002..9011),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 9014..9019),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("TuplePair", 9020..9029),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("TuplePair", 9020..9029),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 9033..9038),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 9042..9045,
                                },
                            },
                        ],
                    },
                },
            },
            range: 8972..9047,
        },
        "TuplePair": GrammarRule {
            name: Identifier("TuplePair", 9054..9063),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("TupleKey", 9071..9079),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TupleKey", 9071..9079),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Colon", 9080..9085),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Colon", 9080..9085),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 9088..9102),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 9088..9102),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9048..9104,
        },
        "TupleKey": GrammarRule {
            name: Identifier("TupleKey", 9111..9119),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 9128..9138),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 9128..9138),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 9128..9138),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 9105..9140,
        },
        "RangeCall": GrammarRule {
            name: Identifier("RangeCall", 9270..9279),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 9286..9296),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 9286..9296),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 9298..9309),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 9298..9309),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 9311..9321),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 9311..9321),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("RangeLiteral", 9323..9335),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("RangeLiteral", 9323..9335),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9257..9337,
        },
        "RangeLiteral": GrammarRule {
            name: Identifier("RangeLiteral", 9351..9363),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "[",
                                                insensitive: false,
                                                range: 9372..9375,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("SubscriptAxis", 9379..9392),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("SubscriptAxis", 9379..9392),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 9400..9405),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("SubscriptAxis", 9408..9421),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("SubscriptAxis", 9408..9421),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 9427..9432),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "]",
                                                insensitive: false,
                                                range: 9438..9441,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⁅",
                                                insensitive: false,
                                                range: 9448..9453,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("SubscriptAxis", 9457..9470),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("SubscriptAxis", 9457..9470),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 9478..9483),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("SubscriptAxis", 9486..9499),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("SubscriptAxis", 9486..9499),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 9505..9510),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⁆",
                                                insensitive: false,
                                                range: 9516..9521,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9338..9523,
        },
        "SubscriptAxis": GrammarRule {
            name: Identifier("SubscriptAxis", 9530..9543),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SubscriptRange", 9552..9566),
                        ),
                        branch: Expression {
                            tag: Identifier("SubscriptRange", 9552..9566),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("SubscriptRange", 9552..9566),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SubscriptOnly", 9573..9586),
                        ),
                        branch: Expression {
                            tag: Identifier("SubscriptOnly", 9573..9586),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("SubscriptOnly", 9573..9586),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 9524..9588,
        },
        "SubscriptOnly": GrammarRule {
            name: Identifier("SubscriptOnly", 9595..9608),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("index", 9615..9620),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("MainExpression", 9621..9635),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 9589..9637,
        },
        "SubscriptRange": GrammarRule {
            name: Identifier("SubscriptRange", 9651..9665),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("head", 9675..9679),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainExpression", 9680..9694),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ChoiceExpression {
                                    branches: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("RangeOmit", 9714..9723),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("step", 9730..9734),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("MainExpression", 9735..9749),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("COLON", 9762..9767),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("tail", 9774..9778),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("MainExpression", 9779..9793),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: UnaryExpression {
                                                                                base: Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ConcatExpression {
                                                                                        sequence: [
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: HIDE,
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("COLON", 9800..9805),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: UnaryExpression {
                                                                                                    base: Expression {
                                                                                                        tag: None,
                                                                                                        remark: false,
                                                                                                        body: ConcatExpression {
                                                                                                            sequence: [
                                                                                                                Expression {
                                                                                                                    tag: None,
                                                                                                                    remark: false,
                                                                                                                    body: HIDE,
                                                                                                                },
                                                                                                                Expression {
                                                                                                                    tag: Identifier("step", 9812..9816),
                                                                                                                    remark: false,
                                                                                                                    body: RuleReference {
                                                                                                                        name: Identifier("MainExpression", 9817..9831),
                                                                                                                        boxed: false,
                                                                                                                        inline: false,
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    operators: [
                                                                                                        RepeatsBetween(
                                                                                                            YggdrasilCounter {
                                                                                                                min: 0,
                                                                                                                max: 1,
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                operators: [
                                                                                    RepeatsBetween(
                                                                                        YggdrasilCounter {
                                                                                            min: 0,
                                                                                            max: 1,
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9638..9845,
        },
        "RangeOmit": GrammarRule {
            name: Identifier("RangeOmit", 9866..9875),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: Identifier("PROPORTION", 9882..9892),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("PROPORTION", 9882..9892),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("COLON", 9895..9900),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 9895..9900),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("COLON", 9903..9908),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 9903..9908),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9846..9910,
        },
        "AttributeCall": GrammarRule {
            name: Identifier("AttributeCall", 10038..10051),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AttributePath", 10076..10089),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AttributePath", 10076..10089),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TupleLiteral", 10090..10102),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TupleLiteral", 10090..10102),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 10032..10105,
        },
        "ProceduralCall": GrammarRule {
            name: Identifier("ProceduralCall", 10112..10126),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ProceduralPath", 10151..10165),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ProceduralPath", 10151..10165),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TupleLiteral", 10166..10178),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TupleLiteral", 10166..10178),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 10106..10181,
        },
        "ModifierCall": GrammarRule {
            name: Identifier("ModifierCall", 10316..10328),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ChoiceExpression {
                                            branches: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_CLASS", 10339..10347),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_UNION", 10350..10358),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_TRAIT", 10361..10369),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 10372..10382),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 10372..10382),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 10303..10384,
        },
        "AttributePath": GrammarRule {
            name: Identifier("AttributePath", 10398..10411),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "#",
                                    insensitive: false,
                                    range: 10418..10421,
                                },
                            },
                            Expression {
                                tag: Identifier("Namepath", 10422..10430),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 10422..10430),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 10385..10432,
        },
        "ProceduralPath": GrammarRule {
            name: Identifier("ProceduralPath", 10446..10460),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "@",
                                    insensitive: false,
                                    range: 10467..10470,
                                },
                            },
                            Expression {
                                tag: Identifier("Namepath", 10471..10479),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 10471..10479),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 10433..10481,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 10495..10507),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 10515..10525),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 10515..10525),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION2", 10533..10544),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 10547..10557),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 10547..10557),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 10482..10561,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 10575..10583),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 10590..10600),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 10590..10600),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION", 10608..10618),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 10621..10631),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 10621..10631),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 10562..10635,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 10649..10659),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierBare", 10668..10682),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierBare", 10668..10682),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierBare", 10668..10682),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierRaw", 10689..10702),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierRaw", 10689..10702),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierRaw", 10689..10702),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 10636..10704,
        },
        "IdentifierBare": GrammarRule {
            name: Identifier("IdentifierBare", 10716..10730),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 10737..10772,
                    },
                },
            },
            range: 10705..10774,
        },
        "IdentifierRaw": GrammarRule {
            name: Identifier("IdentifierRaw", 10788..10801),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 10808..10811,
                                },
                            },
                            Expression {
                                tag: Identifier("IdentifierRawText", 10812..10829),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IdentifierRawText", 10812..10829),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 10830..10833,
                                },
                            },
                        ],
                    },
                },
            },
            range: 10775..10835,
        },
        "IdentifierRawText": GrammarRule {
            name: Identifier("IdentifierRawText", 10847..10864),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[^`]",
                                            span: 10871..10875,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 1,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 10836..10878,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 10885..10892),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 10910..10914),
                        ),
                        branch: Expression {
                            tag: Identifier("True", 10910..10914),
                            remark: false,
                            body: YggdrasilText {
                                text: "true",
                                insensitive: false,
                                range: 10901..10907,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 10930..10935),
                        ),
                        branch: Expression {
                            tag: Identifier("False", 10930..10935),
                            remark: false,
                            body: YggdrasilText {
                                text: "false",
                                insensitive: false,
                                range: 10921..10928,
                            },
                        },
                    },
                ],
            },
            range: 10879..10937,
        },
        "Integer": GrammarRule {
            name: Identifier("Integer", 11068..11075),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "0|[1-9][0-9]*",
                        span: 11082..11097,
                    },
                },
            },
            range: 11057..11099,
        },
        "PROPORTION": GrammarRule {
            name: Identifier("PROPORTION", 11249..11259),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "∷|::",
                        span: 11261..11269,
                    },
                },
            },
            range: 11249..11269,
        },
        "COLON": GrammarRule {
            name: Identifier("COLON", 11274..11279),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[:：]",
                        span: 11281..11287,
                    },
                },
            },
            range: 11274..11287,
        },
        "COMMA": GrammarRule {
            name: Identifier("COMMA", 11292..11297),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，]",
                        span: 11299..11305,
                    },
                },
            },
            range: 11292..11305,
        },
        "DOT": GrammarRule {
            name: Identifier("DOT", 11310..11313),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[.．]",
                        span: 11317..11323,
                    },
                },
            },
            range: 11310..11323,
        },
        "OFFSET_L": GrammarRule {
            name: Identifier("OFFSET_L", 11328..11336),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "⁅",
                        insensitive: false,
                        range: 11338..11343,
                    },
                },
            },
            range: 11328..11343,
        },
        "OFFSET_R": GrammarRule {
            name: Identifier("OFFSET_R", 11348..11356),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "⁆",
                        insensitive: false,
                        range: 11358..11363,
                    },
                },
            },
            range: 11348..11363,
        },
        "PROPORTION2": GrammarRule {
            name: Identifier("PROPORTION2", 11372..11383),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[.．∷]|::",
                        span: 11404..11418,
                    },
                },
            },
            range: 11366..11420,
        },
        "OP_IMPORT_ALL": GrammarRule {
            name: Identifier("OP_IMPORT_ALL", 11465..11478),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "*",
                        insensitive: false,
                        range: 11480..11483,
                    },
                },
            },
            range: 11465..11483,
        },
        "OP_AND_THEN": GrammarRule {
            name: Identifier("OP_AND_THEN", 11488..11499),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "?",
                        insensitive: false,
                        range: 11501..11504,
                    },
                },
            },
            range: 11488..11504,
        },
        "OP_BIND": GrammarRule {
            name: Identifier("OP_BIND", 11509..11516),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "≔|:=",
                        span: 11518..11526,
                    },
                },
            },
            range: 11509..11526,
        },
        "KW_NAMESPACE": GrammarRule {
            name: Identifier("KW_NAMESPACE", 11573..11585),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "namespace",
                        span: 11587..11598,
                    },
                },
            },
            range: 11573..11598,
        },
        "KW_IMPORT": GrammarRule {
            name: Identifier("KW_IMPORT", 11603..11612),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "using",
                        span: 11614..11621,
                    },
                },
            },
            range: 11603..11621,
        },
        "KW_TEMPLATE": GrammarRule {
            name: Identifier("KW_TEMPLATE", 11626..11637),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "template|generic",
                        span: 11639..11657,
                    },
                },
            },
            range: 11626..11657,
        },
        "KW_WHERE": GrammarRule {
            name: Identifier("KW_WHERE", 11662..11670),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "where",
                        span: 11672..11679,
                    },
                },
            },
            range: 11662..11679,
        },
        "KW_IMPLEMENTS": GrammarRule {
            name: Identifier("KW_IMPLEMENTS", 11716..11729),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "implements?",
                        span: 11731..11744,
                    },
                },
            },
            range: 11716..11744,
        },
        "KW_EXTENDS": GrammarRule {
            name: Identifier("KW_EXTENDS", 11749..11759),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "extends?",
                        span: 11761..11771,
                    },
                },
            },
            range: 11749..11771,
        },
        "KW_INHERITS": GrammarRule {
            name: Identifier("KW_INHERITS", 11776..11787),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "inherits?",
                        span: 11789..11800,
                    },
                },
            },
            range: 11776..11800,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 11820..11825),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "if",
                        span: 11827..11831,
                    },
                },
            },
            range: 11820..11831,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 11836..11843),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "else",
                        span: 11845..11851,
                    },
                },
            },
            range: 11836..11851,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 11878..11884),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "for",
                        span: 11886..11891,
                    },
                },
            },
            range: 11878..11891,
        },
        "KW_RETURN": GrammarRule {
            name: Identifier("KW_RETURN", 11896..11905),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "return",
                        span: 11907..11915,
                    },
                },
            },
            range: 11896..11915,
        },
        "KW_BREAK": GrammarRule {
            name: Identifier("KW_BREAK", 11920..11928),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "break",
                        span: 11930..11937,
                    },
                },
            },
            range: 11920..11937,
        },
        "KW_CONTINUE": GrammarRule {
            name: Identifier("KW_CONTINUE", 11942..11953),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "continue",
                        span: 11955..11965,
                    },
                },
            },
            range: 11942..11965,
        },
        "KW_NOT": GrammarRule {
            name: Identifier("KW_NOT", 12091..12097),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "not",
                        insensitive: false,
                        range: 12099..12104,
                    },
                },
            },
            range: 12091..12104,
        },
        "KW_IN": GrammarRule {
            name: Identifier("KW_IN", 12109..12114),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "in",
                        insensitive: false,
                        range: 12116..12120,
                    },
                },
            },
            range: 12109..12120,
        },
        "KW_IS": GrammarRule {
            name: Identifier("KW_IS", 12125..12130),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "is",
                        insensitive: false,
                        range: 12132..12136,
                    },
                },
            },
            range: 12125..12136,
        },
        "KW_AS": GrammarRule {
            name: Identifier("KW_AS", 12141..12146),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "as",
                        insensitive: false,
                        range: 12148..12152,
                    },
                },
            },
            range: 12141..12152,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 12303..12313),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: true,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 12320..12338,
                    },
                },
            },
            range: 12276..12340,
        },
        "Comment": GrammarRule {
            name: Identifier("Comment", 12384..12391),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: true,
                styles: [
                    "comment",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "//",
                                                insensitive: false,
                                                range: 12400..12404,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[^\\n\\r]*",
                                                span: 12405..12415,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "/*",
                                                insensitive: false,
                                                range: 12422..12426,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "*/",
                                                insensitive: false,
                                                range: 12428..12432,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 12341..12434,
        },
    },
    token_sets: {},
    functions: {},
}