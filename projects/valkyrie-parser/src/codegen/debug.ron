GrammarInfo {
    url: None,
    name: Identifier("Valkyrie", 8..16),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Program": GrammarRule {
            name: Identifier("Program", 35..42),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: true,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Statement", 49..58),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Statement", 49..58),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 23..61,
        },
        "Statement": GrammarRule {
            name: Identifier("Statement", 156..165),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineNamespace", 174..189),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineNamespace", 174..189),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineNamespace", 174..189),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineImport", 196..208),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineImport", 196..208),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineImport", 196..208),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineClass", 215..226),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineClass", 215..226),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineClass", 215..226),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineUnion", 233..244),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineUnion", 233..244),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineUnion", 233..244),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineTrait", 251..262),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineTrait", 251..262),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineTrait", 251..262),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainStatement", 269..282),
                        ),
                        branch: Expression {
                            tag: Identifier("MainStatement", 269..282),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MainStatement", 269..282),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 150..284,
        },
        "EOS": GrammarRule {
            name: Identifier("EOS", 368..371),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Omit", 392..396),
                        ),
                        branch: Expression {
                            tag: Identifier("Omit", 392..396),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[;；]",
                                span: 382..388,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Show", 414..418),
                        ),
                        branch: Expression {
                            tag: Identifier("Show", 414..418),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⁏|;;",
                                span: 403..411,
                            },
                        },
                    },
                ],
            },
            range: 362..420,
        },
        "EOS_FREE": GrammarRule {
            name: Identifier("EOS_FREE", 485..493),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，;；⁏]",
                        span: 500..513,
                    },
                },
            },
            range: 479..515,
        },
        "DefineNamespace": GrammarRule {
            name: Identifier("DefineNamespace", 609..624),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_NAMESPACE", 632..644),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_NAMESPACE", 645..657),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_NAMESPACE", 645..657),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("NamepathFree", 659..671),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 659..671),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 673..676),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 603..679,
        },
        "OP_NAMESPACE": GrammarRule {
            name: Identifier("OP_NAMESPACE", 703..715),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Main", 729..733),
                        ),
                        branch: Expression {
                            tag: Identifier("Main", 729..733),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 724..727,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Test", 745..749),
                        ),
                        branch: Expression {
                            tag: Identifier("Test", 745..749),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 740..743,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Hide", 761..765),
                        ),
                        branch: Expression {
                            tag: Identifier("Hide", 761..765),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 756..759,
                            },
                        },
                    },
                ],
            },
            range: 681..767,
        },
        "DefineImport": GrammarRule {
            name: Identifier("DefineImport", 865..877),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_IMPORT", 887..896),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("ImportTerm", 899..909),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ImportTerm", 899..909),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("EOS", 914..917),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_IMPORT", 926..935),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: YggdrasilText {
                                                            text: "{",
                                                            insensitive: false,
                                                            range: 938..941,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: IGNORED,
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: ChoiceExpression {
                                                                                branches: [
                                                                                    Expression {
                                                                                        tag: Identifier("ImportTerm", 952..962),
                                                                                        remark: false,
                                                                                        body: RuleReference {
                                                                                            name: Identifier("ImportTerm", 952..962),
                                                                                            boxed: false,
                                                                                            inline: false,
                                                                                        },
                                                                                    },
                                                                                    Expression {
                                                                                        tag: None,
                                                                                        remark: false,
                                                                                        body: RuleReference {
                                                                                            name: Identifier("EOS_FREE", 964..972),
                                                                                            boxed: false,
                                                                                            inline: false,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 4294967295,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "}",
                                                insensitive: false,
                                                range: 978..981,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("EOS", 985..988),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 852..991,
        },
        "ImportTerm": GrammarRule {
            name: Identifier("ImportTerm", 998..1008),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAs", 1017..1025),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAs", 1017..1025),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAs", 1017..1025),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAll", 1032..1041),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAll", 1032..1041),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAll", 1032..1041),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportMacro", 1048..1059),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportMacro", 1048..1059),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportMacro", 1048..1059),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportBlock", 1066..1077),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportBlock", 1066..1077),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportBlock", 1066..1077),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NamepathFree", 1084..1096),
                        ),
                        branch: Expression {
                            tag: Identifier("NamepathFree", 1084..1096),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("NamepathFree", 1084..1096),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 992..1098,
        },
        "ImportAs": GrammarRule {
            name: Identifier("ImportAs", 1151..1159),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("NamepathFree", 1162..1174),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("NamepathFree", 1162..1174),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_AS", 1176..1181),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("alias", 1182..1187),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1188..1198),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1145..1200,
        },
        "ImportAll": GrammarRule {
            name: Identifier("ImportAll", 1241..1250),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("NamepathFree", 1253..1265),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1253..1265),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilRegex {
                                    raw: "[.∷]|::",
                                    span: 1266..1277,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("OP_IMPORT_ALL", 1278..1291),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("OP_IMPORT_ALL", 1278..1291),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1235..1293,
        },
        "ImportBlock": GrammarRule {
            name: Identifier("ImportBlock", 1345..1356),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("NamepathFree", 1364..1376),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1364..1376),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[.∷]|::",
                                            span: 1379..1390,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 1394..1397,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("ImportTerm", 1408..1418),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ImportTerm", 1408..1418),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 1420..1428),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 1434..1437,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1332..1439,
        },
        "ImportMacro": GrammarRule {
            name: Identifier("ImportMacro", 1493..1504),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("NamepathFree", 1512..1524),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("NamepathFree", 1512..1524),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[.∷]|::",
                                                span: 1525..1536,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("ImportMacroItem", 1537..1552),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("ImportMacroItem", 1537..1552),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_AS", 1554..1559),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("alias", 1560..1565),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ImportMacroItem", 1566..1581),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1487..1583,
        },
        "ImportMacroItem": GrammarRule {
            name: Identifier("ImportMacroItem", 1597..1612),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Capture", 1637..1644),
                        ),
                        branch: Expression {
                            tag: Identifier("Capture", 1637..1644),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "#",
                                            insensitive: false,
                                            range: 1621..1624,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 1625..1635),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1625..1635),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Instant", 1667..1674),
                        ),
                        branch: Expression {
                            tag: Identifier("Instant", 1667..1674),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "@",
                                            insensitive: false,
                                            range: 1651..1654,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 1655..1665),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1655..1665),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 1584..1676,
        },
        "DefineClass": GrammarRule {
            name: Identifier("DefineClass", 3568..3579),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_CLASS", 3586..3594),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_CLASS", 3586..3594),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3562..3596,
        },
        "ClassBlock": GrammarRule {
            name: Identifier("ClassBlock", 1960..1970),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 1977..1980,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ClassBlockItem", 1981..1995),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassBlockItem", 1981..1995),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 1997..2000,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1954..2002,
        },
        "ClassBlockItem": GrammarRule {
            name: Identifier("ClassBlockItem", 2009..2023),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassDomain", 2032..2043),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassDomain", 2032..2043),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassDomain", 2032..2043),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassMethod", 2050..2061),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassMethod", 2050..2061),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassMethod", 2050..2061),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassField", 2068..2078),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassField", 2068..2078),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassField", 2068..2078),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EosFree", 2085..2093),
                        ),
                        branch: Expression {
                            tag: Identifier("EosFree", 2085..2093),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS_FREE", 2085..2093),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 2003..2095,
        },
        "ClassInherit": GrammarRule {
            name: Identifier("ClassInherit", 2102..2114),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 2121..2124,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("ClassInheritItem", 2126..2142),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassInheritItem", 2126..2142),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: IGNORED,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: YggdrasilText {
                                                                                        text: ",",
                                                                                        insensitive: false,
                                                                                        range: 2144..2147,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("ClassInheritItem", 2148..2164),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("ClassInheritItem", 2148..2164),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: ",",
                                                                insensitive: false,
                                                                range: 2167..2170,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 2174..2177,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2096..2179,
        },
        "ClassInheritItem": GrammarRule {
            name: Identifier("ClassInheritItem", 2186..2202),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Namepath", 2209..2217),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Namepath", 2209..2217),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2180..2219,
        },
        "ClassField": GrammarRule {
            name: Identifier("ClassField", 2226..2236),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Identifier", 2243..2253),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Identifier", 2243..2253),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2220..2330,
        },
        "ClassMethod": GrammarRule {
            name: Identifier("ClassMethod", 2337..2348),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 2457..2467),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2457..2467),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 2468..2471,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 2472..2475,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2331..2477,
        },
        "ClassDomain": GrammarRule {
            name: Identifier("ClassDomain", 2484..2495),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 2539..2549),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2539..2549),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 2550..2560),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 2550..2560),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2478..2562,
        },
        "DefineTemplate": GrammarRule {
            name: Identifier("DefineTemplate", 2690..2704),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_TEMPLATE", 2740..2751),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_TEMPLATE", 2740..2751),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TemplateParameters", 2752..2770),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TemplateParameters", 2752..2770),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TemplateBlock", 2772..2785),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TemplateBlock", 2772..2785),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2684..2787,
        },
        "TemplateParameters": GrammarRule {
            name: Identifier("TemplateParameters", 2794..2812),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("Identifier", 2821..2831),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2821..2831),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: Identifier("COMMA", 2833..2838),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2833..2838),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: IGNORED,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2839..2849),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2839..2849),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("COMMA", 2852..2857),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2852..2857),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "<",
                                                insensitive: false,
                                                range: 2865..2868,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("Identifier", 2869..2879),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2869..2879),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: Identifier("COMMA", 2881..2886),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2881..2886),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: IGNORED,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2887..2897),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2887..2897),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("COMMA", 2900..2905),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2900..2905),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ">",
                                                insensitive: false,
                                                range: 2907..2910,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "⟨",
                                    insensitive: false,
                                    range: 2917..2922,
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 2923..2933),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2923..2933),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("COMMA", 2935..2940),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("COMMA", 2935..2940),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 2941..2951),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 2941..2951),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("COMMA", 2954..2959),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("COMMA", 2954..2959),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "⟩",
                                    insensitive: false,
                                    range: 2961..2966,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2788..2968,
        },
        "TemplateBlock": GrammarRule {
            name: Identifier("TemplateBlock", 2975..2988),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 2995..2998,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("TemplateStatement", 3000..3017),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TemplateStatement", 3000..3017),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("TemplateImplements", 3020..3038),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TemplateImplements", 3020..3038),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("EOS_FREE", 3041..3049),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 3041..3049),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 3052..3055,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2969..3057,
        },
        "TemplateStatement": GrammarRule {
            name: Identifier("TemplateStatement", 3064..3081),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("WhereBlock", 3088..3098),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("WhereBlock", 3088..3098),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3058..3169,
        },
        "TemplateImplements": GrammarRule {
            name: Identifier("TemplateImplements", 3176..3194),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_IMPLEMENTS", 3203..3216),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_IMPLEMENTS", 3203..3216),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3170..3236,
        },
        "WhereBlock": GrammarRule {
            name: Identifier("WhereBlock", 3243..3253),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHERE", 3260..3268),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHERE", 3260..3268),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 3269..3272,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("WhereBound", 3273..3283),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("WhereBound", 3273..3283),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 3285..3288,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3237..3290,
        },
        "WhereBound": GrammarRule {
            name: Identifier("WhereBound", 3297..3307),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("EOS_FREE", 3360..3368),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("EOS_FREE", 3360..3368),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3291..3370,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 3619..3627),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "class",
                                    insensitive: false,
                                    range: 3636..3643,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "structure",
                                    insensitive: false,
                                    range: 3650..3661,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3597..3663,
        },
        "DefineUnion": GrammarRule {
            name: Identifier("DefineUnion", 3791..3802),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_UNION", 3809..3817),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_UNION", 3809..3817),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3785..3819,
        },
        "KW_UNION": GrammarRule {
            name: Identifier("KW_UNION", 3842..3850),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "union",
                        insensitive: false,
                        range: 3857..3864,
                    },
                },
            },
            range: 3820..3866,
        },
        "DefineTrait": GrammarRule {
            name: Identifier("DefineTrait", 3994..4005),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_TRAIT", 4012..4020),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_TRAIT", 4012..4020),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3988..4022,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 10401..10409),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "trait|interface",
                        span: 10411..10428,
                    },
                },
            },
            range: 10401..10428,
        },
        "WhileStatement": GrammarRule {
            name: Identifier("WhileStatement", 4197..4211),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHILE", 4218..4226),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHILE", 4218..4226),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 4227..4243),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 4227..4243),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 4245..4248,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainStatement", 4249..4262),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainStatement", 4249..4262),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 4264..4267,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4269..4272),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4191..4275,
        },
        "KW_WHILE": GrammarRule {
            name: Identifier("KW_WHILE", 10573..10581),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "while",
                        span: 10583..10590,
                    },
                },
            },
            range: 10573..10590,
        },
        "ForStatement": GrammarRule {
            name: Identifier("ForStatement", 4480..4492),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_FOR", 4499..4505),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 4499..4505),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Identifier", 4506..4516),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4506..4516),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("KW_IN", 4517..4522),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IN", 4517..4522),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 4523..4539),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 4523..4539),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 4541..4544,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainStatement", 4545..4558),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainStatement", 4545..4558),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 4560..4563,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4565..4568),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4474..4571,
        },
        "MainStatement": GrammarRule {
            name: Identifier("MainStatement", 4706..4719),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("WhileStatement", 4728..4742),
                        ),
                        branch: Expression {
                            tag: Identifier("WhileStatement", 4728..4742),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("WhileStatement", 4728..4742),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ForStatement", 4749..4761),
                        ),
                        branch: Expression {
                            tag: Identifier("ForStatement", 4749..4761),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ForStatement", 4749..4761),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainExpression", 4768..4782),
                        ),
                        branch: Expression {
                            tag: Identifier("MainExpression", 4768..4782),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MainExpression", 4768..4782),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 4693..4784,
        },
        "MainExpression": GrammarRule {
            name: Identifier("MainExpression", 4919..4933),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("MainTerm", 4940..4948),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainTerm", 4940..4948),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 4958..4967),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 4958..4967),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainTerm", 4970..4978),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainTerm", 4970..4978),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("EOS", 4981..4984),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4981..4984),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4906..4987,
        },
        "MainTerm": GrammarRule {
            name: Identifier("MainTerm", 5001..5009),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 5017..5027),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 5017..5027),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 5038..5048),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 5038..5048),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("MainSuffix", 5049..5059),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainSuffix", 5049..5059),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4988..5062,
        },
        "MainFactor": GrammarRule {
            name: Identifier("MainFactor", 5076..5086),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainFactor0", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("MainFactor0", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "(",
                                            insensitive: false,
                                            range: 5095..5098,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("MainExpression", 5099..5113),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainExpression", 5099..5113),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ")",
                                            insensitive: false,
                                            range: 5114..5117,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Atomic", 5124..5130),
                        ),
                        branch: Expression {
                            tag: Identifier("Atomic", 5124..5130),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Atomic", 5124..5130),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5063..5132,
        },
        "MainInfix": GrammarRule {
            name: Identifier("MainInfix", 5163..5172),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Plus", 5189..5193),
                        ),
                        branch: Expression {
                            tag: Identifier("Plus", 5189..5193),
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 5183..5186,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("PlusAssign", 5206..5216),
                        ),
                        branch: Expression {
                            tag: Identifier("PlusAssign", 5206..5216),
                            remark: false,
                            body: YggdrasilText {
                                text: "+=",
                                insensitive: false,
                                range: 5200..5204,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Minus", 5229..5234),
                        ),
                        branch: Expression {
                            tag: Identifier("Minus", 5229..5234),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 5223..5226,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MinusAssign", 5247..5258),
                        ),
                        branch: Expression {
                            tag: Identifier("MinusAssign", 5247..5258),
                            remark: false,
                            body: YggdrasilText {
                                text: "-=",
                                insensitive: false,
                                range: 5241..5245,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Multiply", 5271..5279),
                        ),
                        branch: Expression {
                            tag: Identifier("Multiply", 5271..5279),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 5265..5268,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MultiplyAssign", 5292..5306),
                        ),
                        branch: Expression {
                            tag: Identifier("MultiplyAssign", 5292..5306),
                            remark: false,
                            body: YggdrasilText {
                                text: "*=",
                                insensitive: false,
                                range: 5286..5290,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Divide", 5319..5325),
                        ),
                        branch: Expression {
                            tag: Identifier("Divide", 5319..5325),
                            remark: false,
                            body: YggdrasilText {
                                text: "/",
                                insensitive: false,
                                range: 5313..5316,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DivideAssign", 5338..5350),
                        ),
                        branch: Expression {
                            tag: Identifier("DivideAssign", 5338..5350),
                            remark: false,
                            body: YggdrasilText {
                                text: "/=",
                                insensitive: false,
                                range: 5332..5336,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Remainder", 5363..5372),
                        ),
                        branch: Expression {
                            tag: Identifier("Remainder", 5363..5372),
                            remark: false,
                            body: YggdrasilText {
                                text: "%",
                                insensitive: false,
                                range: 5357..5360,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RemainderAssign", 5385..5400),
                        ),
                        branch: Expression {
                            tag: Identifier("RemainderAssign", 5385..5400),
                            remark: false,
                            body: YggdrasilText {
                                text: "%=",
                                insensitive: false,
                                range: 5379..5383,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Power", 5413..5418),
                        ),
                        branch: Expression {
                            tag: Identifier("Power", 5413..5418),
                            remark: false,
                            body: YggdrasilText {
                                text: "^",
                                insensitive: false,
                                range: 5407..5410,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Surd", 5433..5437),
                        ),
                        branch: Expression {
                            tag: Identifier("Surd", 5433..5437),
                            remark: false,
                            body: YggdrasilText {
                                text: "√",
                                insensitive: false,
                                range: 5425..5430,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EEE", 5484..5487),
                        ),
                        branch: Expression {
                            tag: Identifier("EEE", 5484..5487),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≡|===",
                                span: 5469..5478,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NEE", 5509..5512),
                        ),
                        branch: Expression {
                            tag: Identifier("NEE", 5509..5512),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≢|!==|=!=",
                                span: 5494..5507,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NE", 5534..5536),
                        ),
                        branch: Expression {
                            tag: Identifier("NE", 5534..5536),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≠|!=",
                                span: 5519..5527,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EE", 5556..5558),
                        ),
                        branch: Expression {
                            tag: Identifier("EE", 5556..5558),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "==",
                                span: 5543..5547,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EQ", 5578..5580),
                        ),
                        branch: Expression {
                            tag: Identifier("EQ", 5578..5580),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "=",
                                span: 5565..5568,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LLL", 5625..5628),
                        ),
                        branch: Expression {
                            tag: Identifier("LLL", 5625..5628),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⋘|<<<",
                                span: 5612..5621,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LLE", 5647..5650),
                        ),
                        branch: Expression {
                            tag: Identifier("LLE", 5647..5650),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "<<=",
                                span: 5635..5640,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LL", 5671..5673),
                        ),
                        branch: Expression {
                            tag: Identifier("LL", 5671..5673),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≪|<<",
                                span: 5657..5665,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LEQ", 5696..5699),
                        ),
                        branch: Expression {
                            tag: Identifier("LEQ", 5696..5699),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[⩽≤]|<=",
                                span: 5680..5693,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LE", 5718..5720),
                        ),
                        branch: Expression {
                            tag: Identifier("LE", 5718..5720),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "<",
                                span: 5706..5709,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GGG", 5740..5743),
                        ),
                        branch: Expression {
                            tag: Identifier("GGG", 5740..5743),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⋙|>>>",
                                span: 5727..5736,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GGE", 5762..5765),
                        ),
                        branch: Expression {
                            tag: Identifier("GGE", 5762..5765),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: ">>=",
                                span: 5750..5755,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GG", 5786..5788),
                        ),
                        branch: Expression {
                            tag: Identifier("GG", 5786..5788),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≫|>>",
                                span: 5772..5780,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GEQ", 5811..5814),
                        ),
                        branch: Expression {
                            tag: Identifier("GEQ", 5811..5814),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[⩾≥]|>=",
                                span: 5795..5808,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GE", 5826..5828),
                        ),
                        branch: Expression {
                            tag: Identifier("GE", 5826..5828),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: ">",
                                span: 5821..5824,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("And", 5860..5863),
                        ),
                        branch: Expression {
                            tag: Identifier("And", 5860..5863),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "&&|∧",
                                span: 5850..5858,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nand", 5877..5881),
                        ),
                        branch: Expression {
                            tag: Identifier("Nand", 5877..5881),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊼",
                                span: 5870..5875,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Xand", 5895..5899),
                        ),
                        branch: Expression {
                            tag: Identifier("Xand", 5895..5899),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⩟",
                                span: 5888..5893,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Or", 5926..5928),
                        ),
                        branch: Expression {
                            tag: Identifier("Or", 5926..5928),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "\\|\\||∨",
                                span: 5914..5924,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nor", 5942..5945),
                        ),
                        branch: Expression {
                            tag: Identifier("Nor", 5942..5945),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊽",
                                span: 5935..5940,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Xor", 5959..5962),
                        ),
                        branch: Expression {
                            tag: Identifier("Xor", 5959..5962),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊻",
                                span: 5952..5957,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("UpTo", 6004..6008),
                        ),
                        branch: Expression {
                            tag: Identifier("UpTo", 6004..6008),
                            remark: false,
                            body: YggdrasilText {
                                text: "..<",
                                insensitive: false,
                                range: 5991..5996,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Until", 6028..6033),
                        ),
                        branch: Expression {
                            tag: Identifier("Until", 6028..6033),
                            remark: false,
                            body: YggdrasilText {
                                text: "..=",
                                insensitive: false,
                                range: 6015..6020,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("In", 6084..6086),
                        ),
                        branch: Expression {
                            tag: Identifier("In", 6084..6086),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IN", 6059..6064),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[∈∊]",
                                            span: 6067..6075,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotIn", 6117..6122),
                        ),
                        branch: Expression {
                            tag: Identifier("NotIn", 6117..6122),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_NOT", 6094..6100),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_IN", 6103..6108),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "∉",
                                            insensitive: false,
                                            range: 6109..6114,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Contains", 6155..6163),
                        ),
                        branch: Expression {
                            tag: Identifier("Contains", 6155..6163),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[∋∍]",
                                span: 6129..6137,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotContains", 6194..6205),
                        ),
                        branch: Expression {
                            tag: Identifier("NotContains", 6194..6205),
                            remark: false,
                            body: YggdrasilText {
                                text: "∌",
                                insensitive: false,
                                range: 6170..6175,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Is", 6248..6250),
                        ),
                        branch: Expression {
                            tag: Identifier("Is", 6248..6250),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("KW_IS", 6231..6236),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotIs", 6275..6280),
                        ),
                        branch: Expression {
                            tag: Identifier("NotIs", 6275..6280),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IS", 6258..6263),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_NOT", 6266..6272),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Map", 6326..6329),
                        ),
                        branch: Expression {
                            tag: Identifier("Map", 6326..6329),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "/@",
                                            insensitive: false,
                                            range: 6310..6314,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[⇴⨵]",
                                            span: 6315..6323,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Apply3", 6351..6357),
                        ),
                        branch: Expression {
                            tag: Identifier("Apply3", 6351..6357),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "@{3}|⟴",
                                span: 6337..6347,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Apply2", 6379..6385),
                        ),
                        branch: Expression {
                            tag: Identifier("Apply2", 6379..6385),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "@{2}|⊕",
                                span: 6365..6375,
                            },
                        },
                    },
                ],
            },
            range: 5133..6387,
        },
        "MainPrefix": GrammarRule {
            name: Identifier("MainPrefix", 6401..6411),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Not", 6433..6436),
                        ),
                        branch: Expression {
                            tag: Identifier("Not", 6433..6436),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[¬!]",
                                span: 6420..6425,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Positive", 6455..6463),
                        ),
                        branch: Expression {
                            tag: Identifier("Positive", 6455..6463),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[+]",
                                span: 6443..6446,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Negative", 6482..6490),
                        ),
                        branch: Expression {
                            tag: Identifier("Negative", 6482..6490),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[-]",
                                span: 6470..6473,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Reference", 6509..6518),
                        ),
                        branch: Expression {
                            tag: Identifier("Reference", 6509..6518),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[&]",
                                span: 6497..6500,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DeconstructAll", 6539..6553),
                        ),
                        branch: Expression {
                            tag: Identifier("DeconstructAll", 6539..6553),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "…|[.]{3}",
                                span: 6525..6537,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Deconstruct", 6574..6585),
                        ),
                        branch: Expression {
                            tag: Identifier("Deconstruct", 6574..6585),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "‥|[.]{2}",
                                span: 6560..6572,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Inverse", 6606..6613),
                        ),
                        branch: Expression {
                            tag: Identifier("Inverse", 6606..6613),
                            remark: false,
                            body: YggdrasilText {
                                text: "⅟",
                                insensitive: false,
                                range: 6592..6597,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root2", 6634..6639),
                        ),
                        branch: Expression {
                            tag: Identifier("Root2", 6634..6639),
                            remark: false,
                            body: YggdrasilText {
                                text: "√",
                                insensitive: false,
                                range: 6620..6625,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root3", 6660..6665),
                        ),
                        branch: Expression {
                            tag: Identifier("Root3", 6660..6665),
                            remark: false,
                            body: YggdrasilText {
                                text: "∛",
                                insensitive: false,
                                range: 6646..6651,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root4", 6686..6691),
                        ),
                        branch: Expression {
                            tag: Identifier("Root4", 6686..6691),
                            remark: false,
                            body: YggdrasilText {
                                text: "∜",
                                insensitive: false,
                                range: 6672..6677,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Dereference", 6710..6721),
                        ),
                        branch: Expression {
                            tag: Identifier("Dereference", 6710..6721),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[*]",
                                span: 6698..6701,
                            },
                        },
                    },
                ],
            },
            range: 6388..6723,
        },
        "MainSuffix": GrammarRule {
            name: Identifier("MainSuffix", 6737..6747),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("InlineSuffix", 6756..6768),
                        ),
                        branch: Expression {
                            tag: Identifier("InlineSuffix", 6756..6768),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("InlineSuffix", 6756..6768),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 6724..6770,
        },
        "InlineExpression": GrammarRule {
            name: Identifier("InlineExpression", 6905..6921),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("InlineTerm", 6928..6938),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("InlineTerm", 6928..6938),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 6948..6957),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 6948..6957),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("InlineTerm", 6960..6970),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("InlineTerm", 6960..6970),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 6892..6974,
        },
        "InlineTerm": GrammarRule {
            name: Identifier("InlineTerm", 6988..6998),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 7006..7016),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 7006..7016),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 7027..7037),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 7027..7037),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineSuffix", 7038..7050),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineSuffix", 7038..7050),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 6975..7053,
        },
        "InlineSuffix": GrammarRule {
            name: Identifier("InlineSuffix", 7139..7151),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Raise", 7174..7179),
                        ),
                        branch: Expression {
                            tag: Identifier("Raise", 7174..7179),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "!",
                                            insensitive: false,
                                            range: 7168..7171,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent2", 7200..7208),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent2", 7200..7208),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "%",
                                            insensitive: false,
                                            range: 7194..7197,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent3", 7231..7239),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent3", 7231..7239),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "‰",
                                            insensitive: false,
                                            range: 7223..7228,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent4", 7261..7269),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent4", 7261..7269),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "‱",
                                            insensitive: false,
                                            range: 7254..7259,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime1", 7292..7298),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime1", 7292..7298),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "′",
                                            insensitive: false,
                                            range: 7284..7289,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime2", 7321..7327),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime2", 7321..7327),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "″",
                                            insensitive: false,
                                            range: 7313..7318,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime3", 7350..7356),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime3", 7350..7356),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "‴",
                                            insensitive: false,
                                            range: 7342..7347,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime4", 7379..7385),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime4", 7379..7385),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "⁗",
                                            insensitive: false,
                                            range: 7371..7376,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Celsius", 7408..7415),
                        ),
                        branch: Expression {
                            tag: Identifier("Celsius", 7408..7415),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "℃",
                                            insensitive: false,
                                            range: 7400..7405,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Fahrenheit", 7438..7448),
                        ),
                        branch: Expression {
                            tag: Identifier("Fahrenheit", 7438..7448),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "℉",
                                            insensitive: false,
                                            range: 7430..7435,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TupleCall", 7455..7464),
                        ),
                        branch: Expression {
                            tag: Identifier("TupleCall", 7455..7464),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TupleCall", 7455..7464),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeCall", 7471..7480),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeCall", 7471..7480),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeCall", 7471..7480),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7126..7482,
        },
        "TupleCall": GrammarRule {
            name: Identifier("TupleCall", 7612..7621),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 7629..7639),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 7629..7639),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 7641..7652),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 7641..7652),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 7654..7664),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 7654..7664),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("TupleCallBody", 7666..7679),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TupleCallBody", 7666..7679),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7599..7681,
        },
        "TupleCallBody": GrammarRule {
            name: Identifier("TupleCallBody", 7688..7701),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 7708..7711,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainExpression", 7713..7727),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainExpression", 7713..7727),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: IGNORED,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: Identifier("COMMA", 7729..7734),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 7729..7734),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("MainExpression", 7735..7749),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("MainExpression", 7735..7749),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: Identifier("COMMA", 7752..7757),
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 7752..7757),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 7761..7764,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7682..7766,
        },
        "RangeCall": GrammarRule {
            name: Identifier("RangeCall", 7896..7905),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 7912..7922),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 7912..7922),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 7924..7935),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 7924..7935),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 7937..7947),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 7937..7947),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("RangeLiteral", 7949..7961),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("RangeLiteral", 7949..7961),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7883..7963,
        },
        "RangeLiteral": GrammarRule {
            name: Identifier("RangeLiteral", 7970..7982),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "[",
                                                insensitive: false,
                                                range: 7991..7994,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("RangeAxis", 7996..8005),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("RangeAxis", 7996..8005),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ConcatExpression {
                                                                                        sequence: [
                                                                                            Expression {
                                                                                                tag: Identifier("COMMA", 8007..8012),
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("COMMA", 8007..8012),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: IGNORED,
                                                                                            },
                                                                                            Expression {
                                                                                                tag: Identifier("RangeAxis", 8013..8022),
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("RangeAxis", 8013..8022),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: Identifier("COMMA", 8025..8030),
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 8025..8030),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "]",
                                                insensitive: false,
                                                range: 8034..8037,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⁅",
                                                insensitive: false,
                                                range: 8044..8049,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("RangeAxis", 8051..8060),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("RangeAxis", 8051..8060),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ConcatExpression {
                                                                                        sequence: [
                                                                                            Expression {
                                                                                                tag: Identifier("COMMA", 8062..8067),
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("COMMA", 8062..8067),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: IGNORED,
                                                                                            },
                                                                                            Expression {
                                                                                                tag: Identifier("RangeAxis", 8068..8077),
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("RangeAxis", 8068..8077),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: Identifier("COMMA", 8080..8085),
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 8080..8085),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⁆",
                                                insensitive: false,
                                                range: 8089..8094,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7964..8096,
        },
        "RangeAxis": GrammarRule {
            name: Identifier("RangeAxis", 8103..8112),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 8123..8128),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: Identifier("index", 8142..8147),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8148..8162),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: Identifier("head", 8176..8180),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8181..8195),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 8196..8201),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 8216..8221),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: Identifier("tail", 8222..8226),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8227..8241),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("head", 8256..8260),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("MainExpression", 8261..8275),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 8276..8281),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("tail", 8282..8286),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8287..8301),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("RangeOmit", 8316..8325),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: Identifier("head", 8348..8352),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8353..8367),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("RangeOmit", 8368..8377),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 8393..8398),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: Identifier("tail", 8399..8403),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8404..8418),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 8419..8424),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("RangeOmit", 8440..8449),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: Identifier("step", 8450..8454),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8455..8469),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("head", 8485..8489),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("MainExpression", 8490..8504),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 8505..8510),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("tail", 8511..8515),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8516..8530),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 8531..8536),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 8553..8558),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("tail", 8559..8563),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("MainExpression", 8564..8578),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 8579..8584),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("step", 8585..8589),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8590..8604),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("head", 8621..8625),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("MainExpression", 8626..8640),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("RangeOmit", 8641..8650),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("step", 8651..8655),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8656..8670),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: Identifier("head", 8687..8691),
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("MainExpression", 8692..8706),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: IGNORED,
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("COLON", 8707..8712),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("tail", 8713..8717),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("MainExpression", 8718..8732),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 8733..8738),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("step", 8739..8743),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8744..8758),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 8097..8771,
        },
        "RangeOmit": GrammarRule {
            name: Identifier("RangeOmit", 8792..8801),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: Identifier("PROPORTION", 8808..8818),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("PROPORTION", 8808..8818),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("COLON", 8821..8826),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 8821..8826),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("COLON", 8829..8834),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 8829..8834),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8772..8836,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 8960..8966),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Namepath", 8975..8983),
                        ),
                        branch: Expression {
                            tag: Identifier("Namepath", 8975..8983),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Namepath", 8975..8983),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Integer", 8990..8997),
                        ),
                        branch: Expression {
                            tag: Identifier("Integer", 8990..8997),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Integer", 8990..8997),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 9004..9011),
                        ),
                        branch: Expression {
                            tag: Identifier("Boolean", 9004..9011),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 9004..9011),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 8954..9013,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 9148..9160),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 9168..9178),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 9168..9178),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilRegex {
                                                        raw: "[.∷]|::",
                                                        span: 9188..9199,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 9202..9212),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 9202..9212),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9135..9216,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 9230..9238),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 9245..9255),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 9245..9255),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION", 9266..9276),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 9279..9289),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 9279..9289),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9217..9293,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 9307..9317),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierBare", 9326..9340),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierBare", 9326..9340),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierBare", 9326..9340),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierRaw", 9347..9360),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierRaw", 9347..9360),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierRaw", 9347..9360),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 9294..9362,
        },
        "IdentifierBare": GrammarRule {
            name: Identifier("IdentifierBare", 9374..9388),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 9395..9430,
                    },
                },
            },
            range: 9363..9432,
        },
        "IdentifierRaw": GrammarRule {
            name: Identifier("IdentifierRaw", 9446..9459),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 9466..9469,
                                },
                            },
                            Expression {
                                tag: Identifier("IdentifierRawText", 9470..9487),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IdentifierRawText", 9470..9487),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 9488..9491,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9433..9493,
        },
        "IdentifierRawText": GrammarRule {
            name: Identifier("IdentifierRawText", 9505..9522),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[^`]",
                                            span: 9529..9533,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 1,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 9494..9536,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 9544..9551),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 9569..9573),
                        ),
                        branch: Expression {
                            tag: Identifier("True", 9569..9573),
                            remark: false,
                            body: YggdrasilText {
                                text: "true",
                                insensitive: false,
                                range: 9560..9566,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 9589..9594),
                        ),
                        branch: Expression {
                            tag: Identifier("False", 9589..9594),
                            remark: false,
                            body: YggdrasilText {
                                text: "false",
                                insensitive: false,
                                range: 9580..9587,
                            },
                        },
                    },
                ],
            },
            range: 9538..9596,
        },
        "Integer": GrammarRule {
            name: Identifier("Integer", 9727..9734),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "0|[1-9][0-9]*",
                        span: 9741..9756,
                    },
                },
            },
            range: 9716..9758,
        },
        "RangeExact": GrammarRule {
            name: Identifier("RangeExact", 9765..9775),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 9782..9785,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Integer", 9786..9793),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Integer", 9786..9793),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 9794..9797,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9759..9799,
        },
        "Range": GrammarRule {
            name: Identifier("Range", 9806..9811),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 9818..9821,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("min", 9823..9826),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Integer", 9827..9834),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ",",
                                    insensitive: false,
                                    range: 9837..9840,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("max", 9842..9845),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Integer", 9846..9853),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 9856..9859,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9800..9861,
        },
        "ModifierCall": GrammarRule {
            name: Identifier("ModifierCall", 9996..10008),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ChoiceExpression {
                                            branches: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_CLASS", 10019..10027),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_UNION", 10030..10038),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_TRAIT", 10041..10049),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 10052..10062),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 10052..10062),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9983..10064,
        },
        "COMMA": GrammarRule {
            name: Identifier("COMMA", 10077..10082),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，]",
                        span: 10084..10090,
                    },
                },
            },
            range: 10077..10090,
        },
        "COLON": GrammarRule {
            name: Identifier("COLON", 10095..10100),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[:：]",
                        span: 10102..10108,
                    },
                },
            },
            range: 10095..10108,
        },
        "PROPORTION": GrammarRule {
            name: Identifier("PROPORTION", 10113..10123),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "∷|::",
                        span: 10125..10133,
                    },
                },
            },
            range: 10113..10133,
        },
        "DOT": GrammarRule {
            name: Identifier("DOT", 10138..10141),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[.．]",
                        span: 10145..10151,
                    },
                },
            },
            range: 10138..10151,
        },
        "OP_IMPORT_ALL": GrammarRule {
            name: Identifier("OP_IMPORT_ALL", 10182..10195),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "*",
                        insensitive: false,
                        range: 10197..10200,
                    },
                },
            },
            range: 10182..10200,
        },
        "OP_AND_THEN": GrammarRule {
            name: Identifier("OP_AND_THEN", 10205..10216),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "?",
                        insensitive: false,
                        range: 10218..10221,
                    },
                },
            },
            range: 10205..10221,
        },
        "OP_BIND": GrammarRule {
            name: Identifier("OP_BIND", 10226..10233),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "≔|:=",
                        span: 10235..10243,
                    },
                },
            },
            range: 10226..10243,
        },
        "KW_NAMESPACE": GrammarRule {
            name: Identifier("KW_NAMESPACE", 10290..10302),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "namespace",
                        span: 10304..10315,
                    },
                },
            },
            range: 10290..10315,
        },
        "KW_IMPORT": GrammarRule {
            name: Identifier("KW_IMPORT", 10320..10329),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "using",
                        span: 10331..10338,
                    },
                },
            },
            range: 10320..10338,
        },
        "KW_TEMPLATE": GrammarRule {
            name: Identifier("KW_TEMPLATE", 10343..10354),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "template|generic",
                        span: 10356..10374,
                    },
                },
            },
            range: 10343..10374,
        },
        "KW_WHERE": GrammarRule {
            name: Identifier("KW_WHERE", 10379..10387),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "where",
                        span: 10389..10396,
                    },
                },
            },
            range: 10379..10396,
        },
        "KW_IMPLEMENTS": GrammarRule {
            name: Identifier("KW_IMPLEMENTS", 10433..10446),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "implements?",
                        span: 10448..10461,
                    },
                },
            },
            range: 10433..10461,
        },
        "KW_EXTENDS": GrammarRule {
            name: Identifier("KW_EXTENDS", 10466..10476),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "extends?",
                        span: 10478..10488,
                    },
                },
            },
            range: 10466..10488,
        },
        "KW_INHERITS": GrammarRule {
            name: Identifier("KW_INHERITS", 10493..10504),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "inherits?",
                        span: 10506..10517,
                    },
                },
            },
            range: 10493..10517,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 10537..10542),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "if",
                        span: 10544..10548,
                    },
                },
            },
            range: 10537..10548,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 10553..10560),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "else",
                        span: 10562..10568,
                    },
                },
            },
            range: 10553..10568,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 10595..10601),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "for",
                        span: 10603..10608,
                    },
                },
            },
            range: 10595..10608,
        },
        "KW_RETURN": GrammarRule {
            name: Identifier("KW_RETURN", 10613..10622),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "return",
                        span: 10624..10632,
                    },
                },
            },
            range: 10613..10632,
        },
        "KW_BREAK": GrammarRule {
            name: Identifier("KW_BREAK", 10637..10645),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "break",
                        span: 10647..10654,
                    },
                },
            },
            range: 10637..10654,
        },
        "KW_CONTINUE": GrammarRule {
            name: Identifier("KW_CONTINUE", 10659..10670),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "continue",
                        span: 10672..10682,
                    },
                },
            },
            range: 10659..10682,
        },
        "KW_NOT": GrammarRule {
            name: Identifier("KW_NOT", 10808..10814),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "not",
                        insensitive: false,
                        range: 10816..10821,
                    },
                },
            },
            range: 10808..10821,
        },
        "KW_IN": GrammarRule {
            name: Identifier("KW_IN", 10826..10831),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "in",
                        insensitive: false,
                        range: 10833..10837,
                    },
                },
            },
            range: 10826..10837,
        },
        "KW_IS": GrammarRule {
            name: Identifier("KW_IS", 10842..10847),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "is",
                        insensitive: false,
                        range: 10849..10853,
                    },
                },
            },
            range: 10842..10853,
        },
        "KW_AS": GrammarRule {
            name: Identifier("KW_AS", 10858..10863),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "as",
                        insensitive: false,
                        range: 10865..10869,
                    },
                },
            },
            range: 10858..10869,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 11023..11033),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 11040..11058,
                    },
                },
            },
            range: 10993..11060,
        },
        "Comment": GrammarRule {
            name: Identifier("Comment", 11107..11114),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "//",
                                                insensitive: false,
                                                range: 11123..11127,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[^\\n\\r]*",
                                                span: 11128..11138,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "/*",
                                                insensitive: false,
                                                range: 11145..11149,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "*/",
                                                insensitive: false,
                                                range: 11151..11155,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 11061..11157,
        },
    },
    token_sets: {},
    functions: {},
}