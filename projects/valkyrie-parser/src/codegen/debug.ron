GrammarInfo {
    url: None,
    name: Identifier("Valkyrie", 8..16),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Program": GrammarRule {
            name: Identifier("Program", 35..42),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: true,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Statement", 49..58),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Statement", 49..58),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 23..61,
        },
        "Statement": GrammarRule {
            name: Identifier("Statement", 156..165),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineNamespace", 174..189),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineNamespace", 174..189),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineNamespace", 174..189),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineImport", 196..208),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineImport", 196..208),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineImport", 196..208),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 150..210,
        },
        "EOS": GrammarRule {
            name: Identifier("EOS", 294..297),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Omit", 318..322),
                        ),
                        branch: Expression {
                            tag: Identifier("Omit", 318..322),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[;；]",
                                span: 308..314,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Show", 340..344),
                        ),
                        branch: Expression {
                            tag: Identifier("Show", 340..344),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⁏|;;",
                                span: 329..337,
                            },
                        },
                    },
                ],
            },
            range: 288..346,
        },
        "EOS_FREE": GrammarRule {
            name: Identifier("EOS_FREE", 411..419),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，;；⁏]",
                        span: 426..439,
                    },
                },
            },
            range: 405..441,
        },
        "DefineNamespace": GrammarRule {
            name: Identifier("DefineNamespace", 535..550),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_NAMESPACE", 558..570),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_NAMESPACE", 571..583),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_NAMESPACE", 571..583),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("NamepathFree", 585..597),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 585..597),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 599..602),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 529..605,
        },
        "OP_NAMESPACE": GrammarRule {
            name: Identifier("OP_NAMESPACE", 629..641),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Main", 655..659),
                        ),
                        branch: Expression {
                            tag: Identifier("Main", 655..659),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 650..653,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Test", 671..675),
                        ),
                        branch: Expression {
                            tag: Identifier("Test", 671..675),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 666..669,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Hide", 687..691),
                        ),
                        branch: Expression {
                            tag: Identifier("Hide", 687..691),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 682..685,
                            },
                        },
                    },
                ],
            },
            range: 607..693,
        },
        "DefineImport": GrammarRule {
            name: Identifier("DefineImport", 791..803),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_IMPORT", 813..822),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("ImportTerm", 825..835),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ImportTerm", 825..835),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("EOS", 840..843),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_IMPORT", 852..861),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: YggdrasilText {
                                                            text: "{",
                                                            insensitive: false,
                                                            range: 864..867,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: IGNORED,
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: ChoiceExpression {
                                                                                branches: [
                                                                                    Expression {
                                                                                        tag: Identifier("ImportTerm", 878..888),
                                                                                        remark: false,
                                                                                        body: RuleReference {
                                                                                            name: Identifier("ImportTerm", 878..888),
                                                                                            boxed: false,
                                                                                            inline: false,
                                                                                        },
                                                                                    },
                                                                                    Expression {
                                                                                        tag: None,
                                                                                        remark: false,
                                                                                        body: RuleReference {
                                                                                            name: Identifier("EOS_FREE", 890..898),
                                                                                            boxed: false,
                                                                                            inline: false,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 4294967295,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "}",
                                                insensitive: false,
                                                range: 904..907,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("EOS", 911..914),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 778..917,
        },
        "ImportTerm": GrammarRule {
            name: Identifier("ImportTerm", 924..934),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAs", 943..951),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAs", 943..951),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAs", 943..951),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAll", 958..967),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAll", 958..967),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAll", 958..967),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportMacro", 974..985),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportMacro", 974..985),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportMacro", 974..985),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportBlock", 992..1003),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportBlock", 992..1003),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportBlock", 992..1003),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NamepathFree", 1010..1022),
                        ),
                        branch: Expression {
                            tag: Identifier("NamepathFree", 1010..1022),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("NamepathFree", 1010..1022),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 918..1024,
        },
        "ImportAs": GrammarRule {
            name: Identifier("ImportAs", 1077..1085),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("NamepathFree", 1088..1100),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("NamepathFree", 1088..1100),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_AS", 1102..1107),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("alias", 1108..1113),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1114..1124),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1071..1126,
        },
        "ImportAll": GrammarRule {
            name: Identifier("ImportAll", 1167..1176),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("NamepathFree", 1179..1191),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1179..1191),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilRegex {
                                    raw: "[.∷]|::",
                                    span: 1192..1203,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("OP_IMPORT_ALL", 1204..1217),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("OP_IMPORT_ALL", 1204..1217),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1161..1219,
        },
        "ImportBlock": GrammarRule {
            name: Identifier("ImportBlock", 1271..1282),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("NamepathFree", 1290..1302),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1290..1302),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[.∷]|::",
                                            span: 1305..1316,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 1320..1323,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("ImportTerm", 1334..1344),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ImportTerm", 1334..1344),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 1346..1354),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 1360..1363,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1258..1365,
        },
        "ImportMacro": GrammarRule {
            name: Identifier("ImportMacro", 1419..1430),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("NamepathFree", 1438..1450),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("NamepathFree", 1438..1450),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[.∷]|::",
                                                span: 1451..1462,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("ImportMacroItem", 1463..1478),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("ImportMacroItem", 1463..1478),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_AS", 1480..1485),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("alias", 1486..1491),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ImportMacroItem", 1492..1507),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1413..1509,
        },
        "ImportMacroItem": GrammarRule {
            name: Identifier("ImportMacroItem", 1523..1538),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Capture", 1563..1570),
                        ),
                        branch: Expression {
                            tag: Identifier("Capture", 1563..1570),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "#",
                                            insensitive: false,
                                            range: 1547..1550,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 1551..1561),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1551..1561),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Instant", 1593..1600),
                        ),
                        branch: Expression {
                            tag: Identifier("Instant", 1593..1600),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "@",
                                            insensitive: false,
                                            range: 1577..1580,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 1581..1591),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1581..1591),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 1510..1602,
        },
        "DefineClass": GrammarRule {
            name: Identifier("DefineClass", 1731..1742),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineTemplate", 1749..1763),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineTemplate", 1749..1763),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("KW_CLASS", 1827..1835),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_CLASS", 1827..1835),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Identifier", 1836..1846),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1836..1846),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ClassInherit", 1847..1859),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ClassInherit", 1847..1859),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 1861..1871),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 1861..1871),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 1873..1876),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1725..1879,
        },
        "ClassBlock": GrammarRule {
            name: Identifier("ClassBlock", 1886..1896),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 1903..1906,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ClassBlockItem", 1907..1921),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassBlockItem", 1907..1921),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 1923..1926,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1880..1928,
        },
        "ClassBlockItem": GrammarRule {
            name: Identifier("ClassBlockItem", 1935..1949),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassDomain", 1958..1969),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassDomain", 1958..1969),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassDomain", 1958..1969),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassMethod", 1976..1987),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassMethod", 1976..1987),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassMethod", 1976..1987),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassField", 1994..2004),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassField", 1994..2004),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassField", 1994..2004),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EosFree", 2011..2019),
                        ),
                        branch: Expression {
                            tag: Identifier("EosFree", 2011..2019),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS_FREE", 2011..2019),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 1929..2021,
        },
        "ClassInherit": GrammarRule {
            name: Identifier("ClassInherit", 2028..2040),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 2047..2050,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("ClassInheritItem", 2052..2068),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassInheritItem", 2052..2068),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: IGNORED,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: YggdrasilText {
                                                                                        text: ",",
                                                                                        insensitive: false,
                                                                                        range: 2070..2073,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("ClassInheritItem", 2074..2090),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("ClassInheritItem", 2074..2090),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: ",",
                                                                insensitive: false,
                                                                range: 2093..2096,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 2100..2103,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2022..2105,
        },
        "ClassInheritItem": GrammarRule {
            name: Identifier("ClassInheritItem", 2112..2128),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Namepath", 2135..2143),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Namepath", 2135..2143),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2106..2145,
        },
        "ClassField": GrammarRule {
            name: Identifier("ClassField", 2152..2162),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Identifier", 2169..2179),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Identifier", 2169..2179),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2146..2256,
        },
        "ClassMethod": GrammarRule {
            name: Identifier("ClassMethod", 2263..2274),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 2383..2393),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2383..2393),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 2394..2397,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 2398..2401,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2257..2403,
        },
        "ClassDomain": GrammarRule {
            name: Identifier("ClassDomain", 2410..2421),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 2465..2475),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2465..2475),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 2476..2486),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 2476..2486),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2404..2488,
        },
        "DefineTemplate": GrammarRule {
            name: Identifier("DefineTemplate", 2616..2630),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_TEMPLATE", 2666..2677),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_TEMPLATE", 2666..2677),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TemplateParameters", 2678..2696),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TemplateParameters", 2678..2696),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TemplateBlock", 2698..2711),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TemplateBlock", 2698..2711),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2610..2713,
        },
        "TemplateParameters": GrammarRule {
            name: Identifier("TemplateParameters", 2720..2738),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("Identifier", 2747..2757),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2747..2757),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: Identifier("COMMA", 2759..2764),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2759..2764),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: IGNORED,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2765..2775),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2765..2775),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("COMMA", 2778..2783),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2778..2783),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "<",
                                                insensitive: false,
                                                range: 2791..2794,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("Identifier", 2795..2805),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2795..2805),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: Identifier("COMMA", 2807..2812),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2807..2812),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: IGNORED,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2813..2823),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2813..2823),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("COMMA", 2826..2831),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2826..2831),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ">",
                                                insensitive: false,
                                                range: 2833..2836,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "⟨",
                                    insensitive: false,
                                    range: 2843..2848,
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 2849..2859),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2849..2859),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("COMMA", 2861..2866),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("COMMA", 2861..2866),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: Identifier("Identifier", 2867..2877),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("Identifier", 2867..2877),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("COMMA", 2880..2885),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("COMMA", 2880..2885),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "⟩",
                                    insensitive: false,
                                    range: 2887..2892,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2714..2894,
        },
        "TemplateBlock": GrammarRule {
            name: Identifier("TemplateBlock", 2901..2914),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 2921..2924,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("TemplateStatement", 2926..2943),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TemplateStatement", 2926..2943),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("TemplateImplements", 2946..2964),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TemplateImplements", 2946..2964),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("EOS_FREE", 2967..2975),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 2967..2975),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 2978..2981,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2895..2983,
        },
        "TemplateStatement": GrammarRule {
            name: Identifier("TemplateStatement", 2990..3007),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("WhereBlock", 3014..3024),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("WhereBlock", 3014..3024),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2984..3095,
        },
        "TemplateImplements": GrammarRule {
            name: Identifier("TemplateImplements", 3102..3120),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_IMPLEMENTS", 3129..3142),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_IMPLEMENTS", 3129..3142),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3096..3162,
        },
        "WhereBlock": GrammarRule {
            name: Identifier("WhereBlock", 3169..3179),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHERE", 3186..3194),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHERE", 3186..3194),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 3195..3198,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("WhereBound", 3199..3209),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("WhereBound", 3199..3209),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 3211..3214,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3163..3216,
        },
        "WhereBound": GrammarRule {
            name: Identifier("WhereBound", 3223..3233),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("EOS_FREE", 3286..3294),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("EOS_FREE", 3286..3294),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3217..3296,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 3510..3518),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "class",
                                    insensitive: false,
                                    range: 3527..3534,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "structure",
                                    insensitive: false,
                                    range: 3541..3552,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3488..3554,
        },
        "KW_UNION": GrammarRule {
            name: Identifier("KW_UNION", 3701..3709),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "union",
                        insensitive: false,
                        range: 3716..3723,
                    },
                },
            },
            range: 3679..3725,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 8408..8416),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "trait|interface",
                        span: 8418..8435,
                    },
                },
            },
            range: 8408..8435,
        },
        "WhileStatement": GrammarRule {
            name: Identifier("WhileStatement", 4022..4036),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHILE", 4043..4051),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHILE", 4043..4051),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 4052..4068),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 4052..4068),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 4070..4073,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainStatement", 4074..4087),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainStatement", 4074..4087),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 4089..4092,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4094..4097),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4016..4100,
        },
        "KW_WHILE": GrammarRule {
            name: Identifier("KW_WHILE", 8580..8588),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "while",
                        span: 8590..8597,
                    },
                },
            },
            range: 8580..8597,
        },
        "ForStatement": GrammarRule {
            name: Identifier("ForStatement", 4305..4317),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_FOR", 4324..4330),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 4324..4330),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Identifier", 4331..4341),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4331..4341),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("KW_IN", 4342..4347),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IN", 4342..4347),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 4348..4364),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 4348..4364),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 4366..4369,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainStatement", 4370..4383),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainStatement", 4370..4383),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 4385..4388,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4390..4393),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4299..4396,
        },
        "MainStatement": GrammarRule {
            name: Identifier("MainStatement", 4531..4544),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("WhileStatement", 4553..4567),
                        ),
                        branch: Expression {
                            tag: Identifier("WhileStatement", 4553..4567),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("WhileStatement", 4553..4567),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ForStatement", 4574..4586),
                        ),
                        branch: Expression {
                            tag: Identifier("ForStatement", 4574..4586),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ForStatement", 4574..4586),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainExpression", 4593..4607),
                        ),
                        branch: Expression {
                            tag: Identifier("MainExpression", 4593..4607),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MainExpression", 4593..4607),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 4518..4609,
        },
        "MainExpression": GrammarRule {
            name: Identifier("MainExpression", 4744..4758),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("MainTerm", 4765..4773),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainTerm", 4765..4773),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 4783..4792),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 4783..4792),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainTerm", 4795..4803),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainTerm", 4795..4803),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4731..4807,
        },
        "MainTerm": GrammarRule {
            name: Identifier("MainTerm", 4821..4829),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 4837..4847),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 4837..4847),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 4858..4868),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 4858..4868),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainSuffix", 4878..4888),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainSuffix", 4878..4888),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4808..4892,
        },
        "MainFactor": GrammarRule {
            name: Identifier("MainFactor", 4906..4916),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainFactor0", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("MainFactor0", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "(",
                                            insensitive: false,
                                            range: 4925..4928,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("MainExpression", 4929..4943),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainExpression", 4929..4943),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ")",
                                            insensitive: false,
                                            range: 4944..4947,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Atomic", 4954..4960),
                        ),
                        branch: Expression {
                            tag: Identifier("Atomic", 4954..4960),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Atomic", 4954..4960),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 4893..4962,
        },
        "MainInfix": GrammarRule {
            name: Identifier("MainInfix", 4993..5002),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Plus", 5019..5023),
                        ),
                        branch: Expression {
                            tag: Identifier("Plus", 5019..5023),
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 5013..5016,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("PlusAssign", 5036..5046),
                        ),
                        branch: Expression {
                            tag: Identifier("PlusAssign", 5036..5046),
                            remark: false,
                            body: YggdrasilText {
                                text: "+=",
                                insensitive: false,
                                range: 5030..5034,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Minus", 5059..5064),
                        ),
                        branch: Expression {
                            tag: Identifier("Minus", 5059..5064),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 5053..5056,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MinusAssign", 5077..5088),
                        ),
                        branch: Expression {
                            tag: Identifier("MinusAssign", 5077..5088),
                            remark: false,
                            body: YggdrasilText {
                                text: "-=",
                                insensitive: false,
                                range: 5071..5075,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Multiply", 5101..5109),
                        ),
                        branch: Expression {
                            tag: Identifier("Multiply", 5101..5109),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 5095..5098,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MultiplyAssign", 5122..5136),
                        ),
                        branch: Expression {
                            tag: Identifier("MultiplyAssign", 5122..5136),
                            remark: false,
                            body: YggdrasilText {
                                text: "*=",
                                insensitive: false,
                                range: 5116..5120,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Divide", 5149..5155),
                        ),
                        branch: Expression {
                            tag: Identifier("Divide", 5149..5155),
                            remark: false,
                            body: YggdrasilText {
                                text: "/",
                                insensitive: false,
                                range: 5143..5146,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DivideAssign", 5168..5180),
                        ),
                        branch: Expression {
                            tag: Identifier("DivideAssign", 5168..5180),
                            remark: false,
                            body: YggdrasilText {
                                text: "/=",
                                insensitive: false,
                                range: 5162..5166,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Remainder", 5193..5202),
                        ),
                        branch: Expression {
                            tag: Identifier("Remainder", 5193..5202),
                            remark: false,
                            body: YggdrasilText {
                                text: "%",
                                insensitive: false,
                                range: 5187..5190,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RemainderAssign", 5215..5230),
                        ),
                        branch: Expression {
                            tag: Identifier("RemainderAssign", 5215..5230),
                            remark: false,
                            body: YggdrasilText {
                                text: "%=",
                                insensitive: false,
                                range: 5209..5213,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Power", 5243..5248),
                        ),
                        branch: Expression {
                            tag: Identifier("Power", 5243..5248),
                            remark: false,
                            body: YggdrasilText {
                                text: "^",
                                insensitive: false,
                                range: 5237..5240,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Surd", 5263..5267),
                        ),
                        branch: Expression {
                            tag: Identifier("Surd", 5263..5267),
                            remark: false,
                            body: YggdrasilText {
                                text: "√",
                                insensitive: false,
                                range: 5255..5260,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LLL", 5312..5315),
                        ),
                        branch: Expression {
                            tag: Identifier("LLL", 5312..5315),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⋘|<<<",
                                span: 5299..5308,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LLE", 5334..5337),
                        ),
                        branch: Expression {
                            tag: Identifier("LLE", 5334..5337),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "<<=",
                                span: 5322..5327,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LL", 5358..5360),
                        ),
                        branch: Expression {
                            tag: Identifier("LL", 5358..5360),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≪|<<",
                                span: 5344..5352,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LEQ", 5383..5386),
                        ),
                        branch: Expression {
                            tag: Identifier("LEQ", 5383..5386),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[⩽≤]|<=",
                                span: 5367..5380,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LE", 5405..5407),
                        ),
                        branch: Expression {
                            tag: Identifier("LE", 5405..5407),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "<",
                                span: 5393..5396,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GGG", 5427..5430),
                        ),
                        branch: Expression {
                            tag: Identifier("GGG", 5427..5430),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⋙|>>>",
                                span: 5414..5423,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GGE", 5449..5452),
                        ),
                        branch: Expression {
                            tag: Identifier("GGE", 5449..5452),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: ">>=",
                                span: 5437..5442,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GG", 5473..5475),
                        ),
                        branch: Expression {
                            tag: Identifier("GG", 5473..5475),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≫|>>",
                                span: 5459..5467,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GEQ", 5498..5501),
                        ),
                        branch: Expression {
                            tag: Identifier("GEQ", 5498..5501),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[⩾≥]|>=",
                                span: 5482..5495,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GE", 5513..5515),
                        ),
                        branch: Expression {
                            tag: Identifier("GE", 5513..5515),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: ">",
                                span: 5508..5511,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EEE", 5562..5565),
                        ),
                        branch: Expression {
                            tag: Identifier("EEE", 5562..5565),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≡|===",
                                span: 5547..5556,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NEE", 5587..5590),
                        ),
                        branch: Expression {
                            tag: Identifier("NEE", 5587..5590),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≢|!==|=!=",
                                span: 5572..5585,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NE", 5612..5614),
                        ),
                        branch: Expression {
                            tag: Identifier("NE", 5612..5614),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≠|!=",
                                span: 5597..5605,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EQ", 5634..5636),
                        ),
                        branch: Expression {
                            tag: Identifier("EQ", 5634..5636),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "=",
                                span: 5621..5624,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("UpTo", 5678..5682),
                        ),
                        branch: Expression {
                            tag: Identifier("UpTo", 5678..5682),
                            remark: false,
                            body: YggdrasilText {
                                text: "..<",
                                insensitive: false,
                                range: 5665..5670,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Until", 5702..5707),
                        ),
                        branch: Expression {
                            tag: Identifier("Until", 5702..5707),
                            remark: false,
                            body: YggdrasilText {
                                text: "..=",
                                insensitive: false,
                                range: 5689..5694,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("In", 5762..5764),
                        ),
                        branch: Expression {
                            tag: Identifier("In", 5762..5764),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IN", 5737..5742),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[∈∊]",
                                            span: 5745..5753,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotIn", 5795..5800),
                        ),
                        branch: Expression {
                            tag: Identifier("NotIn", 5795..5800),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_NOT", 5772..5778),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_IN", 5781..5786),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "∉",
                                            insensitive: false,
                                            range: 5787..5792,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Contains", 5833..5841),
                        ),
                        branch: Expression {
                            tag: Identifier("Contains", 5833..5841),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[∋∍]",
                                span: 5807..5815,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotContains", 5872..5883),
                        ),
                        branch: Expression {
                            tag: Identifier("NotContains", 5872..5883),
                            remark: false,
                            body: YggdrasilText {
                                text: "∌",
                                insensitive: false,
                                range: 5848..5853,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Map", 5929..5932),
                        ),
                        branch: Expression {
                            tag: Identifier("Map", 5929..5932),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "/@",
                                            insensitive: false,
                                            range: 5913..5917,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[⇴⨵]",
                                            span: 5918..5926,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Apply3", 5954..5960),
                        ),
                        branch: Expression {
                            tag: Identifier("Apply3", 5954..5960),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "@{3}|⟴",
                                span: 5940..5950,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Apply2", 5982..5988),
                        ),
                        branch: Expression {
                            tag: Identifier("Apply2", 5982..5988),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "@{2}|⊕",
                                span: 5968..5978,
                            },
                        },
                    },
                ],
            },
            range: 4963..5990,
        },
        "MainPrefix": GrammarRule {
            name: Identifier("MainPrefix", 6004..6014),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Not", 6036..6039),
                        ),
                        branch: Expression {
                            tag: Identifier("Not", 6036..6039),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[¬!]",
                                span: 6023..6028,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Positive", 6058..6066),
                        ),
                        branch: Expression {
                            tag: Identifier("Positive", 6058..6066),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[+]",
                                span: 6046..6049,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Negative", 6085..6093),
                        ),
                        branch: Expression {
                            tag: Identifier("Negative", 6085..6093),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[-]",
                                span: 6073..6076,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Reference", 6112..6121),
                        ),
                        branch: Expression {
                            tag: Identifier("Reference", 6112..6121),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[&]",
                                span: 6100..6103,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DeconstructAll", 6142..6156),
                        ),
                        branch: Expression {
                            tag: Identifier("DeconstructAll", 6142..6156),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "…|[.]{3}",
                                span: 6128..6140,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Deconstruct", 6177..6188),
                        ),
                        branch: Expression {
                            tag: Identifier("Deconstruct", 6177..6188),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "‥|[.]{2}",
                                span: 6163..6175,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Inverse", 6209..6216),
                        ),
                        branch: Expression {
                            tag: Identifier("Inverse", 6209..6216),
                            remark: false,
                            body: YggdrasilText {
                                text: "⅟",
                                insensitive: false,
                                range: 6195..6200,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root2", 6237..6242),
                        ),
                        branch: Expression {
                            tag: Identifier("Root2", 6237..6242),
                            remark: false,
                            body: YggdrasilText {
                                text: "√",
                                insensitive: false,
                                range: 6223..6228,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root3", 6263..6268),
                        ),
                        branch: Expression {
                            tag: Identifier("Root3", 6263..6268),
                            remark: false,
                            body: YggdrasilText {
                                text: "∛",
                                insensitive: false,
                                range: 6249..6254,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root4", 6289..6294),
                        ),
                        branch: Expression {
                            tag: Identifier("Root4", 6289..6294),
                            remark: false,
                            body: YggdrasilText {
                                text: "∜",
                                insensitive: false,
                                range: 6275..6280,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Dereference", 6313..6324),
                        ),
                        branch: Expression {
                            tag: Identifier("Dereference", 6313..6324),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[*]",
                                span: 6301..6304,
                            },
                        },
                    },
                ],
            },
            range: 5991..6326,
        },
        "MainSuffix": GrammarRule {
            name: Identifier("MainSuffix", 6333..6343),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Raise", 6358..6363),
                        ),
                        branch: Expression {
                            tag: Identifier("Raise", 6358..6363),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 6352..6355,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent2", 6376..6384),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent2", 6376..6384),
                            remark: false,
                            body: YggdrasilText {
                                text: "%",
                                insensitive: false,
                                range: 6370..6373,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent3", 6399..6407),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent3", 6399..6407),
                            remark: false,
                            body: YggdrasilText {
                                text: "‰",
                                insensitive: false,
                                range: 6391..6396,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent4", 6421..6429),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent4", 6421..6429),
                            remark: false,
                            body: YggdrasilText {
                                text: "‱",
                                insensitive: false,
                                range: 6414..6419,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime1", 6444..6450),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime1", 6444..6450),
                            remark: false,
                            body: YggdrasilText {
                                text: "′",
                                insensitive: false,
                                range: 6436..6441,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime2", 6465..6471),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime2", 6465..6471),
                            remark: false,
                            body: YggdrasilText {
                                text: "″",
                                insensitive: false,
                                range: 6457..6462,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime3", 6486..6492),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime3", 6486..6492),
                            remark: false,
                            body: YggdrasilText {
                                text: "‴",
                                insensitive: false,
                                range: 6478..6483,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime4", 6507..6513),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime4", 6507..6513),
                            remark: false,
                            body: YggdrasilText {
                                text: "⁗",
                                insensitive: false,
                                range: 6499..6504,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Celsius", 6528..6535),
                        ),
                        branch: Expression {
                            tag: Identifier("Celsius", 6528..6535),
                            remark: false,
                            body: YggdrasilText {
                                text: "℃",
                                insensitive: false,
                                range: 6520..6525,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Fahrenheit", 6550..6560),
                        ),
                        branch: Expression {
                            tag: Identifier("Fahrenheit", 6550..6560),
                            remark: false,
                            body: YggdrasilText {
                                text: "℉",
                                insensitive: false,
                                range: 6542..6547,
                            },
                        },
                    },
                ],
            },
            range: 6327..6562,
        },
        "InlineExpression": GrammarRule {
            name: Identifier("InlineExpression", 6697..6713),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("InlineTerm", 6720..6730),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("InlineTerm", 6720..6730),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 6740..6749),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 6740..6749),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("InlineTerm", 6752..6762),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("InlineTerm", 6752..6762),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 6684..6766,
        },
        "InlineTerm": GrammarRule {
            name: Identifier("InlineTerm", 6780..6790),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 6798..6808),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 6798..6808),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("InlineFactor", 6819..6831),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("InlineFactor", 6819..6831),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainSuffix", 6841..6851),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainSuffix", 6841..6851),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 6767..6855,
        },
        "InlineFactor": GrammarRule {
            name: Identifier("InlineFactor", 6869..6881),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("InlineFactor0", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("InlineFactor0", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "(",
                                            insensitive: false,
                                            range: 6890..6893,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("MainExpression", 6894..6908),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainExpression", 6894..6908),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ")",
                                            insensitive: false,
                                            range: 6909..6912,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Atomic", 6919..6925),
                        ),
                        branch: Expression {
                            tag: Identifier("Atomic", 6919..6925),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Atomic", 6919..6925),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 6856..6927,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 7051..7057),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Namepath", 7066..7074),
                        ),
                        branch: Expression {
                            tag: Identifier("Namepath", 7066..7074),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Namepath", 7066..7074),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Integer", 7081..7088),
                        ),
                        branch: Expression {
                            tag: Identifier("Integer", 7081..7088),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Integer", 7081..7088),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 7095..7102),
                        ),
                        branch: Expression {
                            tag: Identifier("Boolean", 7095..7102),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 7095..7102),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7045..7104,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 7240..7252),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 7260..7270),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 7260..7270),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilRegex {
                                                        raw: "[.∷]|::",
                                                        span: 7280..7291,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 7294..7304),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 7294..7304),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7227..7308,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 7322..7330),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 7337..7347),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 7337..7347),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilRegex {
                                                        raw: "∷|::",
                                                        span: 7357..7365,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 7368..7378),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 7368..7378),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7309..7382,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 7396..7406),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierBare", 7415..7429),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierBare", 7415..7429),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierBare", 7415..7429),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierRaw", 7436..7449),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierRaw", 7436..7449),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierRaw", 7436..7449),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7383..7451,
        },
        "IdentifierBare": GrammarRule {
            name: Identifier("IdentifierBare", 7463..7477),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 7484..7519,
                    },
                },
            },
            range: 7452..7521,
        },
        "IdentifierRaw": GrammarRule {
            name: Identifier("IdentifierRaw", 7535..7548),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 7555..7558,
                                },
                            },
                            Expression {
                                tag: Identifier("IdentifierRawText", 7559..7576),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IdentifierRawText", 7559..7576),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 7577..7580,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7522..7582,
        },
        "IdentifierRawText": GrammarRule {
            name: Identifier("IdentifierRawText", 7594..7611),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[^`]",
                                            span: 7618..7622,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 1,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 7583..7625,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 7633..7640),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 7658..7662),
                        ),
                        branch: Expression {
                            tag: Identifier("True", 7658..7662),
                            remark: false,
                            body: YggdrasilText {
                                text: "true",
                                insensitive: false,
                                range: 7649..7655,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 7678..7683),
                        ),
                        branch: Expression {
                            tag: Identifier("False", 7678..7683),
                            remark: false,
                            body: YggdrasilText {
                                text: "false",
                                insensitive: false,
                                range: 7669..7676,
                            },
                        },
                    },
                ],
            },
            range: 7627..7685,
        },
        "Integer": GrammarRule {
            name: Identifier("Integer", 7816..7823),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "0|[1-9][0-9]*",
                        span: 7830..7845,
                    },
                },
            },
            range: 7805..7847,
        },
        "RangeExact": GrammarRule {
            name: Identifier("RangeExact", 7854..7864),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 7871..7874,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Integer", 7875..7882),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Integer", 7875..7882),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 7883..7886,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7848..7888,
        },
        "Range": GrammarRule {
            name: Identifier("Range", 7895..7900),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 7907..7910,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("min", 7912..7915),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Integer", 7916..7923),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ",",
                                    insensitive: false,
                                    range: 7926..7929,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("max", 7931..7934),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Integer", 7935..7942),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 7945..7948,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7889..7950,
        },
        "ModifierCall": GrammarRule {
            name: Identifier("ModifierCall", 8085..8097),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ChoiceExpression {
                                            branches: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_CLASS", 8108..8116),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_UNION", 8119..8127),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_TRAIT", 8130..8138),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 8141..8151),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 8141..8151),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 8072..8153,
        },
        "COMMA": GrammarRule {
            name: Identifier("COMMA", 8166..8171),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，]",
                        span: 8173..8179,
                    },
                },
            },
            range: 8166..8179,
        },
        "OP_IMPORT_ALL": GrammarRule {
            name: Identifier("OP_IMPORT_ALL", 8210..8223),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "*",
                        insensitive: false,
                        range: 8225..8228,
                    },
                },
            },
            range: 8210..8228,
        },
        "OP_BIND": GrammarRule {
            name: Identifier("OP_BIND", 8233..8240),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "≔|:=",
                        span: 8242..8250,
                    },
                },
            },
            range: 8233..8250,
        },
        "KW_NAMESPACE": GrammarRule {
            name: Identifier("KW_NAMESPACE", 8297..8309),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "namespace",
                        span: 8311..8322,
                    },
                },
            },
            range: 8297..8322,
        },
        "KW_IMPORT": GrammarRule {
            name: Identifier("KW_IMPORT", 8327..8336),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "using",
                        span: 8338..8345,
                    },
                },
            },
            range: 8327..8345,
        },
        "KW_TEMPLATE": GrammarRule {
            name: Identifier("KW_TEMPLATE", 8350..8361),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "template|generic",
                        span: 8363..8381,
                    },
                },
            },
            range: 8350..8381,
        },
        "KW_WHERE": GrammarRule {
            name: Identifier("KW_WHERE", 8386..8394),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "where",
                        span: 8396..8403,
                    },
                },
            },
            range: 8386..8403,
        },
        "KW_IMPLEMENTS": GrammarRule {
            name: Identifier("KW_IMPLEMENTS", 8440..8453),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "implements?",
                        span: 8455..8468,
                    },
                },
            },
            range: 8440..8468,
        },
        "KW_EXTENDS": GrammarRule {
            name: Identifier("KW_EXTENDS", 8473..8483),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "extends?",
                        span: 8485..8495,
                    },
                },
            },
            range: 8473..8495,
        },
        "KW_INHERITS": GrammarRule {
            name: Identifier("KW_INHERITS", 8500..8511),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "inherits?",
                        span: 8513..8524,
                    },
                },
            },
            range: 8500..8524,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 8544..8549),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "if",
                        span: 8551..8555,
                    },
                },
            },
            range: 8544..8555,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 8560..8567),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "else",
                        span: 8569..8575,
                    },
                },
            },
            range: 8560..8575,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 8602..8608),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "for",
                        span: 8610..8615,
                    },
                },
            },
            range: 8602..8615,
        },
        "KW_RETURN": GrammarRule {
            name: Identifier("KW_RETURN", 8620..8629),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "return",
                        span: 8631..8639,
                    },
                },
            },
            range: 8620..8639,
        },
        "KW_BREAK": GrammarRule {
            name: Identifier("KW_BREAK", 8644..8652),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "break",
                        span: 8654..8661,
                    },
                },
            },
            range: 8644..8661,
        },
        "KW_CONTINUE": GrammarRule {
            name: Identifier("KW_CONTINUE", 8666..8677),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "continue",
                        span: 8679..8689,
                    },
                },
            },
            range: 8666..8689,
        },
        "KW_AS": GrammarRule {
            name: Identifier("KW_AS", 8815..8820),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "as",
                        insensitive: false,
                        range: 8822..8826,
                    },
                },
            },
            range: 8815..8826,
        },
        "KW_IN": GrammarRule {
            name: Identifier("KW_IN", 8831..8836),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "in",
                        insensitive: false,
                        range: 8838..8842,
                    },
                },
            },
            range: 8831..8842,
        },
        "KW_NOT": GrammarRule {
            name: Identifier("KW_NOT", 8847..8853),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "not",
                        insensitive: false,
                        range: 8855..8860,
                    },
                },
            },
            range: 8847..8860,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 9014..9024),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 9031..9049,
                    },
                },
            },
            range: 8984..9051,
        },
        "Comment": GrammarRule {
            name: Identifier("Comment", 9098..9105),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "//",
                                                insensitive: false,
                                                range: 9114..9118,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[^\\n\\r]*",
                                                span: 9119..9129,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "/*",
                                                insensitive: false,
                                                range: 9136..9140,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "*/",
                                                insensitive: false,
                                                range: 9142..9146,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9052..9148,
        },
    },
    token_sets: {},
    functions: {},
}