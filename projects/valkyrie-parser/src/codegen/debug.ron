GrammarInfo {
    url: None,
    name: Identifier("Valkyrie", 8..16),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Program": GrammarRule {
            name: Identifier("Program", 35..42),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("Statement", 49..58),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Statement", 49..58),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 23..61,
        },
        "Statement": GrammarRule {
            name: Identifier("Statement", 156..165),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineNamespace", 174..189),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineNamespace", 174..189),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineNamespace", 174..189),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineImport", 196..208),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineImport", 196..208),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineImport", 196..208),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineClass", 215..226),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineClass", 215..226),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineClass", 215..226),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineUnion", 233..244),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineUnion", 233..244),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineUnion", 233..244),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineFlags", 251..262),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineFlags", 251..262),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineFlags", 251..262),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineTrait", 269..280),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineTrait", 269..280),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineTrait", 269..280),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineFunction", 287..301),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineFunction", 287..301),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineFunction", 287..301),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainStatement", 308..321),
                        ),
                        branch: Expression {
                            tag: Identifier("MainStatement", 308..321),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MainStatement", 308..321),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 150..323,
        },
        "EOS": GrammarRule {
            name: Identifier("EOS", 407..410),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Omit", 431..435),
                        ),
                        branch: Expression {
                            tag: Identifier("Omit", 431..435),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[;；]",
                                span: 421..427,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Show", 453..457),
                        ),
                        branch: Expression {
                            tag: Identifier("Show", 453..457),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⁏|;;",
                                span: 442..450,
                            },
                        },
                    },
                ],
            },
            range: 401..459,
        },
        "EOS_FREE": GrammarRule {
            name: Identifier("EOS_FREE", 524..532),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，;；⁏]",
                        span: 539..552,
                    },
                },
            },
            range: 518..554,
        },
        "DefineNamespace": GrammarRule {
            name: Identifier("DefineNamespace", 648..663),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_NAMESPACE", 671..683),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_NAMESPACE", 684..696),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_NAMESPACE", 684..696),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("NamepathFree", 698..710),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 698..710),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 712..715),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 642..718,
        },
        "OP_NAMESPACE": GrammarRule {
            name: Identifier("OP_NAMESPACE", 742..754),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Main", 768..772),
                        ),
                        branch: Expression {
                            tag: Identifier("Main", 768..772),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 763..766,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Test", 784..788),
                        ),
                        branch: Expression {
                            tag: Identifier("Test", 784..788),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 779..782,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Hide", 800..804),
                        ),
                        branch: Expression {
                            tag: Identifier("Hide", 800..804),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 795..798,
                            },
                        },
                    },
                ],
            },
            range: 720..806,
        },
        "DefineImport": GrammarRule {
            name: Identifier("DefineImport", 904..916),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_IMPORT", 926..935),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("ImportTerm", 938..948),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ImportTerm", 938..948),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("EOS", 953..956),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_IMPORT", 965..974),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "{",
                                                insensitive: false,
                                                range: 977..980,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ChoiceExpression {
                                                                    branches: [
                                                                        Expression {
                                                                            tag: Identifier("ImportTerm", 988..998),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("ImportTerm", 988..998),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("EOS_FREE", 1000..1008),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "}",
                                                insensitive: false,
                                                range: 1014..1017,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("EOS", 1021..1024),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 891..1027,
        },
        "ImportTerm": GrammarRule {
            name: Identifier("ImportTerm", 1034..1044),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAs", 1053..1061),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAs", 1053..1061),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAs", 1053..1061),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAll", 1068..1077),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAll", 1068..1077),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAll", 1068..1077),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportMacro", 1084..1095),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportMacro", 1084..1095),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportMacro", 1084..1095),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportBlock", 1102..1113),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportBlock", 1102..1113),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportBlock", 1102..1113),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NamepathFree", 1120..1132),
                        ),
                        branch: Expression {
                            tag: Identifier("NamepathFree", 1120..1132),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("NamepathFree", 1120..1132),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 1028..1134,
        },
        "ImportAs": GrammarRule {
            name: Identifier("ImportAs", 1187..1195),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("NamepathFree", 1198..1210),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("NamepathFree", 1198..1210),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_AS", 1212..1217),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("alias", 1218..1223),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1224..1234),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1181..1236,
        },
        "ImportAll": GrammarRule {
            name: Identifier("ImportAll", 1277..1286),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("NamepathFree", 1289..1301),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1289..1301),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilRegex {
                                    raw: "[.∷]|::",
                                    span: 1302..1313,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("OP_IMPORT_ALL", 1314..1327),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("OP_IMPORT_ALL", 1314..1327),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1271..1329,
        },
        "ImportBlock": GrammarRule {
            name: Identifier("ImportBlock", 1381..1392),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("NamepathFree", 1400..1412),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1400..1412),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[.∷]|::",
                                            span: 1415..1426,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 1430..1433,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("ImportTerm", 1441..1451),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ImportTerm", 1441..1451),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 1453..1461),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 1467..1470,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1368..1472,
        },
        "ImportMacro": GrammarRule {
            name: Identifier("ImportMacro", 1526..1537),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("NamepathFree", 1545..1557),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("NamepathFree", 1545..1557),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[.∷]|::",
                                                span: 1558..1569,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("ImportMacroItem", 1570..1585),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("ImportMacroItem", 1570..1585),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_AS", 1587..1592),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("alias", 1593..1598),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ImportMacroItem", 1599..1614),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1520..1616,
        },
        "ImportMacroItem": GrammarRule {
            name: Identifier("ImportMacroItem", 1630..1645),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Capture", 1670..1677),
                        ),
                        branch: Expression {
                            tag: Identifier("Capture", 1670..1677),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "#",
                                            insensitive: false,
                                            range: 1654..1657,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 1658..1668),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1658..1668),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Instant", 1700..1707),
                        ),
                        branch: Expression {
                            tag: Identifier("Instant", 1700..1707),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "@",
                                            insensitive: false,
                                            range: 1684..1687,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 1688..1698),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1688..1698),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 1617..1709,
        },
        "DefineTemplate": GrammarRule {
            name: Identifier("DefineTemplate", 1837..1851),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 1858..1871),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 1858..1871),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierCall", 1873..1885),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierCall", 1873..1885),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_TEMPLATE", 1891..1902),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_TEMPLATE", 1891..1902),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TemplateParameters", 1903..1921),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TemplateParameters", 1903..1921),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TemplateBlock", 1923..1936),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TemplateBlock", 1923..1936),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1831..1938,
        },
        "TemplateParameters": GrammarRule {
            name: Identifier("TemplateParameters", 1945..1963),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("Identifier", 1972..1982),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 1972..1982),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 1985..1990),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 1991..2001),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 1991..2001),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2005..2010),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "<",
                                                insensitive: false,
                                                range: 2018..2021,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("Identifier", 2022..2032),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2022..2032),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2035..2040),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2041..2051),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2041..2051),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2055..2060),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ">",
                                                insensitive: false,
                                                range: 2062..2065,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟨",
                                                insensitive: false,
                                                range: 2072..2077,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("Identifier", 2078..2088),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2078..2088),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2091..2096),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2097..2107),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2097..2107),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2111..2116),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟩",
                                                insensitive: false,
                                                range: 2118..2123,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 1939..2125,
        },
        "TemplateBlock": GrammarRule {
            name: Identifier("TemplateBlock", 2132..2145),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 2152..2155,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("TemplateStatement", 2157..2174),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TemplateStatement", 2157..2174),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("TemplateImplements", 2177..2195),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TemplateImplements", 2177..2195),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("EOS_FREE", 2198..2206),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 2198..2206),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 2209..2212,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2126..2214,
        },
        "TemplateStatement": GrammarRule {
            name: Identifier("TemplateStatement", 2221..2238),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("WhereBlock", 2245..2255),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("WhereBlock", 2245..2255),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2215..2326,
        },
        "TemplateImplements": GrammarRule {
            name: Identifier("TemplateImplements", 2333..2351),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_IMPLEMENTS", 2360..2373),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_IMPLEMENTS", 2360..2373),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2327..2393,
        },
        "WhereBlock": GrammarRule {
            name: Identifier("WhereBlock", 2400..2410),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHERE", 2417..2425),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHERE", 2417..2425),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 2426..2429,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("WhereBound", 2430..2440),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("WhereBound", 2430..2440),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 2442..2445,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2394..2447,
        },
        "WhereBound": GrammarRule {
            name: Identifier("WhereBound", 2454..2464),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("EOS_FREE", 2517..2525),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("EOS_FREE", 2517..2525),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2448..2527,
        },
        "DefineClass": GrammarRule {
            name: Identifier("DefineClass", 2725..2736),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("DefineTemplate", 2743..2757),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("DefineTemplate", 2743..2757),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 2759..2772),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 2759..2772),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ModifierCall", 2774..2786),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ModifierCall", 2774..2786),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_CLASS", 2792..2800),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_CLASS", 2792..2800),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 2801..2811),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2801..2811),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ClassInherit", 2812..2824),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ClassInherit", 2812..2824),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 2826..2836),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 2826..2836),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 2838..2841),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2719..2844,
        },
        "ClassBlock": GrammarRule {
            name: Identifier("ClassBlock", 2851..2861),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 2868..2871,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("ClassBlockItem", 2872..2886),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassBlockItem", 2872..2886),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 2888..2891,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2845..2893,
        },
        "ClassBlockItem": GrammarRule {
            name: Identifier("ClassBlockItem", 2900..2914),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassDomain", 2923..2934),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassDomain", 2923..2934),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassDomain", 2923..2934),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassMethod", 2941..2952),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassMethod", 2941..2952),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassMethod", 2941..2952),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassField", 2959..2969),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassField", 2959..2969),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassField", 2959..2969),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EosFree", 2976..2984),
                        ),
                        branch: Expression {
                            tag: Identifier("EosFree", 2976..2984),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS_FREE", 2976..2984),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 2894..2986,
        },
        "ClassInherit": GrammarRule {
            name: Identifier("ClassInherit", 2993..3005),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 3012..3015,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("ClassInheritItem", 3017..3033),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassInheritItem", 3017..3033),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: YggdrasilText {
                                                                                        text: ",",
                                                                                        insensitive: false,
                                                                                        range: 3035..3038,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("ClassInheritItem", 3039..3055),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("ClassInheritItem", 3039..3055),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: ",",
                                                                insensitive: false,
                                                                range: 3058..3061,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 3065..3068,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2987..3070,
        },
        "ClassInheritItem": GrammarRule {
            name: Identifier("ClassInheritItem", 3077..3093),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Namepath", 3100..3108),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Namepath", 3100..3108),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3071..3110,
        },
        "ClassField": GrammarRule {
            name: Identifier("ClassField", 3117..3127),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 3134..3147),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 3134..3147),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("field_modifier", 3149..3163),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("field_modifier", 3149..3163),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 3169..3179),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3169..3179),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TypeHint", 3180..3188),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeHint", 3180..3188),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("ParameterDefault", 3190..3206),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("ParameterDefault", 3190..3206),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 3111..3209,
        },
        "field_modifier": GrammarRule {
            name: Identifier("field_modifier", 3230..3244),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Namepath", 3254..3262),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilRegex {
                                                        raw: "[:=};]",
                                                        span: 3265..3271,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("ModifierCall", 3273..3285),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ModifierCall", 3273..3285),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3210..3287,
        },
        "ParameterDefault": GrammarRule {
            name: Identifier("ParameterDefault", 3294..3310),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "=",
                                    insensitive: false,
                                    range: 3317..3320,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 3321..3335),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 3321..3335),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3288..3337,
        },
        "ClassMethod": GrammarRule {
            name: Identifier("ClassMethod", 3344..3355),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 3362..3375),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 3362..3375),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("method_modifier", 3377..3392),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("method_modifier", 3377..3392),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Namepath", 3394..3402),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 3394..3402),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 3407..3410,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 3411..3414,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3338..3484,
        },
        "method_modifier": GrammarRule {
            name: Identifier("method_modifier", 3505..3520),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Namepath", 3530..3538),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilRegex {
                                                        raw: "[(<:}]",
                                                        span: 3541..3547,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("ModifierCall", 3549..3561),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ModifierCall", 3549..3561),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3485..3563,
        },
        "ClassDomain": GrammarRule {
            name: Identifier("ClassDomain", 3570..3581),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 3588..3601),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 3588..3601),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("field_modifier", 3603..3617),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("field_modifier", 3603..3617),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 3623..3633),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3623..3633),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 3634..3644),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 3634..3644),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3564..3646,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 3669..3677),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Class", 3699..3704),
                        ),
                        branch: Expression {
                            tag: Identifier("Class", 3699..3704),
                            remark: false,
                            body: YggdrasilText {
                                text: "class",
                                insensitive: false,
                                range: 3686..3693,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Structure", 3724..3733),
                        ),
                        branch: Expression {
                            tag: Identifier("Structure", 3724..3733),
                            remark: false,
                            body: YggdrasilText {
                                text: "structure",
                                insensitive: false,
                                range: 3711..3722,
                            },
                        },
                    },
                ],
            },
            range: 3647..3735,
        },
        "DefineUnion": GrammarRule {
            name: Identifier("DefineUnion", 3863..3874),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 3881..3894),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 3881..3894),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_UNION", 3896..3904),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_UNION", 3896..3904),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 3905..3915),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 3905..3915),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3857..3917,
        },
        "KW_UNION": GrammarRule {
            name: Identifier("KW_UNION", 3940..3948),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "union",
                        insensitive: false,
                        range: 3955..3962,
                    },
                },
            },
            range: 3918..3964,
        },
        "DefineFlags": GrammarRule {
            name: Identifier("DefineFlags", 4092..4103),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("AttributeCall", 4110..4123),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("AttributeCall", 4110..4123),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_FLAGS", 4125..4133),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FLAGS", 4125..4133),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 4134..4144),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4134..4144),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 4086..4146,
        },
        "KW_FLAGS": GrammarRule {
            name: Identifier("KW_FLAGS", 4169..4177),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "flags",
                        insensitive: false,
                        range: 4184..4191,
                    },
                },
            },
            range: 4147..4193,
        },
        "DefineTrait": GrammarRule {
            name: Identifier("DefineTrait", 4321..4332),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_TRAIT", 4339..4347),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_TRAIT", 4339..4347),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 4315..4349,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 11315..11323),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "trait|interface",
                        span: 11325..11342,
                    },
                },
            },
            range: 11315..11342,
        },
        "DefineFunction": GrammarRule {
            name: Identifier("DefineFunction", 4566..4580),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_FUNCTION", 4587..4598),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FUNCTION", 4587..4598),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Namepath", 4599..4607),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 4599..4607),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 4560..4609,
        },
        "KW_FUNCTION": GrammarRule {
            name: Identifier("KW_FUNCTION", 4632..4643),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Micro", 4670..4675),
                        ),
                        branch: Expression {
                            tag: Identifier("Micro", 4670..4675),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "micro|function",
                                span: 4652..4668,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Macro", 4700..4705),
                        ),
                        branch: Expression {
                            tag: Identifier("Macro", 4700..4705),
                            remark: false,
                            body: YggdrasilText {
                                text: "macro",
                                insensitive: false,
                                range: 4682..4689,
                            },
                        },
                    },
                ],
            },
            range: 4610..4707,
        },
        "WhileStatement": GrammarRule {
            name: Identifier("WhileStatement", 4835..4849),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHILE", 4856..4864),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHILE", 4856..4864),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 4865..4881),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 4865..4881),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 4883..4886,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainStatement", 4887..4900),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainStatement", 4887..4900),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 4902..4905,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4907..4910),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4829..4913,
        },
        "KW_WHILE": GrammarRule {
            name: Identifier("KW_WHILE", 11487..11495),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "while",
                        span: 11497..11504,
                    },
                },
            },
            range: 11487..11504,
        },
        "ForStatement": GrammarRule {
            name: Identifier("ForStatement", 5118..5130),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_FOR", 5137..5143),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 5137..5143),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("Identifier", 5144..5154),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 5144..5154),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("KW_IN", 5155..5160),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IN", 5155..5160),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 5161..5177),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 5161..5177),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 5179..5182,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainStatement", 5183..5196),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainStatement", 5183..5196),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 5198..5201,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 5203..5206),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5112..5209,
        },
        "MainStatement": GrammarRule {
            name: Identifier("MainStatement", 5344..5357),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("WhileStatement", 5366..5380),
                        ),
                        branch: Expression {
                            tag: Identifier("WhileStatement", 5366..5380),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("WhileStatement", 5366..5380),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ForStatement", 5387..5399),
                        ),
                        branch: Expression {
                            tag: Identifier("ForStatement", 5387..5399),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ForStatement", 5387..5399),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainExpression", 5406..5420),
                        ),
                        branch: Expression {
                            tag: Identifier("MainExpression", 5406..5420),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MainExpression", 5406..5420),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5331..5422,
        },
        "MainExpression": GrammarRule {
            name: Identifier("MainExpression", 5557..5571),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("MainTerm", 5578..5586),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainTerm", 5578..5586),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 5593..5602),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 5593..5602),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainTerm", 5605..5613),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainTerm", 5605..5613),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("EOS", 5616..5619),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 5616..5619),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5544..5622,
        },
        "MainTerm": GrammarRule {
            name: Identifier("MainTerm", 5636..5644),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 5652..5662),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 5652..5662),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 5670..5680),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 5670..5680),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("MainSuffix", 5681..5691),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainSuffix", 5681..5691),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5623..5694,
        },
        "MainFactor": GrammarRule {
            name: Identifier("MainFactor", 5709..5719),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainFactor0", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("MainFactor0", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "(",
                                            insensitive: false,
                                            range: 5728..5731,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("MainExpression", 5734..5748),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainExpression", 5734..5748),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ")",
                                            insensitive: false,
                                            range: 5751..5754,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Atomic", 5761..5767),
                        ),
                        branch: Expression {
                            tag: Identifier("Atomic", 5761..5767),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Atomic", 5761..5767),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5696..5769,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 5776..5782),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ProceduralCall", 5791..5805),
                        ),
                        branch: Expression {
                            tag: Identifier("ProceduralCall", 5791..5805),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ProceduralCall", 5791..5805),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TupleLiteral", 5812..5824),
                        ),
                        branch: Expression {
                            tag: Identifier("TupleLiteral", 5812..5824),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TupleLiteral", 5812..5824),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeLiteral", 5831..5843),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeLiteral", 5831..5843),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeLiteral", 5831..5843),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Namepath", 5850..5858),
                        ),
                        branch: Expression {
                            tag: Identifier("Namepath", 5850..5858),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Namepath", 5850..5858),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Integer", 5865..5872),
                        ),
                        branch: Expression {
                            tag: Identifier("Integer", 5865..5872),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Integer", 5865..5872),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 5879..5886),
                        ),
                        branch: Expression {
                            tag: Identifier("Boolean", 5879..5886),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 5879..5886),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5770..5888,
        },
        "MainInfix": GrammarRule {
            name: Identifier("MainInfix", 5935..5944),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Plus", 5961..5965),
                        ),
                        branch: Expression {
                            tag: Identifier("Plus", 5961..5965),
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 5955..5958,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("PlusAssign", 5978..5988),
                        ),
                        branch: Expression {
                            tag: Identifier("PlusAssign", 5978..5988),
                            remark: false,
                            body: YggdrasilText {
                                text: "+=",
                                insensitive: false,
                                range: 5972..5976,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Minus", 6001..6006),
                        ),
                        branch: Expression {
                            tag: Identifier("Minus", 6001..6006),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 5995..5998,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MinusAssign", 6019..6030),
                        ),
                        branch: Expression {
                            tag: Identifier("MinusAssign", 6019..6030),
                            remark: false,
                            body: YggdrasilText {
                                text: "-=",
                                insensitive: false,
                                range: 6013..6017,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Multiply", 6043..6051),
                        ),
                        branch: Expression {
                            tag: Identifier("Multiply", 6043..6051),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 6037..6040,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MultiplyAssign", 6064..6078),
                        ),
                        branch: Expression {
                            tag: Identifier("MultiplyAssign", 6064..6078),
                            remark: false,
                            body: YggdrasilText {
                                text: "*=",
                                insensitive: false,
                                range: 6058..6062,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Divide", 6091..6097),
                        ),
                        branch: Expression {
                            tag: Identifier("Divide", 6091..6097),
                            remark: false,
                            body: YggdrasilText {
                                text: "/",
                                insensitive: false,
                                range: 6085..6088,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DivideAssign", 6110..6122),
                        ),
                        branch: Expression {
                            tag: Identifier("DivideAssign", 6110..6122),
                            remark: false,
                            body: YggdrasilText {
                                text: "/=",
                                insensitive: false,
                                range: 6104..6108,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Remainder", 6135..6144),
                        ),
                        branch: Expression {
                            tag: Identifier("Remainder", 6135..6144),
                            remark: false,
                            body: YggdrasilText {
                                text: "%",
                                insensitive: false,
                                range: 6129..6132,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RemainderAssign", 6157..6172),
                        ),
                        branch: Expression {
                            tag: Identifier("RemainderAssign", 6157..6172),
                            remark: false,
                            body: YggdrasilText {
                                text: "%=",
                                insensitive: false,
                                range: 6151..6155,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Power", 6185..6190),
                        ),
                        branch: Expression {
                            tag: Identifier("Power", 6185..6190),
                            remark: false,
                            body: YggdrasilText {
                                text: "^",
                                insensitive: false,
                                range: 6179..6182,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Surd", 6205..6209),
                        ),
                        branch: Expression {
                            tag: Identifier("Surd", 6205..6209),
                            remark: false,
                            body: YggdrasilText {
                                text: "√",
                                insensitive: false,
                                range: 6197..6202,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EEE", 6256..6259),
                        ),
                        branch: Expression {
                            tag: Identifier("EEE", 6256..6259),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≡|===",
                                span: 6241..6250,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NEE", 6281..6284),
                        ),
                        branch: Expression {
                            tag: Identifier("NEE", 6281..6284),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≢|!==|=!=",
                                span: 6266..6279,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NE", 6306..6308),
                        ),
                        branch: Expression {
                            tag: Identifier("NE", 6306..6308),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≠|!=",
                                span: 6291..6299,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EE", 6328..6330),
                        ),
                        branch: Expression {
                            tag: Identifier("EE", 6328..6330),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "==",
                                span: 6315..6319,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EQ", 6350..6352),
                        ),
                        branch: Expression {
                            tag: Identifier("EQ", 6350..6352),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "=",
                                span: 6337..6340,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LLL", 6397..6400),
                        ),
                        branch: Expression {
                            tag: Identifier("LLL", 6397..6400),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⋘|<<<",
                                span: 6384..6393,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LLE", 6419..6422),
                        ),
                        branch: Expression {
                            tag: Identifier("LLE", 6419..6422),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "<<=",
                                span: 6407..6412,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LL", 6443..6445),
                        ),
                        branch: Expression {
                            tag: Identifier("LL", 6443..6445),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≪|<<",
                                span: 6429..6437,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LEQ", 6468..6471),
                        ),
                        branch: Expression {
                            tag: Identifier("LEQ", 6468..6471),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[⩽≤]|<=",
                                span: 6452..6465,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LE", 6490..6492),
                        ),
                        branch: Expression {
                            tag: Identifier("LE", 6490..6492),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "<",
                                span: 6478..6481,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GGG", 6512..6515),
                        ),
                        branch: Expression {
                            tag: Identifier("GGG", 6512..6515),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⋙|>>>",
                                span: 6499..6508,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GGE", 6534..6537),
                        ),
                        branch: Expression {
                            tag: Identifier("GGE", 6534..6537),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: ">>=",
                                span: 6522..6527,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GG", 6558..6560),
                        ),
                        branch: Expression {
                            tag: Identifier("GG", 6558..6560),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≫|>>",
                                span: 6544..6552,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GEQ", 6583..6586),
                        ),
                        branch: Expression {
                            tag: Identifier("GEQ", 6583..6586),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[⩾≥]|>=",
                                span: 6567..6580,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GE", 6598..6600),
                        ),
                        branch: Expression {
                            tag: Identifier("GE", 6598..6600),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: ">",
                                span: 6593..6596,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("And", 6632..6635),
                        ),
                        branch: Expression {
                            tag: Identifier("And", 6632..6635),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "&&|∧",
                                span: 6622..6630,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nand", 6649..6653),
                        ),
                        branch: Expression {
                            tag: Identifier("Nand", 6649..6653),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊼",
                                span: 6642..6647,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Xand", 6667..6671),
                        ),
                        branch: Expression {
                            tag: Identifier("Xand", 6667..6671),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⩟",
                                span: 6660..6665,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Or", 6698..6700),
                        ),
                        branch: Expression {
                            tag: Identifier("Or", 6698..6700),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "|||∨",
                                span: 6686..6696,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nor", 6714..6717),
                        ),
                        branch: Expression {
                            tag: Identifier("Nor", 6714..6717),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊽",
                                span: 6707..6712,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Xor", 6731..6734),
                        ),
                        branch: Expression {
                            tag: Identifier("Xor", 6731..6734),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊻",
                                span: 6724..6729,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("UpTo", 6776..6780),
                        ),
                        branch: Expression {
                            tag: Identifier("UpTo", 6776..6780),
                            remark: false,
                            body: YggdrasilText {
                                text: "..<",
                                insensitive: false,
                                range: 6763..6768,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Until", 6800..6805),
                        ),
                        branch: Expression {
                            tag: Identifier("Until", 6800..6805),
                            remark: false,
                            body: YggdrasilText {
                                text: "..=",
                                insensitive: false,
                                range: 6787..6792,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("In", 6856..6858),
                        ),
                        branch: Expression {
                            tag: Identifier("In", 6856..6858),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IN", 6831..6836),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[∈∊]",
                                            span: 6839..6847,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotIn", 6889..6894),
                        ),
                        branch: Expression {
                            tag: Identifier("NotIn", 6889..6894),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_NOT", 6866..6872),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_IN", 6875..6880),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "∉",
                                            insensitive: false,
                                            range: 6881..6886,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Contains", 6927..6935),
                        ),
                        branch: Expression {
                            tag: Identifier("Contains", 6927..6935),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[∋∍]",
                                span: 6901..6909,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotContains", 6966..6977),
                        ),
                        branch: Expression {
                            tag: Identifier("NotContains", 6966..6977),
                            remark: false,
                            body: YggdrasilText {
                                text: "∌",
                                insensitive: false,
                                range: 6942..6947,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Is", 7018..7020),
                        ),
                        branch: Expression {
                            tag: Identifier("Is", 7018..7020),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("KW_IS", 7002..7007),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotIs", 7043..7048),
                        ),
                        branch: Expression {
                            tag: Identifier("NotIs", 7043..7048),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IS", 7027..7032),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_NOT", 7035..7041),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Map", 7094..7097),
                        ),
                        branch: Expression {
                            tag: Identifier("Map", 7094..7097),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "/@",
                                            insensitive: false,
                                            range: 7078..7082,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[⇴⨵]",
                                            span: 7083..7091,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Apply3", 7117..7123),
                        ),
                        branch: Expression {
                            tag: Identifier("Apply3", 7117..7123),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "@{3}|⟴",
                                span: 7104..7114,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Apply2", 7143..7149),
                        ),
                        branch: Expression {
                            tag: Identifier("Apply2", 7143..7149),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "@{2}|⊕",
                                span: 7130..7140,
                            },
                        },
                    },
                ],
            },
            range: 5889..7151,
        },
        "MainPrefix": GrammarRule {
            name: Identifier("MainPrefix", 7179..7189),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[¬!+]\n    | [-]\n    | [.]{2,3}\n    | [⅟]\n    | [√∛∜]\n    | [&*]",
                        span: 7196..7276,
                    },
                },
            },
            range: 7152..7278,
        },
        "MainSuffix": GrammarRule {
            name: Identifier("MainSuffix", 7308..7318),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("InlineSuffix", 7327..7339),
                        ),
                        branch: Expression {
                            tag: Identifier("InlineSuffix", 7327..7339),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("InlineSuffix", 7327..7339),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7279..7341,
        },
        "InlineExpression": GrammarRule {
            name: Identifier("InlineExpression", 7483..7499),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("InlineTerm", 7506..7516),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("InlineTerm", 7506..7516),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 7523..7532),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 7523..7532),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("InlineTerm", 7535..7545),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("InlineTerm", 7535..7545),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7470..7549,
        },
        "InlineTerm": GrammarRule {
            name: Identifier("InlineTerm", 7563..7573),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 7581..7591),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 7581..7591),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 7599..7609),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 7599..7609),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineSuffix", 7610..7622),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineSuffix", 7610..7622),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7550..7625,
        },
        "InlineSuffix": GrammarRule {
            name: Identifier("InlineSuffix", 7639..7651),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("InlineSuffix0", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("InlineSuffix0", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("SuffixOperator", 7665..7679),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("SuffixOperator", 7665..7679),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TupleCall", 7686..7695),
                        ),
                        branch: Expression {
                            tag: Identifier("TupleCall", 7686..7695),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TupleCall", 7686..7695),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeCall", 7702..7711),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeCall", 7702..7711),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeCall", 7702..7711),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7626..7713,
        },
        "SuffixOperator": GrammarRule {
            name: Identifier("SuffixOperator", 7741..7755),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[!]\n    | [%‰‱]\n    | [′″‴⁗]\n    | [℃℉]",
                        span: 7762..7825,
                    },
                },
            },
            range: 7714..7827,
        },
        "TypeHint": GrammarRule {
            name: Identifier("TypeHint", 7955..7963),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("COLON", 7970..7975),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("COLON", 7970..7975),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("TypeExpression", 7976..7990),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeExpression", 7976..7990),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7949..7992,
        },
        "TypeExpression": GrammarRule {
            name: Identifier("TypeExpression", 8006..8020),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("TypeTerm", 8027..8035),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TypeTerm", 8027..8035),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("TypeInfix", 8042..8051),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypeInfix", 8042..8051),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("TypeTerm", 8054..8062),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypeTerm", 8054..8062),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7993..8066,
        },
        "TypeTerm": GrammarRule {
            name: Identifier("TypeTerm", 8080..8088),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("TypePrefix", 8096..8106),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TypePrefix", 8096..8106),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 8114..8124),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 8114..8124),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TypeSuffix", 8125..8135),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeSuffix", 8125..8135),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8067..8138,
        },
        "TypeFactor": GrammarRule {
            name: Identifier("TypeFactor", 8152..8162),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TypeFactor0", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("TypeFactor0", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "(",
                                            insensitive: false,
                                            range: 8171..8174,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: Identifier("TypeExpression", 8177..8191),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TypeExpression", 8177..8191),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ")",
                                            insensitive: false,
                                            range: 8194..8197,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Atomic", 8204..8210),
                        ),
                        branch: Expression {
                            tag: Identifier("Atomic", 8204..8210),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Atomic", 8204..8210),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 8139..8212,
        },
        "TypeInfix": GrammarRule {
            name: Identifier("TypeInfix", 8243..8252),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "operator",
                ],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Union", 8269..8274),
                        ),
                        branch: Expression {
                            tag: Identifier("Union", 8269..8274),
                            remark: false,
                            body: YggdrasilText {
                                text: "|",
                                insensitive: false,
                                range: 8263..8266,
                            },
                        },
                    },
                ],
            },
            range: 8213..8276,
        },
        "TypePrefix": GrammarRule {
            name: Identifier("TypePrefix", 8290..8300),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Positive", 8321..8329),
                        ),
                        branch: Expression {
                            tag: Identifier("Positive", 8321..8329),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[+]",
                                span: 8309..8312,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Negative", 8348..8356),
                        ),
                        branch: Expression {
                            tag: Identifier("Negative", 8348..8356),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[-]",
                                span: 8336..8339,
                            },
                        },
                    },
                ],
            },
            range: 8277..8358,
        },
        "TypeSuffix": GrammarRule {
            name: Identifier("TypeSuffix", 8372..8382),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Option", 8396..8402),
                        ),
                        branch: Expression {
                            tag: Identifier("Option", 8396..8402),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 8391..8394,
                            },
                        },
                    },
                ],
            },
            range: 8359..8404,
        },
        "TupleCall": GrammarRule {
            name: Identifier("TupleCall", 8534..8543),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 8551..8561),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 8551..8561),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 8563..8574),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 8563..8574),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 8576..8586),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 8576..8586),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("TupleLiteral", 8588..8600),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TupleLiteral", 8588..8600),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 8521..8602,
        },
        "TupleLiteral": GrammarRule {
            name: Identifier("TupleLiteral", 8609..8621),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 8628..8631,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("TuplePair", 8633..8642),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TuplePair", 8633..8642),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: HIDE,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 8645..8650),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("TuplePair", 8651..8660),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("TuplePair", 8651..8660),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 8664..8669),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 8673..8676,
                                },
                            },
                        ],
                    },
                },
            },
            range: 8603..8678,
        },
        "TuplePair": GrammarRule {
            name: Identifier("TuplePair", 8685..8694),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("TupleKey", 8702..8710),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TupleKey", 8702..8710),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Colon", 8711..8716),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Colon", 8711..8716),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 8719..8733),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 8719..8733),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 8679..8735,
        },
        "TupleKey": GrammarRule {
            name: Identifier("TupleKey", 8742..8750),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 8759..8769),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 8759..8769),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 8759..8769),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 8736..8771,
        },
        "RangeCall": GrammarRule {
            name: Identifier("RangeCall", 8901..8910),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 8917..8927),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 8917..8927),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 8929..8940),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 8929..8940),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 8942..8952),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 8942..8952),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("RangeLiteral", 8954..8966),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("RangeLiteral", 8954..8966),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 8888..8968,
        },
        "RangeLiteral": GrammarRule {
            name: Identifier("RangeLiteral", 8982..8994),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "[",
                                                insensitive: false,
                                                range: 9003..9006,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("SubscriptAxis", 9010..9023),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("SubscriptAxis", 9010..9023),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 9031..9036),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("SubscriptAxis", 9039..9052),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("SubscriptAxis", 9039..9052),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 9058..9063),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "]",
                                                insensitive: false,
                                                range: 9069..9072,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⁅",
                                                insensitive: false,
                                                range: 9079..9084,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("SubscriptAxis", 9088..9101),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("SubscriptAxis", 9088..9101),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 9109..9114),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: HIDE,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("SubscriptAxis", 9117..9130),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("SubscriptAxis", 9117..9130),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: HIDE,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 9136..9141),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⁆",
                                                insensitive: false,
                                                range: 9147..9152,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8969..9154,
        },
        "SubscriptAxis": GrammarRule {
            name: Identifier("SubscriptAxis", 9161..9174),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SubscriptRange", 9183..9197),
                        ),
                        branch: Expression {
                            tag: Identifier("SubscriptRange", 9183..9197),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("SubscriptRange", 9183..9197),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SubscriptOnly", 9204..9217),
                        ),
                        branch: Expression {
                            tag: Identifier("SubscriptOnly", 9204..9217),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("SubscriptOnly", 9204..9217),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 9155..9219,
        },
        "SubscriptOnly": GrammarRule {
            name: Identifier("SubscriptOnly", 9226..9239),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("index", 9246..9251),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("MainExpression", 9252..9266),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 9220..9268,
        },
        "SubscriptRange": GrammarRule {
            name: Identifier("SubscriptRange", 9282..9296),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("head", 9306..9310),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainExpression", 9311..9325),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ChoiceExpression {
                                    branches: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("RangeOmit", 9345..9354),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("step", 9361..9365),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("MainExpression", 9366..9380),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("COLON", 9393..9398),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: HIDE,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("tail", 9405..9409),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("MainExpression", 9410..9424),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: UnaryExpression {
                                                                                base: Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ConcatExpression {
                                                                                        sequence: [
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: HIDE,
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: RuleReference {
                                                                                                    name: Identifier("COLON", 9431..9436),
                                                                                                    boxed: false,
                                                                                                    inline: false,
                                                                                                },
                                                                                            },
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: UnaryExpression {
                                                                                                    base: Expression {
                                                                                                        tag: None,
                                                                                                        remark: false,
                                                                                                        body: ConcatExpression {
                                                                                                            sequence: [
                                                                                                                Expression {
                                                                                                                    tag: None,
                                                                                                                    remark: false,
                                                                                                                    body: HIDE,
                                                                                                                },
                                                                                                                Expression {
                                                                                                                    tag: Identifier("step", 9443..9447),
                                                                                                                    remark: false,
                                                                                                                    body: RuleReference {
                                                                                                                        name: Identifier("MainExpression", 9448..9462),
                                                                                                                        boxed: false,
                                                                                                                        inline: false,
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    },
                                                                                                    operators: [
                                                                                                        RepeatsBetween(
                                                                                                            YggdrasilCounter {
                                                                                                                min: 0,
                                                                                                                max: 1,
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                operators: [
                                                                                    RepeatsBetween(
                                                                                        YggdrasilCounter {
                                                                                            min: 0,
                                                                                            max: 1,
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9269..9476,
        },
        "RangeOmit": GrammarRule {
            name: Identifier("RangeOmit", 9497..9506),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: Identifier("PROPORTION", 9513..9523),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("PROPORTION", 9513..9523),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("COLON", 9526..9531),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 9526..9531),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: HIDE,
                                        },
                                        Expression {
                                            tag: Identifier("COLON", 9534..9539),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 9534..9539),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9477..9541,
        },
        "AttributeCall": GrammarRule {
            name: Identifier("AttributeCall", 9669..9682),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("AttributePath", 9707..9720),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("AttributePath", 9707..9720),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TupleLiteral", 9721..9733),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TupleLiteral", 9721..9733),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9663..9736,
        },
        "ProceduralCall": GrammarRule {
            name: Identifier("ProceduralCall", 9743..9757),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("ProceduralPath", 9782..9796),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ProceduralPath", 9782..9796),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: HIDE,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TupleLiteral", 9797..9809),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TupleLiteral", 9797..9809),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 9737..9812,
        },
        "ModifierCall": GrammarRule {
            name: Identifier("ModifierCall", 9947..9959),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ChoiceExpression {
                                            branches: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_CLASS", 9970..9978),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_UNION", 9981..9989),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_TRAIT", 9992..10000),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 10003..10013),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 10003..10013),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9934..10015,
        },
        "AttributePath": GrammarRule {
            name: Identifier("AttributePath", 10029..10042),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "#",
                                    insensitive: false,
                                    range: 10049..10052,
                                },
                            },
                            Expression {
                                tag: Identifier("Namepath", 10053..10061),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 10053..10061),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 10016..10063,
        },
        "ProceduralPath": GrammarRule {
            name: Identifier("ProceduralPath", 10077..10091),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "@",
                                    insensitive: false,
                                    range: 10098..10101,
                                },
                            },
                            Expression {
                                tag: Identifier("Namepath", 10102..10110),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Namepath", 10102..10110),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 10064..10112,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 10126..10138),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 10146..10156),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 10146..10156),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION2", 10164..10175),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 10178..10188),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 10178..10188),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 10113..10192,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 10206..10214),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 10221..10231),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 10221..10231),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION", 10239..10249),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: HIDE,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 10252..10262),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 10252..10262),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 10193..10266,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 10280..10290),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierBare", 10299..10313),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierBare", 10299..10313),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierBare", 10299..10313),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierRaw", 10320..10333),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierRaw", 10320..10333),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierRaw", 10320..10333),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 10267..10335,
        },
        "IdentifierBare": GrammarRule {
            name: Identifier("IdentifierBare", 10347..10361),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 10368..10403,
                    },
                },
            },
            range: 10336..10405,
        },
        "IdentifierRaw": GrammarRule {
            name: Identifier("IdentifierRaw", 10419..10432),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 10439..10442,
                                },
                            },
                            Expression {
                                tag: Identifier("IdentifierRawText", 10443..10460),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IdentifierRawText", 10443..10460),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 10461..10464,
                                },
                            },
                        ],
                    },
                },
            },
            range: 10406..10466,
        },
        "IdentifierRawText": GrammarRule {
            name: Identifier("IdentifierRawText", 10478..10495),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: HIDE,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[^`]",
                                            span: 10502..10506,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 1,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 10467..10509,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 10516..10523),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 10541..10545),
                        ),
                        branch: Expression {
                            tag: Identifier("True", 10541..10545),
                            remark: false,
                            body: YggdrasilText {
                                text: "true",
                                insensitive: false,
                                range: 10532..10538,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 10561..10566),
                        ),
                        branch: Expression {
                            tag: Identifier("False", 10561..10566),
                            remark: false,
                            body: YggdrasilText {
                                text: "false",
                                insensitive: false,
                                range: 10552..10559,
                            },
                        },
                    },
                ],
            },
            range: 10510..10568,
        },
        "Integer": GrammarRule {
            name: Identifier("Integer", 10699..10706),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "0|[1-9][0-9]*",
                        span: 10713..10728,
                    },
                },
            },
            range: 10688..10730,
        },
        "PROPORTION": GrammarRule {
            name: Identifier("PROPORTION", 10880..10890),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "∷|::",
                        span: 10892..10900,
                    },
                },
            },
            range: 10880..10900,
        },
        "COLON": GrammarRule {
            name: Identifier("COLON", 10905..10910),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[:：]",
                        span: 10912..10918,
                    },
                },
            },
            range: 10905..10918,
        },
        "COMMA": GrammarRule {
            name: Identifier("COMMA", 10923..10928),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，]",
                        span: 10930..10936,
                    },
                },
            },
            range: 10923..10936,
        },
        "DOT": GrammarRule {
            name: Identifier("DOT", 10941..10944),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[.．]",
                        span: 10948..10954,
                    },
                },
            },
            range: 10941..10954,
        },
        "OFFSET_L": GrammarRule {
            name: Identifier("OFFSET_L", 10959..10967),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "⁅",
                        insensitive: false,
                        range: 10969..10974,
                    },
                },
            },
            range: 10959..10974,
        },
        "OFFSET_R": GrammarRule {
            name: Identifier("OFFSET_R", 10979..10987),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "⁆",
                        insensitive: false,
                        range: 10989..10994,
                    },
                },
            },
            range: 10979..10994,
        },
        "PROPORTION2": GrammarRule {
            name: Identifier("PROPORTION2", 11003..11014),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [],
                railway: true,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[.．∷]|::",
                        span: 11035..11049,
                    },
                },
            },
            range: 10997..11051,
        },
        "OP_IMPORT_ALL": GrammarRule {
            name: Identifier("OP_IMPORT_ALL", 11096..11109),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "*",
                        insensitive: false,
                        range: 11111..11114,
                    },
                },
            },
            range: 11096..11114,
        },
        "OP_AND_THEN": GrammarRule {
            name: Identifier("OP_AND_THEN", 11119..11130),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "?",
                        insensitive: false,
                        range: 11132..11135,
                    },
                },
            },
            range: 11119..11135,
        },
        "OP_BIND": GrammarRule {
            name: Identifier("OP_BIND", 11140..11147),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "≔|:=",
                        span: 11149..11157,
                    },
                },
            },
            range: 11140..11157,
        },
        "KW_NAMESPACE": GrammarRule {
            name: Identifier("KW_NAMESPACE", 11204..11216),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "namespace",
                        span: 11218..11229,
                    },
                },
            },
            range: 11204..11229,
        },
        "KW_IMPORT": GrammarRule {
            name: Identifier("KW_IMPORT", 11234..11243),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "using",
                        span: 11245..11252,
                    },
                },
            },
            range: 11234..11252,
        },
        "KW_TEMPLATE": GrammarRule {
            name: Identifier("KW_TEMPLATE", 11257..11268),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "template|generic",
                        span: 11270..11288,
                    },
                },
            },
            range: 11257..11288,
        },
        "KW_WHERE": GrammarRule {
            name: Identifier("KW_WHERE", 11293..11301),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "where",
                        span: 11303..11310,
                    },
                },
            },
            range: 11293..11310,
        },
        "KW_IMPLEMENTS": GrammarRule {
            name: Identifier("KW_IMPLEMENTS", 11347..11360),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "implements?",
                        span: 11362..11375,
                    },
                },
            },
            range: 11347..11375,
        },
        "KW_EXTENDS": GrammarRule {
            name: Identifier("KW_EXTENDS", 11380..11390),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "extends?",
                        span: 11392..11402,
                    },
                },
            },
            range: 11380..11402,
        },
        "KW_INHERITS": GrammarRule {
            name: Identifier("KW_INHERITS", 11407..11418),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "inherits?",
                        span: 11420..11431,
                    },
                },
            },
            range: 11407..11431,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 11451..11456),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "if",
                        span: 11458..11462,
                    },
                },
            },
            range: 11451..11462,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 11467..11474),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "else",
                        span: 11476..11482,
                    },
                },
            },
            range: 11467..11482,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 11509..11515),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "for",
                        span: 11517..11522,
                    },
                },
            },
            range: 11509..11522,
        },
        "KW_RETURN": GrammarRule {
            name: Identifier("KW_RETURN", 11527..11536),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "return",
                        span: 11538..11546,
                    },
                },
            },
            range: 11527..11546,
        },
        "KW_BREAK": GrammarRule {
            name: Identifier("KW_BREAK", 11551..11559),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "break",
                        span: 11561..11568,
                    },
                },
            },
            range: 11551..11568,
        },
        "KW_CONTINUE": GrammarRule {
            name: Identifier("KW_CONTINUE", 11573..11584),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "continue",
                        span: 11586..11596,
                    },
                },
            },
            range: 11573..11596,
        },
        "KW_NOT": GrammarRule {
            name: Identifier("KW_NOT", 11722..11728),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "not",
                        insensitive: false,
                        range: 11730..11735,
                    },
                },
            },
            range: 11722..11735,
        },
        "KW_IN": GrammarRule {
            name: Identifier("KW_IN", 11740..11745),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "in",
                        insensitive: false,
                        range: 11747..11751,
                    },
                },
            },
            range: 11740..11751,
        },
        "KW_IS": GrammarRule {
            name: Identifier("KW_IS", 11756..11761),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "is",
                        insensitive: false,
                        range: 11763..11767,
                    },
                },
            },
            range: 11756..11767,
        },
        "KW_AS": GrammarRule {
            name: Identifier("KW_AS", 11772..11777),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: false,
                styles: [
                    "keyword",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "as",
                        insensitive: false,
                        range: 11779..11783,
                    },
                },
            },
            range: 11772..11783,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 11934..11944),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: true,
                styles: [],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 11951..11969,
                    },
                },
            },
            range: 11907..11971,
        },
        "Comment": GrammarRule {
            name: Identifier("Comment", 12015..12022),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            inline: false,
            viewer: GrammarViewer {
                hidden: true,
                styles: [
                    "comment",
                ],
                railway: false,
            },
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "//",
                                                insensitive: false,
                                                range: 12031..12035,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[^\\n\\r]*",
                                                span: 12036..12046,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "/*",
                                                insensitive: false,
                                                range: 12053..12057,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "*/",
                                                insensitive: false,
                                                range: 12059..12063,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 11972..12065,
        },
    },
    token_sets: {},
    functions: {},
}