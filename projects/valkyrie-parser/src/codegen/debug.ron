GrammarInfo {
    url: None,
    name: Identifier("Valkyrie", 8..16),
    extensions: [],
    imports: {},
    exports: [],
    rules: {
        "Program": GrammarRule {
            name: Identifier("Program", 35..42),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: true,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("Statement", 49..58),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Statement", 49..58),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 0,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 23..61,
        },
        "Statement": GrammarRule {
            name: Identifier("Statement", 156..165),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineNamespace", 174..189),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineNamespace", 174..189),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineNamespace", 174..189),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineImport", 196..208),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineImport", 196..208),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineImport", 196..208),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineClass", 215..226),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineClass", 215..226),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineClass", 215..226),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineUnion", 233..244),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineUnion", 233..244),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineUnion", 233..244),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DefineTrait", 251..262),
                        ),
                        branch: Expression {
                            tag: Identifier("DefineTrait", 251..262),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("DefineTrait", 251..262),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainStatement", 269..282),
                        ),
                        branch: Expression {
                            tag: Identifier("MainStatement", 269..282),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MainStatement", 269..282),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 150..284,
        },
        "EOS": GrammarRule {
            name: Identifier("EOS", 368..371),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Omit", 392..396),
                        ),
                        branch: Expression {
                            tag: Identifier("Omit", 392..396),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[;；]",
                                span: 382..388,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Show", 414..418),
                        ),
                        branch: Expression {
                            tag: Identifier("Show", 414..418),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⁏|;;",
                                span: 403..411,
                            },
                        },
                    },
                ],
            },
            range: 362..420,
        },
        "EOS_FREE": GrammarRule {
            name: Identifier("EOS_FREE", 485..493),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，;；⁏]",
                        span: 500..513,
                    },
                },
            },
            range: 479..515,
        },
        "DefineNamespace": GrammarRule {
            name: Identifier("DefineNamespace", 609..624),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_NAMESPACE", 632..644),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_NAMESPACE", 645..657),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_NAMESPACE", 645..657),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("NamepathFree", 659..671),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 659..671),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 673..676),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 603..679,
        },
        "OP_NAMESPACE": GrammarRule {
            name: Identifier("OP_NAMESPACE", 703..715),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Main", 729..733),
                        ),
                        branch: Expression {
                            tag: Identifier("Main", 729..733),
                            remark: false,
                            body: YggdrasilText {
                                text: "!",
                                insensitive: false,
                                range: 724..727,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Test", 745..749),
                        ),
                        branch: Expression {
                            tag: Identifier("Test", 745..749),
                            remark: false,
                            body: YggdrasilText {
                                text: "?",
                                insensitive: false,
                                range: 740..743,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Hide", 761..765),
                        ),
                        branch: Expression {
                            tag: Identifier("Hide", 761..765),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 756..759,
                            },
                        },
                    },
                ],
            },
            range: 681..767,
        },
        "DefineImport": GrammarRule {
            name: Identifier("DefineImport", 865..877),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_IMPORT", 887..896),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: Identifier("ImportTerm", 899..909),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ImportTerm", 899..909),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("EOS", 914..917),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_IMPORT", 926..935),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "{",
                                                insensitive: false,
                                                range: 938..941,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ChoiceExpression {
                                                                    branches: [
                                                                        Expression {
                                                                            tag: Identifier("ImportTerm", 952..962),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("ImportTerm", 952..962),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("EOS_FREE", 964..972),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "}",
                                                insensitive: false,
                                                range: 978..981,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("EOS", 985..988),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 852..991,
        },
        "ImportTerm": GrammarRule {
            name: Identifier("ImportTerm", 998..1008),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAs", 1017..1025),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAs", 1017..1025),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAs", 1017..1025),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportAll", 1032..1041),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportAll", 1032..1041),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportAll", 1032..1041),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportMacro", 1048..1059),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportMacro", 1048..1059),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportMacro", 1048..1059),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ImportBlock", 1066..1077),
                        ),
                        branch: Expression {
                            tag: Identifier("ImportBlock", 1066..1077),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ImportBlock", 1066..1077),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NamepathFree", 1084..1096),
                        ),
                        branch: Expression {
                            tag: Identifier("NamepathFree", 1084..1096),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("NamepathFree", 1084..1096),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 992..1098,
        },
        "ImportAs": GrammarRule {
            name: Identifier("ImportAs", 1151..1159),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("NamepathFree", 1162..1174),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("NamepathFree", 1162..1174),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_AS", 1176..1181),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("alias", 1182..1187),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 1188..1198),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1145..1200,
        },
        "ImportAll": GrammarRule {
            name: Identifier("ImportAll", 1241..1250),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("NamepathFree", 1253..1265),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1253..1265),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilRegex {
                                    raw: "[.∷]|::",
                                    span: 1266..1277,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("OP_IMPORT_ALL", 1278..1291),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("OP_IMPORT_ALL", 1278..1291),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1235..1293,
        },
        "ImportBlock": GrammarRule {
            name: Identifier("ImportBlock", 1345..1356),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("NamepathFree", 1364..1376),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("NamepathFree", 1364..1376),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[.∷]|::",
                                            span: 1379..1390,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 1394..1397,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("ImportTerm", 1408..1418),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("ImportTerm", 1408..1418),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 1420..1428),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 1434..1437,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1332..1439,
        },
        "ImportMacro": GrammarRule {
            name: Identifier("ImportMacro", 1493..1504),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("NamepathFree", 1512..1524),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("NamepathFree", 1512..1524),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[.∷]|::",
                                                span: 1525..1536,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("ImportMacroItem", 1537..1552),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("ImportMacroItem", 1537..1552),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("KW_AS", 1554..1559),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("alias", 1560..1565),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ImportMacroItem", 1566..1581),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1487..1583,
        },
        "ImportMacroItem": GrammarRule {
            name: Identifier("ImportMacroItem", 1597..1612),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Capture", 1637..1644),
                        ),
                        branch: Expression {
                            tag: Identifier("Capture", 1637..1644),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "#",
                                            insensitive: false,
                                            range: 1621..1624,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 1625..1635),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1625..1635),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Instant", 1667..1674),
                        ),
                        branch: Expression {
                            tag: Identifier("Instant", 1667..1674),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "@",
                                            insensitive: false,
                                            range: 1651..1654,
                                        },
                                    },
                                    Expression {
                                        tag: Identifier("Identifier", 1655..1665),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("Identifier", 1655..1665),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                ],
            },
            range: 1584..1676,
        },
        "DefineClass": GrammarRule {
            name: Identifier("DefineClass", 3574..3585),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_CLASS", 3592..3600),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_CLASS", 3592..3600),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3568..3602,
        },
        "ClassBlock": GrammarRule {
            name: Identifier("ClassBlock", 1960..1970),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 1977..1980,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("ClassBlockItem", 1981..1995),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassBlockItem", 1981..1995),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 1997..2000,
                                },
                            },
                        ],
                    },
                },
            },
            range: 1954..2002,
        },
        "ClassBlockItem": GrammarRule {
            name: Identifier("ClassBlockItem", 2009..2023),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassDomain", 2032..2043),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassDomain", 2032..2043),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassDomain", 2032..2043),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassMethod", 2050..2061),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassMethod", 2050..2061),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassMethod", 2050..2061),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ClassField", 2068..2078),
                        ),
                        branch: Expression {
                            tag: Identifier("ClassField", 2068..2078),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ClassField", 2068..2078),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EosFree", 2085..2093),
                        ),
                        branch: Expression {
                            tag: Identifier("EosFree", 2085..2093),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("EOS_FREE", 2085..2093),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 2003..2095,
        },
        "ClassInherit": GrammarRule {
            name: Identifier("ClassInherit", 2102..2114),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 2121..2124,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("ClassInheritItem", 2126..2142),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("ClassInheritItem", 2126..2142),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: IGNORED,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: YggdrasilText {
                                                                                        text: ",",
                                                                                        insensitive: false,
                                                                                        range: 2144..2147,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("ClassInheritItem", 2148..2164),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("ClassInheritItem", 2148..2164),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: YggdrasilText {
                                                                text: ",",
                                                                insensitive: false,
                                                                range: 2167..2170,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 2174..2177,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2096..2179,
        },
        "ClassInheritItem": GrammarRule {
            name: Identifier("ClassInheritItem", 2186..2202),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Namepath", 2209..2217),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Namepath", 2209..2217),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2180..2219,
        },
        "ClassField": GrammarRule {
            name: Identifier("ClassField", 2226..2236),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("Identifier", 2243..2253),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("Identifier", 2243..2253),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 2220..2330,
        },
        "ClassMethod": GrammarRule {
            name: Identifier("ClassMethod", 2337..2348),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 2457..2467),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2457..2467),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 2468..2471,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 2472..2475,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2331..2477,
        },
        "ClassDomain": GrammarRule {
            name: Identifier("ClassDomain", 2484..2495),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 2539..2549),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 2539..2549),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("ClassBlock", 2550..2560),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("ClassBlock", 2550..2560),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2478..2562,
        },
        "DefineTemplate": GrammarRule {
            name: Identifier("DefineTemplate", 2690..2704),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_TEMPLATE", 2740..2751),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_TEMPLATE", 2740..2751),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("TemplateParameters", 2752..2770),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("TemplateParameters", 2752..2770),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("TemplateBlock", 2772..2785),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TemplateBlock", 2772..2785),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2684..2787,
        },
        "TemplateParameters": GrammarRule {
            name: Identifier("TemplateParameters", 2794..2812),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("Identifier", 2821..2831),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2821..2831),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2834..2839),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: IGNORED,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2840..2850),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2840..2850),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2854..2859),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "<",
                                                insensitive: false,
                                                range: 2867..2870,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("Identifier", 2871..2881),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2871..2881),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2884..2889),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: IGNORED,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2890..2900),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2890..2900),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2904..2909),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: ">",
                                                insensitive: false,
                                                range: 2911..2914,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟨",
                                                insensitive: false,
                                                range: 2921..2926,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("Identifier", 2927..2937),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("Identifier", 2927..2937),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("COMMA", 2940..2945),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: IGNORED,
                                                                        },
                                                                        Expression {
                                                                            tag: Identifier("Identifier", 2946..2956),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("Identifier", 2946..2956),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 4294967295,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("COMMA", 2960..2965),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⟩",
                                                insensitive: false,
                                                range: 2967..2972,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 2788..2974,
        },
        "TemplateBlock": GrammarRule {
            name: Identifier("TemplateBlock", 2981..2994),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 3001..3004,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ChoiceExpression {
                                                        branches: [
                                                            Expression {
                                                                tag: Identifier("TemplateStatement", 3006..3023),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TemplateStatement", 3006..3023),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("TemplateImplements", 3026..3044),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("TemplateImplements", 3026..3044),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: Identifier("EOS_FREE", 3047..3055),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("EOS_FREE", 3047..3055),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 3058..3061,
                                },
                            },
                        ],
                    },
                },
            },
            range: 2975..3063,
        },
        "TemplateStatement": GrammarRule {
            name: Identifier("TemplateStatement", 3070..3087),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("WhereBlock", 3094..3104),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("WhereBlock", 3094..3104),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3064..3175,
        },
        "TemplateImplements": GrammarRule {
            name: Identifier("TemplateImplements", 3182..3200),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_IMPLEMENTS", 3209..3222),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_IMPLEMENTS", 3209..3222),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3176..3242,
        },
        "WhereBlock": GrammarRule {
            name: Identifier("WhereBlock", 3249..3259),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHERE", 3266..3274),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHERE", 3266..3274),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 3275..3278,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("WhereBound", 3279..3289),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("WhereBound", 3279..3289),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 3291..3294,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3243..3296,
        },
        "WhereBound": GrammarRule {
            name: Identifier("WhereBound", 3303..3313),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("EOS_FREE", 3366..3374),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("EOS_FREE", 3366..3374),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3297..3376,
        },
        "KW_CLASS": GrammarRule {
            name: Identifier("KW_CLASS", 3625..3633),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "class",
                                    insensitive: false,
                                    range: 3642..3649,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "structure",
                                    insensitive: false,
                                    range: 3656..3667,
                                },
                            },
                        ],
                    },
                },
            },
            range: 3603..3669,
        },
        "DefineUnion": GrammarRule {
            name: Identifier("DefineUnion", 3797..3808),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_UNION", 3815..3823),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_UNION", 3815..3823),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3791..3825,
        },
        "KW_UNION": GrammarRule {
            name: Identifier("KW_UNION", 3848..3856),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "union",
                        insensitive: false,
                        range: 3863..3870,
                    },
                },
            },
            range: 3826..3872,
        },
        "DefineTrait": GrammarRule {
            name: Identifier("DefineTrait", 4000..4011),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("KW_TRAIT", 4018..4026),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("KW_TRAIT", 4018..4026),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 3994..4028,
        },
        "KW_TRAIT": GrammarRule {
            name: Identifier("KW_TRAIT", 9839..9847),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "trait|interface",
                        span: 9849..9866,
                    },
                },
            },
            range: 9839..9866,
        },
        "WhileStatement": GrammarRule {
            name: Identifier("WhileStatement", 4203..4217),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_WHILE", 4224..4232),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_WHILE", 4224..4232),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 4233..4249),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 4233..4249),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 4251..4254,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainStatement", 4255..4268),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainStatement", 4255..4268),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 4270..4273,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4275..4278),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4197..4281,
        },
        "KW_WHILE": GrammarRule {
            name: Identifier("KW_WHILE", 10011..10019),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "while",
                        span: 10021..10028,
                    },
                },
            },
            range: 10011..10028,
        },
        "ForStatement": GrammarRule {
            name: Identifier("ForStatement", 4486..4498),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("KW_FOR", 4505..4511),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_FOR", 4505..4511),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("Identifier", 4512..4522),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 4512..4522),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("KW_IN", 4523..4528),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("KW_IN", 4523..4528),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineExpression", 4529..4545),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineExpression", 4529..4545),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "{",
                                    insensitive: false,
                                    range: 4547..4550,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainStatement", 4551..4564),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainStatement", 4551..4564),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "}",
                                    insensitive: false,
                                    range: 4566..4569,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4571..4574),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4480..4577,
        },
        "MainStatement": GrammarRule {
            name: Identifier("MainStatement", 4712..4725),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("WhileStatement", 4734..4748),
                        ),
                        branch: Expression {
                            tag: Identifier("WhileStatement", 4734..4748),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("WhileStatement", 4734..4748),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("ForStatement", 4755..4767),
                        ),
                        branch: Expression {
                            tag: Identifier("ForStatement", 4755..4767),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("ForStatement", 4755..4767),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainExpression", 4774..4788),
                        ),
                        branch: Expression {
                            tag: Identifier("MainExpression", 4774..4788),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("MainExpression", 4774..4788),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 4699..4790,
        },
        "MainExpression": GrammarRule {
            name: Identifier("MainExpression", 4925..4939),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("MainTerm", 4946..4954),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainTerm", 4946..4954),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 4964..4973),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 4964..4973),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainTerm", 4976..4984),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainTerm", 4976..4984),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("EOS", 4987..4990),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("EOS", 4987..4990),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4912..4993,
        },
        "InlineExpression": GrammarRule {
            name: Identifier("InlineExpression", 5007..5023),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("InlineTerm", 5030..5040),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("InlineTerm", 5030..5040),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("MainInfix", 5050..5059),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainInfix", 5050..5059),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("InlineTerm", 5062..5072),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("InlineTerm", 5062..5072),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 4994..5076,
        },
        "MainTerm": GrammarRule {
            name: Identifier("MainTerm", 5090..5098),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 5106..5116),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 5106..5116),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 5127..5137),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 5127..5137),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("MainSuffix", 5138..5148),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainSuffix", 5138..5148),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5077..5151,
        },
        "InlineTerm": GrammarRule {
            name: Identifier("InlineTerm", 5165..5175),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("MainPrefix", 5183..5193),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("MainPrefix", 5183..5193),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("MainFactor", 5204..5214),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainFactor", 5204..5214),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("InlineSuffix", 5215..5227),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("InlineSuffix", 5215..5227),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 5152..5230,
        },
        "MainFactor": GrammarRule {
            name: Identifier("MainFactor", 5244..5254),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MainFactor0", 0..0),
                        ),
                        branch: Expression {
                            tag: Identifier("MainFactor0", 0..0),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "(",
                                            insensitive: false,
                                            range: 5263..5266,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: Identifier("MainExpression", 5269..5283),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainExpression", 5269..5283),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: ")",
                                            insensitive: false,
                                            range: 5286..5289,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Atomic", 5296..5302),
                        ),
                        branch: Expression {
                            tag: Identifier("Atomic", 5296..5302),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Atomic", 5296..5302),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5231..5304,
        },
        "Atomic": GrammarRule {
            name: Identifier("Atomic", 5311..5317),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TupleLiteral", 5326..5338),
                        ),
                        branch: Expression {
                            tag: Identifier("TupleLiteral", 5326..5338),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TupleLiteral", 5326..5338),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeLiteral", 5345..5357),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeLiteral", 5345..5357),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeLiteral", 5345..5357),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Namepath", 5364..5372),
                        ),
                        branch: Expression {
                            tag: Identifier("Namepath", 5364..5372),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Namepath", 5364..5372),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Integer", 5379..5386),
                        ),
                        branch: Expression {
                            tag: Identifier("Integer", 5379..5386),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Integer", 5379..5386),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Boolean", 5393..5400),
                        ),
                        branch: Expression {
                            tag: Identifier("Boolean", 5393..5400),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Boolean", 5393..5400),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 5305..5402,
        },
        "MainInfix": GrammarRule {
            name: Identifier("MainInfix", 5433..5442),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Plus", 5459..5463),
                        ),
                        branch: Expression {
                            tag: Identifier("Plus", 5459..5463),
                            remark: false,
                            body: YggdrasilText {
                                text: "+",
                                insensitive: false,
                                range: 5453..5456,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("PlusAssign", 5476..5486),
                        ),
                        branch: Expression {
                            tag: Identifier("PlusAssign", 5476..5486),
                            remark: false,
                            body: YggdrasilText {
                                text: "+=",
                                insensitive: false,
                                range: 5470..5474,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Minus", 5499..5504),
                        ),
                        branch: Expression {
                            tag: Identifier("Minus", 5499..5504),
                            remark: false,
                            body: YggdrasilText {
                                text: "-",
                                insensitive: false,
                                range: 5493..5496,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MinusAssign", 5517..5528),
                        ),
                        branch: Expression {
                            tag: Identifier("MinusAssign", 5517..5528),
                            remark: false,
                            body: YggdrasilText {
                                text: "-=",
                                insensitive: false,
                                range: 5511..5515,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Multiply", 5541..5549),
                        ),
                        branch: Expression {
                            tag: Identifier("Multiply", 5541..5549),
                            remark: false,
                            body: YggdrasilText {
                                text: "*",
                                insensitive: false,
                                range: 5535..5538,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("MultiplyAssign", 5562..5576),
                        ),
                        branch: Expression {
                            tag: Identifier("MultiplyAssign", 5562..5576),
                            remark: false,
                            body: YggdrasilText {
                                text: "*=",
                                insensitive: false,
                                range: 5556..5560,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Divide", 5589..5595),
                        ),
                        branch: Expression {
                            tag: Identifier("Divide", 5589..5595),
                            remark: false,
                            body: YggdrasilText {
                                text: "/",
                                insensitive: false,
                                range: 5583..5586,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DivideAssign", 5608..5620),
                        ),
                        branch: Expression {
                            tag: Identifier("DivideAssign", 5608..5620),
                            remark: false,
                            body: YggdrasilText {
                                text: "/=",
                                insensitive: false,
                                range: 5602..5606,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Remainder", 5633..5642),
                        ),
                        branch: Expression {
                            tag: Identifier("Remainder", 5633..5642),
                            remark: false,
                            body: YggdrasilText {
                                text: "%",
                                insensitive: false,
                                range: 5627..5630,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RemainderAssign", 5655..5670),
                        ),
                        branch: Expression {
                            tag: Identifier("RemainderAssign", 5655..5670),
                            remark: false,
                            body: YggdrasilText {
                                text: "%=",
                                insensitive: false,
                                range: 5649..5653,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Power", 5683..5688),
                        ),
                        branch: Expression {
                            tag: Identifier("Power", 5683..5688),
                            remark: false,
                            body: YggdrasilText {
                                text: "^",
                                insensitive: false,
                                range: 5677..5680,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Surd", 5703..5707),
                        ),
                        branch: Expression {
                            tag: Identifier("Surd", 5703..5707),
                            remark: false,
                            body: YggdrasilText {
                                text: "√",
                                insensitive: false,
                                range: 5695..5700,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EEE", 5754..5757),
                        ),
                        branch: Expression {
                            tag: Identifier("EEE", 5754..5757),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≡|===",
                                span: 5739..5748,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NEE", 5779..5782),
                        ),
                        branch: Expression {
                            tag: Identifier("NEE", 5779..5782),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≢|!==|=!=",
                                span: 5764..5777,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NE", 5804..5806),
                        ),
                        branch: Expression {
                            tag: Identifier("NE", 5804..5806),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≠|!=",
                                span: 5789..5797,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EE", 5826..5828),
                        ),
                        branch: Expression {
                            tag: Identifier("EE", 5826..5828),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "==",
                                span: 5813..5817,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("EQ", 5848..5850),
                        ),
                        branch: Expression {
                            tag: Identifier("EQ", 5848..5850),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "=",
                                span: 5835..5838,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LLL", 5895..5898),
                        ),
                        branch: Expression {
                            tag: Identifier("LLL", 5895..5898),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⋘|<<<",
                                span: 5882..5891,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LLE", 5917..5920),
                        ),
                        branch: Expression {
                            tag: Identifier("LLE", 5917..5920),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "<<=",
                                span: 5905..5910,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LL", 5941..5943),
                        ),
                        branch: Expression {
                            tag: Identifier("LL", 5941..5943),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≪|<<",
                                span: 5927..5935,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LEQ", 5966..5969),
                        ),
                        branch: Expression {
                            tag: Identifier("LEQ", 5966..5969),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[⩽≤]|<=",
                                span: 5950..5963,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("LE", 5988..5990),
                        ),
                        branch: Expression {
                            tag: Identifier("LE", 5988..5990),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "<",
                                span: 5976..5979,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GGG", 6010..6013),
                        ),
                        branch: Expression {
                            tag: Identifier("GGG", 6010..6013),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⋙|>>>",
                                span: 5997..6006,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GGE", 6032..6035),
                        ),
                        branch: Expression {
                            tag: Identifier("GGE", 6032..6035),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: ">>=",
                                span: 6020..6025,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GG", 6056..6058),
                        ),
                        branch: Expression {
                            tag: Identifier("GG", 6056..6058),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "≫|>>",
                                span: 6042..6050,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GEQ", 6081..6084),
                        ),
                        branch: Expression {
                            tag: Identifier("GEQ", 6081..6084),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[⩾≥]|>=",
                                span: 6065..6078,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("GE", 6096..6098),
                        ),
                        branch: Expression {
                            tag: Identifier("GE", 6096..6098),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: ">",
                                span: 6091..6094,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("And", 6130..6133),
                        ),
                        branch: Expression {
                            tag: Identifier("And", 6130..6133),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "&&|∧",
                                span: 6120..6128,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nand", 6147..6151),
                        ),
                        branch: Expression {
                            tag: Identifier("Nand", 6147..6151),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊼",
                                span: 6140..6145,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Xand", 6165..6169),
                        ),
                        branch: Expression {
                            tag: Identifier("Xand", 6165..6169),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⩟",
                                span: 6158..6163,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Or", 6196..6198),
                        ),
                        branch: Expression {
                            tag: Identifier("Or", 6196..6198),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "\\|\\||∨",
                                span: 6184..6194,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Nor", 6212..6215),
                        ),
                        branch: Expression {
                            tag: Identifier("Nor", 6212..6215),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊽",
                                span: 6205..6210,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Xor", 6229..6232),
                        ),
                        branch: Expression {
                            tag: Identifier("Xor", 6229..6232),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "⊻",
                                span: 6222..6227,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("UpTo", 6274..6278),
                        ),
                        branch: Expression {
                            tag: Identifier("UpTo", 6274..6278),
                            remark: false,
                            body: YggdrasilText {
                                text: "..<",
                                insensitive: false,
                                range: 6261..6266,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Until", 6298..6303),
                        ),
                        branch: Expression {
                            tag: Identifier("Until", 6298..6303),
                            remark: false,
                            body: YggdrasilText {
                                text: "..=",
                                insensitive: false,
                                range: 6285..6290,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("In", 6354..6356),
                        ),
                        branch: Expression {
                            tag: Identifier("In", 6354..6356),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IN", 6329..6334),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[∈∊]",
                                            span: 6337..6345,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotIn", 6387..6392),
                        ),
                        branch: Expression {
                            tag: Identifier("NotIn", 6387..6392),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_NOT", 6364..6370),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_IN", 6373..6378),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "∉",
                                            insensitive: false,
                                            range: 6379..6384,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Contains", 6425..6433),
                        ),
                        branch: Expression {
                            tag: Identifier("Contains", 6425..6433),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[∋∍]",
                                span: 6399..6407,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotContains", 6464..6475),
                        ),
                        branch: Expression {
                            tag: Identifier("NotContains", 6464..6475),
                            remark: false,
                            body: YggdrasilText {
                                text: "∌",
                                insensitive: false,
                                range: 6440..6445,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Is", 6518..6520),
                        ),
                        branch: Expression {
                            tag: Identifier("Is", 6518..6520),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("KW_IS", 6501..6506),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("NotIs", 6545..6550),
                        ),
                        branch: Expression {
                            tag: Identifier("NotIs", 6545..6550),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_IS", 6528..6533),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("KW_NOT", 6536..6542),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Map", 6596..6599),
                        ),
                        branch: Expression {
                            tag: Identifier("Map", 6596..6599),
                            remark: false,
                            body: ChoiceExpression {
                                branches: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "/@",
                                            insensitive: false,
                                            range: 6580..6584,
                                        },
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[⇴⨵]",
                                            span: 6585..6593,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Apply3", 6621..6627),
                        ),
                        branch: Expression {
                            tag: Identifier("Apply3", 6621..6627),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "@{3}|⟴",
                                span: 6607..6617,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Apply2", 6649..6655),
                        ),
                        branch: Expression {
                            tag: Identifier("Apply2", 6649..6655),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "@{2}|⊕",
                                span: 6635..6645,
                            },
                        },
                    },
                ],
            },
            range: 5403..6657,
        },
        "MainPrefix": GrammarRule {
            name: Identifier("MainPrefix", 6671..6681),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Not", 6703..6706),
                        ),
                        branch: Expression {
                            tag: Identifier("Not", 6703..6706),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[¬!]",
                                span: 6690..6695,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Positive", 6725..6733),
                        ),
                        branch: Expression {
                            tag: Identifier("Positive", 6725..6733),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[+]",
                                span: 6713..6716,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Negative", 6752..6760),
                        ),
                        branch: Expression {
                            tag: Identifier("Negative", 6752..6760),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[-]",
                                span: 6740..6743,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Reference", 6779..6788),
                        ),
                        branch: Expression {
                            tag: Identifier("Reference", 6779..6788),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[&]",
                                span: 6767..6770,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("DeconstructAll", 6809..6823),
                        ),
                        branch: Expression {
                            tag: Identifier("DeconstructAll", 6809..6823),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "…|[.]{3}",
                                span: 6795..6807,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Deconstruct", 6844..6855),
                        ),
                        branch: Expression {
                            tag: Identifier("Deconstruct", 6844..6855),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "‥|[.]{2}",
                                span: 6830..6842,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Inverse", 6876..6883),
                        ),
                        branch: Expression {
                            tag: Identifier("Inverse", 6876..6883),
                            remark: false,
                            body: YggdrasilText {
                                text: "⅟",
                                insensitive: false,
                                range: 6862..6867,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root2", 6904..6909),
                        ),
                        branch: Expression {
                            tag: Identifier("Root2", 6904..6909),
                            remark: false,
                            body: YggdrasilText {
                                text: "√",
                                insensitive: false,
                                range: 6890..6895,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root3", 6930..6935),
                        ),
                        branch: Expression {
                            tag: Identifier("Root3", 6930..6935),
                            remark: false,
                            body: YggdrasilText {
                                text: "∛",
                                insensitive: false,
                                range: 6916..6921,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Root4", 6956..6961),
                        ),
                        branch: Expression {
                            tag: Identifier("Root4", 6956..6961),
                            remark: false,
                            body: YggdrasilText {
                                text: "∜",
                                insensitive: false,
                                range: 6942..6947,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Dereference", 6980..6991),
                        ),
                        branch: Expression {
                            tag: Identifier("Dereference", 6980..6991),
                            remark: false,
                            body: YggdrasilRegex {
                                raw: "[*]",
                                span: 6968..6971,
                            },
                        },
                    },
                ],
            },
            range: 6658..6993,
        },
        "MainSuffix": GrammarRule {
            name: Identifier("MainSuffix", 7007..7017),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("InlineSuffix", 7026..7038),
                        ),
                        branch: Expression {
                            tag: Identifier("InlineSuffix", 7026..7038),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("InlineSuffix", 7026..7038),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 6994..7040,
        },
        "InlineSuffix": GrammarRule {
            name: Identifier("InlineSuffix", 7054..7066),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Raise", 7089..7094),
                        ),
                        branch: Expression {
                            tag: Identifier("Raise", 7089..7094),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "!",
                                            insensitive: false,
                                            range: 7083..7086,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent2", 7115..7123),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent2", 7115..7123),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "%",
                                            insensitive: false,
                                            range: 7109..7112,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent3", 7146..7154),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent3", 7146..7154),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "‰",
                                            insensitive: false,
                                            range: 7138..7143,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Percent4", 7176..7184),
                        ),
                        branch: Expression {
                            tag: Identifier("Percent4", 7176..7184),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "‱",
                                            insensitive: false,
                                            range: 7169..7174,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime1", 7207..7213),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime1", 7207..7213),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "′",
                                            insensitive: false,
                                            range: 7199..7204,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime2", 7236..7242),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime2", 7236..7242),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "″",
                                            insensitive: false,
                                            range: 7228..7233,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime3", 7265..7271),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime3", 7265..7271),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "‴",
                                            insensitive: false,
                                            range: 7257..7262,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Prime4", 7294..7300),
                        ),
                        branch: Expression {
                            tag: Identifier("Prime4", 7294..7300),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "⁗",
                                            insensitive: false,
                                            range: 7286..7291,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Celsius", 7323..7330),
                        ),
                        branch: Expression {
                            tag: Identifier("Celsius", 7323..7330),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "℃",
                                            insensitive: false,
                                            range: 7315..7320,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Fahrenheit", 7353..7363),
                        ),
                        branch: Expression {
                            tag: Identifier("Fahrenheit", 7353..7363),
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilText {
                                            text: "℉",
                                            insensitive: false,
                                            range: 7345..7350,
                                        },
                                    },
                                ],
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("TupleCall", 7370..7379),
                        ),
                        branch: Expression {
                            tag: Identifier("TupleCall", 7370..7379),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("TupleCall", 7370..7379),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("RangeCall", 7386..7395),
                        ),
                        branch: Expression {
                            tag: Identifier("RangeCall", 7386..7395),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("RangeCall", 7386..7395),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7041..7397,
        },
        "TupleCall": GrammarRule {
            name: Identifier("TupleCall", 7527..7536),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 7544..7554),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 7544..7554),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 7556..7567),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 7556..7567),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 7569..7579),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 7569..7579),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("TupleLiteral", 7581..7593),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("TupleLiteral", 7581..7593),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7514..7595,
        },
        "TupleLiteral": GrammarRule {
            name: Identifier("TupleLiteral", 7602..7614),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "(",
                                    insensitive: false,
                                    range: 7621..7624,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("TuplePair", 7626..7635),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TuplePair", 7626..7635),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: ConcatExpression {
                                                                sequence: [
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: IGNORED,
                                                                    },
                                                                    Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 7638..7643),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("TuplePair", 7644..7653),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("TuplePair", 7644..7653),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 4294967295,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: UnaryExpression {
                                                        base: Expression {
                                                            tag: None,
                                                            remark: false,
                                                            body: RuleReference {
                                                                name: Identifier("COMMA", 7657..7662),
                                                                boxed: false,
                                                                inline: false,
                                                            },
                                                        },
                                                        operators: [
                                                            RepeatsBetween(
                                                                YggdrasilCounter {
                                                                    min: 0,
                                                                    max: 1,
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: ")",
                                    insensitive: false,
                                    range: 7666..7669,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7596..7671,
        },
        "TuplePair": GrammarRule {
            name: Identifier("TuplePair", 7678..7687),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: Identifier("TupleKey", 7695..7703),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("TupleKey", 7695..7703),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Colon", 7704..7709),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Colon", 7704..7709),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: Identifier("MainExpression", 7712..7726),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("MainExpression", 7712..7726),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7672..7728,
        },
        "TupleKey": GrammarRule {
            name: Identifier("TupleKey", 7735..7743),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("Identifier", 7752..7762),
                        ),
                        branch: Expression {
                            tag: Identifier("Identifier", 7752..7762),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("Identifier", 7752..7762),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 7729..7764,
        },
        "RangeCall": GrammarRule {
            name: Identifier("RangeCall", 7894..7903),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 7910..7920),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 7910..7920),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("OP_AND_THEN", 7922..7933),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("OP_AND_THEN", 7922..7933),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: Identifier("WhiteSpace", 7935..7945),
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("WhiteSpace", 7935..7945),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("RangeLiteral", 7947..7959),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("RangeLiteral", 7947..7959),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 7881..7961,
        },
        "RangeLiteral": GrammarRule {
            name: Identifier("RangeLiteral", 7975..7987),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "[",
                                                insensitive: false,
                                                range: 7996..7999,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("SubscriptAxis", 8003..8016),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("SubscriptAxis", 8003..8016),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 8027..8032),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("SubscriptAxis", 8035..8048),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("SubscriptAxis", 8035..8048),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 8054..8059),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "]",
                                                insensitive: false,
                                                range: 8065..8068,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⁅",
                                                insensitive: false,
                                                range: 8075..8080,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: UnaryExpression {
                                                base: Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: ConcatExpression {
                                                        sequence: [
                                                            Expression {
                                                                tag: Identifier("SubscriptAxis", 8084..8097),
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("SubscriptAxis", 8084..8097),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: ConcatExpression {
                                                                            sequence: [
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("COMMA", 8108..8113),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                                Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: IGNORED,
                                                                                },
                                                                                Expression {
                                                                                    tag: Identifier("SubscriptAxis", 8116..8129),
                                                                                    remark: false,
                                                                                    body: RuleReference {
                                                                                        name: Identifier("SubscriptAxis", 8116..8129),
                                                                                        boxed: false,
                                                                                        inline: false,
                                                                                    },
                                                                                },
                                                                            ],
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 4294967295,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: IGNORED,
                                                            },
                                                            Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: UnaryExpression {
                                                                    base: Expression {
                                                                        tag: None,
                                                                        remark: false,
                                                                        body: RuleReference {
                                                                            name: Identifier("COMMA", 8135..8140),
                                                                            boxed: false,
                                                                            inline: false,
                                                                        },
                                                                    },
                                                                    operators: [
                                                                        RepeatsBetween(
                                                                            YggdrasilCounter {
                                                                                min: 0,
                                                                                max: 1,
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                },
                                                operators: [
                                                    RepeatsBetween(
                                                        YggdrasilCounter {
                                                            min: 0,
                                                            max: 1,
                                                        },
                                                    ),
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "⁆",
                                                insensitive: false,
                                                range: 8146..8151,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 7962..8153,
        },
        "SubscriptAxis": GrammarRule {
            name: Identifier("SubscriptAxis", 8160..8173),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SubscriptRange", 8182..8196),
                        ),
                        branch: Expression {
                            tag: Identifier("SubscriptRange", 8182..8196),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("SubscriptRange", 8182..8196),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("SubscriptOnly", 8203..8216),
                        ),
                        branch: Expression {
                            tag: Identifier("SubscriptOnly", 8203..8216),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("SubscriptOnly", 8203..8216),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 8154..8218,
        },
        "SubscriptOnly": GrammarRule {
            name: Identifier("SubscriptOnly", 8226..8239),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: Identifier("index", 8246..8251),
                    remark: false,
                    body: RuleReference {
                        name: Identifier("MainExpression", 8252..8266),
                        boxed: false,
                        inline: false,
                    },
                },
            },
            range: 8220..8275,
        },
        "SubscriptRange": GrammarRule {
            name: Identifier("SubscriptRange", 8283..8297),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("head", 8306..8310),
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: RuleReference {
                                            name: Identifier("MainExpression", 8311..8325),
                                            boxed: false,
                                            inline: false,
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 1,
                                            },
                                        ),
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: IGNORED,
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ChoiceExpression {
                                    branches: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: ConcatExpression {
                                                            sequence: [
                                                                Expression {
                                                                    tag: None,
                                                                    remark: false,
                                                                    body: RuleReference {
                                                                        name: Identifier("RangeOmit", 8339..8348),
                                                                        boxed: false,
                                                                        inline: false,
                                                                    },
                                                                },
                                                                Expression {
                                                                    tag: None,
                                                                    remark: false,
                                                                    body: IGNORED,
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    Expression {
                                                        tag: Identifier("step", 8349..8353),
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: RuleReference {
                                                                    name: Identifier("MainExpression", 8354..8368),
                                                                    boxed: false,
                                                                    inline: false,
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: ConcatExpression {
                                                sequence: [
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: RuleReference {
                                                            name: Identifier("COLON", 8380..8385),
                                                            boxed: false,
                                                            inline: false,
                                                        },
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: IGNORED,
                                                    },
                                                    Expression {
                                                        tag: None,
                                                        remark: false,
                                                        body: UnaryExpression {
                                                            base: Expression {
                                                                tag: None,
                                                                remark: false,
                                                                body: ConcatExpression {
                                                                    sequence: [
                                                                        Expression {
                                                                            tag: Identifier("tail", 8387..8391),
                                                                            remark: false,
                                                                            body: RuleReference {
                                                                                name: Identifier("MainExpression", 8392..8406),
                                                                                boxed: false,
                                                                                inline: false,
                                                                            },
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: IGNORED,
                                                                        },
                                                                        Expression {
                                                                            tag: None,
                                                                            remark: false,
                                                                            body: UnaryExpression {
                                                                                base: Expression {
                                                                                    tag: None,
                                                                                    remark: false,
                                                                                    body: ConcatExpression {
                                                                                        sequence: [
                                                                                            Expression {
                                                                                                tag: None,
                                                                                                remark: false,
                                                                                                body: ConcatExpression {
                                                                                                    sequence: [
                                                                                                        Expression {
                                                                                                            tag: None,
                                                                                                            remark: false,
                                                                                                            body: RuleReference {
                                                                                                                name: Identifier("COLON", 8408..8413),
                                                                                                                boxed: false,
                                                                                                                inline: false,
                                                                                                            },
                                                                                                        },
                                                                                                        Expression {
                                                                                                            tag: None,
                                                                                                            remark: false,
                                                                                                            body: IGNORED,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                            Expression {
                                                                                                tag: Identifier("step", 8414..8418),
                                                                                                remark: false,
                                                                                                body: UnaryExpression {
                                                                                                    base: Expression {
                                                                                                        tag: None,
                                                                                                        remark: false,
                                                                                                        body: RuleReference {
                                                                                                            name: Identifier("MainExpression", 8419..8433),
                                                                                                            boxed: false,
                                                                                                            inline: false,
                                                                                                        },
                                                                                                    },
                                                                                                    operators: [
                                                                                                        RepeatsBetween(
                                                                                                            YggdrasilCounter {
                                                                                                                min: 0,
                                                                                                                max: 1,
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                },
                                                                                operators: [
                                                                                    RepeatsBetween(
                                                                                        YggdrasilCounter {
                                                                                            min: 0,
                                                                                            max: 1,
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                            operators: [
                                                                RepeatsBetween(
                                                                    YggdrasilCounter {
                                                                        min: 0,
                                                                        max: 1,
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8277..8446,
        },
        "RangeOmit": GrammarRule {
            name: Identifier("RangeOmit", 8467..8476),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: Identifier("PROPORTION", 8483..8493),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("PROPORTION", 8483..8493),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: Identifier("COLON", 8496..8501),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 8496..8501),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: IGNORED,
                                        },
                                        Expression {
                                            tag: Identifier("COLON", 8504..8509),
                                            remark: false,
                                            body: RuleReference {
                                                name: Identifier("COLON", 8504..8509),
                                                boxed: false,
                                                inline: false,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8447..8511,
        },
        "NamepathFree": GrammarRule {
            name: Identifier("NamepathFree", 8646..8658),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 8666..8676),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 8666..8676),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: YggdrasilRegex {
                                                        raw: "[.∷]|::",
                                                        span: 8686..8697,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 8700..8710),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 8700..8710),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8633..8714,
        },
        "Namepath": GrammarRule {
            name: Identifier("Namepath", 8728..8736),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: Identifier("Identifier", 8743..8753),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 8743..8753),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ConcatExpression {
                                            sequence: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("PROPORTION", 8764..8774),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: IGNORED,
                                                },
                                                Expression {
                                                    tag: Identifier("Identifier", 8777..8787),
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("Identifier", 8777..8787),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        RepeatsBetween(
                                            YggdrasilCounter {
                                                min: 0,
                                                max: 4294967295,
                                            },
                                        ),
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 8715..8791,
        },
        "Identifier": GrammarRule {
            name: Identifier("Identifier", 8805..8815),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierBare", 8824..8838),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierBare", 8824..8838),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierBare", 8824..8838),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("IdentifierRaw", 8845..8858),
                        ),
                        branch: Expression {
                            tag: Identifier("IdentifierRaw", 8845..8858),
                            remark: false,
                            body: RuleReference {
                                name: Identifier("IdentifierRaw", 8845..8858),
                                boxed: false,
                                inline: false,
                            },
                        },
                    },
                ],
            },
            range: 8792..8860,
        },
        "IdentifierBare": GrammarRule {
            name: Identifier("IdentifierBare", 8872..8886),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[_\\p{XID_start}]\\p{XID_continue}*",
                        span: 8893..8928,
                    },
                },
            },
            range: 8861..8930,
        },
        "IdentifierRaw": GrammarRule {
            name: Identifier("IdentifierRaw", 8944..8957),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 8964..8967,
                                },
                            },
                            Expression {
                                tag: Identifier("IdentifierRawText", 8968..8985),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("IdentifierRawText", 8968..8985),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: YggdrasilText {
                                    text: "`",
                                    insensitive: false,
                                    range: 8986..8989,
                                },
                            },
                        ],
                    },
                },
            },
            range: 8931..8991,
        },
        "IdentifierRawText": GrammarRule {
            name: Identifier("IdentifierRawText", 9003..9020),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: UnaryExpression {
                        base: Expression {
                            tag: None,
                            remark: false,
                            body: ConcatExpression {
                                sequence: [
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: IGNORED,
                                    },
                                    Expression {
                                        tag: None,
                                        remark: false,
                                        body: YggdrasilRegex {
                                            raw: "[^`]",
                                            span: 9027..9031,
                                        },
                                    },
                                ],
                            },
                        },
                        operators: [
                            RepeatsBetween(
                                YggdrasilCounter {
                                    min: 1,
                                    max: 4294967295,
                                },
                            ),
                        ],
                    },
                },
            },
            range: 8992..9034,
        },
        "Boolean": GrammarRule {
            name: Identifier("Boolean", 9042..9049),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Union {
                branches: [
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("True", 9067..9071),
                        ),
                        branch: Expression {
                            tag: Identifier("True", 9067..9071),
                            remark: false,
                            body: YggdrasilText {
                                text: "true",
                                insensitive: false,
                                range: 9058..9064,
                            },
                        },
                    },
                    YggdrasilVariant {
                        tag: Some(
                            Identifier("False", 9087..9092),
                        ),
                        branch: Expression {
                            tag: Identifier("False", 9087..9092),
                            remark: false,
                            body: YggdrasilText {
                                text: "false",
                                insensitive: false,
                                range: 9078..9085,
                            },
                        },
                    },
                ],
            },
            range: 9036..9094,
        },
        "Integer": GrammarRule {
            name: Identifier("Integer", 9225..9232),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: true,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "0|[1-9][0-9]*",
                        span: 9239..9254,
                    },
                },
            },
            range: 9214..9256,
        },
        "ModifierCall": GrammarRule {
            name: Identifier("ModifierCall", 9391..9403),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ConcatExpression {
                        sequence: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: UnaryExpression {
                                    base: Expression {
                                        tag: None,
                                        remark: false,
                                        body: ChoiceExpression {
                                            branches: [
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_CLASS", 9414..9422),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_UNION", 9425..9433),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                                Expression {
                                                    tag: None,
                                                    remark: false,
                                                    body: RuleReference {
                                                        name: Identifier("KW_TRAIT", 9436..9444),
                                                        boxed: false,
                                                        inline: false,
                                                    },
                                                },
                                            ],
                                        },
                                    },
                                    operators: [
                                        Negative,
                                    ],
                                },
                            },
                            Expression {
                                tag: Identifier("Identifier", 9447..9457),
                                remark: false,
                                body: RuleReference {
                                    name: Identifier("Identifier", 9447..9457),
                                    boxed: false,
                                    inline: false,
                                },
                            },
                        ],
                    },
                },
            },
            range: 9378..9459,
        },
        "COMMA": GrammarRule {
            name: Identifier("COMMA", 9472..9477),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[,，]",
                        span: 9479..9485,
                    },
                },
            },
            range: 9472..9485,
        },
        "COLON": GrammarRule {
            name: Identifier("COLON", 9490..9495),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[:：]",
                        span: 9497..9503,
                    },
                },
            },
            range: 9490..9503,
        },
        "PROPORTION": GrammarRule {
            name: Identifier("PROPORTION", 9508..9518),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "∷|::",
                        span: 9520..9528,
                    },
                },
            },
            range: 9508..9528,
        },
        "DOT": GrammarRule {
            name: Identifier("DOT", 9533..9536),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "[.．]",
                        span: 9540..9546,
                    },
                },
            },
            range: 9533..9546,
        },
        "OFFSET_L": GrammarRule {
            name: Identifier("OFFSET_L", 9551..9559),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "⁅",
                        insensitive: false,
                        range: 9561..9566,
                    },
                },
            },
            range: 9551..9566,
        },
        "OFFSET_R": GrammarRule {
            name: Identifier("OFFSET_R", 9571..9579),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "⁆",
                        insensitive: false,
                        range: 9581..9586,
                    },
                },
            },
            range: 9571..9586,
        },
        "OP_IMPORT_ALL": GrammarRule {
            name: Identifier("OP_IMPORT_ALL", 9620..9633),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "*",
                        insensitive: false,
                        range: 9635..9638,
                    },
                },
            },
            range: 9620..9638,
        },
        "OP_AND_THEN": GrammarRule {
            name: Identifier("OP_AND_THEN", 9643..9654),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "?",
                        insensitive: false,
                        range: 9656..9659,
                    },
                },
            },
            range: 9643..9659,
        },
        "OP_BIND": GrammarRule {
            name: Identifier("OP_BIND", 9664..9671),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "≔|:=",
                        span: 9673..9681,
                    },
                },
            },
            range: 9664..9681,
        },
        "KW_NAMESPACE": GrammarRule {
            name: Identifier("KW_NAMESPACE", 9728..9740),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "namespace",
                        span: 9742..9753,
                    },
                },
            },
            range: 9728..9753,
        },
        "KW_IMPORT": GrammarRule {
            name: Identifier("KW_IMPORT", 9758..9767),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "using",
                        span: 9769..9776,
                    },
                },
            },
            range: 9758..9776,
        },
        "KW_TEMPLATE": GrammarRule {
            name: Identifier("KW_TEMPLATE", 9781..9792),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "template|generic",
                        span: 9794..9812,
                    },
                },
            },
            range: 9781..9812,
        },
        "KW_WHERE": GrammarRule {
            name: Identifier("KW_WHERE", 9817..9825),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "where",
                        span: 9827..9834,
                    },
                },
            },
            range: 9817..9834,
        },
        "KW_IMPLEMENTS": GrammarRule {
            name: Identifier("KW_IMPLEMENTS", 9871..9884),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "implements?",
                        span: 9886..9899,
                    },
                },
            },
            range: 9871..9899,
        },
        "KW_EXTENDS": GrammarRule {
            name: Identifier("KW_EXTENDS", 9904..9914),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "extends?",
                        span: 9916..9926,
                    },
                },
            },
            range: 9904..9926,
        },
        "KW_INHERITS": GrammarRule {
            name: Identifier("KW_INHERITS", 9931..9942),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "inherits?",
                        span: 9944..9955,
                    },
                },
            },
            range: 9931..9955,
        },
        "KW_IF": GrammarRule {
            name: Identifier("KW_IF", 9975..9980),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "if",
                        span: 9982..9986,
                    },
                },
            },
            range: 9975..9986,
        },
        "KW_ELSE": GrammarRule {
            name: Identifier("KW_ELSE", 9991..9998),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "else",
                        span: 10000..10006,
                    },
                },
            },
            range: 9991..10006,
        },
        "KW_FOR": GrammarRule {
            name: Identifier("KW_FOR", 10033..10039),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "for",
                        span: 10041..10046,
                    },
                },
            },
            range: 10033..10046,
        },
        "KW_RETURN": GrammarRule {
            name: Identifier("KW_RETURN", 10051..10060),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "return",
                        span: 10062..10070,
                    },
                },
            },
            range: 10051..10070,
        },
        "KW_BREAK": GrammarRule {
            name: Identifier("KW_BREAK", 10075..10083),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "break",
                        span: 10085..10092,
                    },
                },
            },
            range: 10075..10092,
        },
        "KW_CONTINUE": GrammarRule {
            name: Identifier("KW_CONTINUE", 10097..10108),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "continue",
                        span: 10110..10120,
                    },
                },
            },
            range: 10097..10120,
        },
        "KW_NOT": GrammarRule {
            name: Identifier("KW_NOT", 10246..10252),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "not",
                        insensitive: false,
                        range: 10254..10259,
                    },
                },
            },
            range: 10246..10259,
        },
        "KW_IN": GrammarRule {
            name: Identifier("KW_IN", 10264..10269),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "in",
                        insensitive: false,
                        range: 10271..10275,
                    },
                },
            },
            range: 10264..10275,
        },
        "KW_IS": GrammarRule {
            name: Identifier("KW_IS", 10280..10285),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "is",
                        insensitive: false,
                        range: 10287..10291,
                    },
                },
            },
            range: 10280..10291,
        },
        "KW_AS": GrammarRule {
            name: Identifier("KW_AS", 10296..10301),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: false,
            captures: GrammarCaptures {
                text: false,
                auto: false,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilText {
                        text: "as",
                        insensitive: false,
                        range: 10303..10307,
                    },
                },
            },
            range: 10296..10307,
        },
        "WhiteSpace": GrammarRule {
            name: Identifier("WhiteSpace", 10461..10471),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: YggdrasilRegex {
                        raw: "\\p{White_Space}+",
                        span: 10478..10496,
                    },
                },
            },
            range: 10431..10498,
        },
        "Comment": GrammarRule {
            name: Identifier("Comment", 10545..10552),
            redirect: None,
            document: "",
            derives: RuleDerive {
                derives: {},
            },
            atomic: Optimized,
            auto_inline: false,
            entry: false,
            hide: false,
            ignored: true,
            captures: GrammarCaptures {
                text: false,
                auto: true,
                range: "usize",
            },
            body: Class {
                term: Expression {
                    tag: None,
                    remark: false,
                    body: ChoiceExpression {
                        branches: [
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "//",
                                                insensitive: false,
                                                range: 10561..10565,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilRegex {
                                                raw: "[^\\n\\r]*",
                                                span: 10566..10576,
                                            },
                                        },
                                    ],
                                },
                            },
                            Expression {
                                tag: None,
                                remark: false,
                                body: ConcatExpression {
                                    sequence: [
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "/*",
                                                insensitive: false,
                                                range: 10583..10587,
                                            },
                                        },
                                        Expression {
                                            tag: None,
                                            remark: false,
                                            body: YggdrasilText {
                                                text: "*/",
                                                insensitive: false,
                                                range: 10589..10593,
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                    },
                },
            },
            range: 10499..10595,
        },
    },
    token_sets: {},
    functions: {},
}