ProgramRoot {
    statements: [
        NamespaceDeclaration {
            kind: Test,
            path: expressionâˆ·repl,
        },
        ExpressionNode {
            omit: false,
            body: SubscriptCallNode {
                kind: Ordinal,
                base: a,
                monadic: false,
                terms: [
                    Index {
                        index: 1,
                    },
                ],
                span: 30..33,
            },
            span: 29..35,
        },
        ExpressionNode {
            omit: false,
            body: SubscriptCallNode {
                kind: Ordinal,
                base: a,
                monadic: false,
                terms: [
                    Index {
                        index: 2,
                    },
                ],
                span: 36..52,
            },
            span: 35..54,
        },
        ExpressionNode {
            omit: false,
            body: a,
            span: 54..56,
        },
        ExpressionNode {
            omit: false,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Index {
                        index: 3,
                    },
                    Index {
                        index: 4,
                    },
                ],
                span: 56..61,
            },
            span: 56..63,
        },
        ExpressionNode {
            omit: false,
            body: a,
            span: 63..65,
        },
        ExpressionNode {
            omit: false,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Index {
                        index: 5,
                    },
                ],
                span: 65..68,
            },
            span: 65..69,
        },
        ExpressionNode {
            omit: false,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Index {
                        index: 6,
                    },
                ],
                span: 69..72,
            },
            span: 69..74,
        },
        ExpressionNode {
            omit: false,
            body: DotCallNode {
                monadic: false,
                base: a,
                term: 1,
                span: 75..77,
            },
            span: 74..78,
        },
        ExpressionNode {
            omit: false,
            body: DotCallNode {
                monadic: false,
                base: a,
                term: 1,
                span: 84..86,
            },
            span: 78..88,
        },
        ExpressionNode {
            omit: false,
            body: SubscriptCallNode {
                kind: Ordinal,
                base: a,
                monadic: false,
                terms: [
                    Index {
                        index: 1,
                    },
                ],
                span: 89..92,
            },
            span: 88..94,
        },
        ExpressionNode {
            omit: false,
            body: SubscriptCallNode {
                kind: Ordinal,
                base: a,
                monadic: false,
                terms: [
                    Index {
                        index: 2,
                    },
                ],
                span: 95..111,
            },
            span: 94..113,
        },
        ExpressionNode {
            omit: false,
            body: a,
            span: 113..115,
        },
        ExpressionNode {
            omit: false,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Index {
                        index: 3,
                    },
                    Index {
                        index: 4,
                    },
                ],
                span: 115..120,
            },
            span: 115..122,
        },
        ExpressionNode {
            omit: false,
            body: a,
            span: 122..124,
        },
        ExpressionNode {
            omit: false,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Index {
                        index: 5,
                    },
                ],
                span: 124..127,
            },
            span: 124..128,
        },
        ExpressionNode {
            omit: false,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Index {
                        index: 6,
                    },
                ],
                span: 128..131,
            },
            span: 128..132,
        },
    ],
}