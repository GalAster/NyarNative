UnaryNode {
    prefix: +,
    base: a,
}
UnaryNode {
    prefix: -,
    base: a,
}
UnaryNode {
    prefix: *,
    base: var,
}
UnaryNode {
    prefix: *,
    base: UnaryNode {
        prefix: *,
        base: var,
    },
}
UnaryNode {
    prefix: ⅟,
    base: a,
}
InfixNode {
    infix: +,
    lhs: InfixNode {
        infix: +,
        lhs: UnaryNode {
            prefix: √,
            base: 2,
        },
        rhs: UnaryNode {
            prefix: ∛,
            base: 3,
        },
    },
    rhs: UnaryNode {
        prefix: ∜,
        base: 5,
    },
}
UnaryNode {
    prefix: √,
    base: InfixNode {
        infix: +,
        lhs: 2,
        rhs: UnaryNode {
            prefix: ∛,
            base: InfixNode {
                infix: +,
                lhs: 3,
                rhs: UnaryNode {
                    prefix: ∜,
                    base: 5,
                },
            },
        },
    },
}
UnaryNode {
    prefix: √,
    base: UnaryNode {
        prefix: ∛,
        base: UnaryNode {
            prefix: ∜,
            base: x,
        },
    },
}
InfixNode {
    infix: +,
    lhs: UnaryNode {
        prefix: ℃,
        base: 20,
    },
    rhs: UnaryNode {
        prefix: ℉,
        base: 30,
    },
}
InfixNode {
    infix: +,
    lhs: InfixNode {
        infix: +,
        lhs: UnaryNode {
            prefix: %,
            base: 2,
        },
        rhs: UnaryNode {
            prefix: ‰,
            base: 3,
        },
    },
    rhs: UnaryNode {
        prefix: ‱,
        base: 5,
    },
}
UnaryNode {
    prefix: ‱,
    base: InfixNode {
        infix: +,
        lhs: UnaryNode {
            prefix: %,
            base: 2,
        },
        rhs: InfixNode {
            infix: +,
            lhs: UnaryNode {
                prefix: ‰,
                base: 3,
            },
            rhs: 5,
        },
    },
}
UnaryNode {
    prefix: ‱,
    base: UnaryNode {
        prefix: ‰,
        base: UnaryNode {
            prefix: %,
            base: x,
        },
    },
}
