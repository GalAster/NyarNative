micro fun1() {

}

macro fun2(): R {

}


micro fun3(a, k: T, p: U = 1) -> R {
    print("Hello, world!")
}


micro fun4<G, R>(g: G) -> R {
    1 + 1
    a in b
    print("Hello, world!")
}


macro outer<L>(lhs: L) -> String {
    // let mut count = 0
    lambda<R>(rhs: R) {
        while count < 10 {
            count += 1
            print("{lhs} {rhs}")
        }
    }
    "{count}"
}

public static final micro main(mut args: List<String>) -> int {
    outer("Hello")("world")
    return 0
}