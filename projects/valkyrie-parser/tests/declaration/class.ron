NamespaceDeclaration {
    kind: Standalone,
    path: declaration∷classes,
}
ClassDeclaration {
    name: Identifier("Base1", 39..44),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 33..49,
}
ClassDeclaration {
    name: Identifier("Base2", 55..60),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 49..67,
}
ClassDeclaration {
    name: Identifier("Base3", 77..82),
    kind: Structure,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 67..89,
}
ClassDeclaration {
    name: Identifier("B", 101..102),
    kind: Class,
    annotations: Annotation {
        modifiers: [
            Identifier("value", 89..94),
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 89..113,
}
ClassDeclaration {
    name: Identifier("Inherit1", 168..176),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 113..219,
}
ClassDeclaration {
    name: Identifier("Inherit2", 225..233),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        FieldDeclaration {
            name: Identifier("virtual", 240..247),
            annotations: Empty,
            typing: None,
            default: None,
            span: 240..252,
        },
        FieldDeclaration {
            name: Identifier("base1", 260..265),
            annotations: Annotation {
                modifiers: [
                    Identifier("inherit", 252..259),
                ],
            },
            typing: None,
            default: None,
            span: 252..272,
        },
        FieldDeclaration {
            name: Identifier("base2", 286..291),
            annotations: Annotation {
                modifiers: [
                    Identifier("inherit", 278..285),
                ],
            },
            typing: None,
            default: None,
            span: 278..298,
        },
        FieldDeclaration {
            name: Identifier("base3", 312..317),
            annotations: Annotation {
                modifiers: [
                    Identifier("inherit", 304..311),
                ],
            },
            typing: None,
            default: None,
            span: 304..324,
        },
    ],
    span: 219..329,
}
ClassDeclaration {
    name: Identifier("B", 354..355),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        FieldDeclaration {
            name: Identifier("item1", 362..367),
            annotations: Empty,
            typing: None,
            default: None,
            span: 362..371,
        },
        FieldDeclaration {
            name: Identifier("item2", 377..382),
            annotations: Empty,
            typing: None,
            default: None,
            span: 377..386,
        },
    ],
    span: 329..392,
}
ClassDeclaration {
    name: Identifier("A", 398..399),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("a", 440..441),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    Identifier("pub", 429..432),
                    Identifier("static", 433..439),
                ],
            },
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: ReturnType {
                main: GenericCallNode {
                    monadic: false,
                    base: InfixNode {
                        infix: +,
                        lhs: GenericCallNode {
                            monadic: false,
                            base: Ref,
                            terms: ArgumentsList {
                                terms: [
                                    TupleTermNode {
                                        key: None,
                                        value: B,
                                    },
                                ],
                            },
                            associated: [],
                            span: 448..455,
                        },
                        rhs: Gc,
                    },
                    terms: ArgumentsList {
                        terms: [
                            TupleTermNode {
                                key: None,
                                value: D,
                            },
                        ],
                    },
                    associated: [],
                    span: 460..463,
                },
            },
            body: Some(
                StatementBlock {
                    terms: [
                        ControlNode {
                            kind: Return,
                            label: "",
                            expression: Some(
                                1,
                            ),
                            span: 474..482,
                        },
                    ],
                    span: 464..488,
                },
            ),
            span: 429..488,
        },
        FieldDeclaration {
            name: Identifier("_a", 493..495),
            annotations: Empty,
            typing: None,
            default: None,
            span: 493..495,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("a", 505..506),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    Identifier("get", 501..504),
                ],
            },
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: Auto,
            body: Some(
                StatementBlock {
                    terms: [
                        ExpressionNode {
                            omit: false,
                            body: ApplyCallNode {
                                monadic: false,
                                caller: violate,
                                arguments: ArgumentsList {
                                    terms: [],
                                },
                                body: None,
                                span: 526..567,
                            },
                            span: 519..576,
                        },
                        ControlNode {
                            kind: Return,
                            label: "",
                            expression: Some(
                                _a,
                            ),
                            span: 576..585,
                        },
                    ],
                    span: 509..591,
                },
            ),
            span: 501..591,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("a", 600..601),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    Identifier("set", 596..599),
                ],
            },
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: Auto,
            body: Some(
                StatementBlock {
                    terms: [
                        ExpressionNode {
                            omit: false,
                            body: InfixNode {
                                infix: =,
                                lhs: _a,
                                rhs: value,
                            },
                            span: 614..629,
                        },
                    ],
                    span: 604..630,
                },
            ),
            span: 596..630,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("into", 635..639),
                ],
            },
            annotations: Empty,
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: Auto,
            body: Some(
                StatementBlock {
                    terms: [],
                    span: 651..659,
                },
            ),
            span: 635..659,
        },
    ],
    span: 392..673,
}
ClassDeclaration {
    name: Identifier("A", 738..739),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 673..753,
}
ClassDeclaration {
    name: Identifier("Empty3", 863..869),
    kind: Class,
    annotations: Annotation {
        modifiers: [
            Identifier("public", 803..809),
            Identifier("static", 810..816),
            Identifier("dynamic_transaction_safe", 817..841),
            Identifier("volatile", 842..850),
            Identifier("final", 851..856),
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 753..883,
}
ClassDeclaration {
    name: Identifier("Inherit1", 901..909),
    kind: Class,
    annotations: Annotation {
        modifiers: [
            Identifier("open", 883..887),
            Identifier("impart", 888..894),
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 883..950,
}
ClassDeclaration {
    name: Identifier("Inherit2", 968..976),
    kind: Class,
    annotations: Annotation {
        modifiers: [
            Identifier("open", 950..954),
            Identifier("impart", 955..961),
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        FieldDeclaration {
            name: Identifier("virtual", 990..997),
            annotations: Annotation {
                modifiers: [
                    Identifier("public", 983..989),
                ],
            },
            typing: None,
            default: None,
            span: 983..1002,
        },
        FieldDeclaration {
            name: Identifier("x_base", 1010..1016),
            annotations: Annotation {
                modifiers: [
                    Identifier("inherit", 1002..1009),
                ],
            },
            typing: None,
            default: None,
            span: 1002..1023,
        },
        FieldDeclaration {
            name: Identifier("private", 1029..1036),
            annotations: Empty,
            typing: None,
            default: None,
            span: 1029..1037,
        },
        FieldDeclaration {
            name: Identifier("inline", 1037..1043),
            annotations: Empty,
            typing: None,
            default: None,
            span: 1037..1048,
        },
        FieldDeclaration {
            name: Identifier("_y_base", 1056..1063),
            annotations: Annotation {
                modifiers: [
                    Identifier("inherit", 1048..1055),
                ],
            },
            typing: None,
            default: None,
            span: 1048..1070,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("constructor", 1077..1088),
                ],
            },
            annotations: Empty,
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: Auto,
            body: Some(
                StatementBlock {
                    terms: [],
                    span: 1091..1099,
                },
            ),
            span: 1077..1099,
        },
    ],
    span: 950..1103,
}
ClassDeclaration {
    name: Identifier("原神", 1149..1155),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("启动", 1200..1206),
                ],
            },
            annotations: Empty,
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: ReturnType {
                main: Unit,
            },
            body: Some(
                StatementBlock {
                    terms: [
                        ExpressionNode {
                            omit: false,
                            body: shell'F:\\Games\\Genshin Impact\\UnityCrashHandler64.exe',
                            span: 1229..1288,
                        },
                    ],
                    span: 1219..1289,
                },
            ),
            span: 1200..1289,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("value", 1298..1303),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    Identifier("get", 1294..1297),
                ],
            },
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: ReturnType {
                main: Integer,
            },
            body: Some(
                StatementBlock {
                    terms: [
                        ExpressionNode {
                            omit: false,
                            body: _integer,
                            span: 1325..1338,
                        },
                    ],
                    span: 1315..1339,
                },
            ),
            span: 1294..1339,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("value", 1348..1353),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    Identifier("set", 1344..1347),
                ],
            },
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: Auto,
            body: Some(
                StatementBlock {
                    terms: [
                        ExpressionNode {
                            omit: false,
                            body: _integer,
                            span: 1366..1379,
                        },
                    ],
                    span: 1356..1380,
                },
            ),
            span: 1344..1380,
        },
    ],
    span: 1103..1384,
}
ClassDeclaration {
    name: Identifier("ClassA", 1390..1396),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        FieldDeclaration {
            name: Identifier("type", 1417..1423),
            annotations: Annotation {
                modifiers: [
                    Identifier("public", 1403..1409),
                    Identifier("static", 1410..1416),
                ],
            },
            typing: None,
            default: None,
            span: 1403..1440,
        },
        FieldDeclaration {
            name: Identifier("unknown_all", 1446..1457),
            annotations: Empty,
            typing: None,
            default: None,
            span: 1446..1457,
        },
        FieldDeclaration {
            name: Identifier("default_value", 1463..1476),
            annotations: Empty,
            typing: None,
            default: None,
            span: 1463..1479,
        },
        FieldDeclaration {
            name: Identifier("infer_type", 1485..1495),
            annotations: Empty,
            typing: None,
            default: None,
            span: 1485..1502,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("property", 1512..1520),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    Identifier("get", 1508..1511),
                ],
            },
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: Auto,
            body: Some(
                StatementBlock {
                    terms: [],
                    span: 1523..1525,
                },
            ),
            span: 1508..1525,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("property", 1535..1543),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    Identifier("set", 1531..1534),
                ],
            },
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: Auto,
            body: Some(
                StatementBlock {
                    terms: [],
                    span: 1546..1548,
                },
            ),
            span: 1531..1548,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("method", 1554..1560),
                ],
            },
            annotations: Empty,
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: Auto,
            body: None,
            span: 1554..1562,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("/", 1591..1594),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    Identifier("infix", 1585..1590),
                ],
            },
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: ReturnType {
                main: Self,
            },
            body: Some(
                StatementBlock {
                    terms: [
                        ControlNode {
                            kind: Return,
                            label: "",
                            expression: Some(
                                InfixNode {
                                    infix: /,
                                    lhs: self,
                                    rhs: rhs,
                                },
                            ),
                            span: 1641..1658,
                        },
                    ],
                    span: 1631..1664,
                },
            ),
            span: 1570..1664,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("join", 1681..1685),
                ],
            },
            annotations: Empty,
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: ReturnType {
                main: T,
            },
            body: Some(
                StatementBlock {
                    terms: [
                        ControlNode {
                            kind: Return,
                            label: "",
                            expression: Some(
                                ApplyCallNode {
                                    monadic: false,
                                    caller: DotCallNode {
                                        monadic: false,
                                        base: self,
                                        term: append,
                                        span: 1742..1749,
                                    },
                                    arguments: ArgumentsList {
                                        terms: [
                                            TupleTermNode {
                                                key: None,
                                                value: other,
                                            },
                                        ],
                                    },
                                    body: None,
                                    span: 1749..1756,
                                },
                            ),
                            span: 1731..1756,
                        },
                    ],
                    span: 1721..1762,
                },
            ),
            span: 1669..1762,
        },
    ],
    span: 1384..1766,
}
ClassDeclaration {
    name: Identifier("TestClass", 1812..1821),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 1766..1828,
}
ClassDeclaration {
    name: Identifier("Class", 1865..1870),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        FieldDeclaration {
            name: Identifier("field1", 1907..1913),
            annotations: Annotation {
                modifiers: [
                    Identifier("readonly", 1894..1902),
                ],
            },
            typing: None,
            default: None,
            span: 1884..1918,
        },
        FieldDeclaration {
            name: Identifier("field 2", 1933..1942),
            annotations: Annotation {
                modifiers: [
                    Identifier("readonly", 1924..1932),
                ],
            },
            typing: None,
            default: None,
            span: 1924..1947,
        },
        FieldDeclaration {
            name: Identifier("main", 1985..1989),
            annotations: Annotation {
                modifiers: [
                    Identifier("class", 1953..1960),
                    Identifier("static", 1964..1970),
                    Identifier("void", 1975..1979),
                ],
            },
            typing: None,
            default: None,
            span: 1953..1989,
        },
        FieldDeclaration {
            name: Identifier("fields", 2005..2011),
            annotations: Annotation {
                modifiers: [
                    Identifier("mut", 1995..1998),
                ],
            },
            typing: None,
            default: None,
            span: 1995..2026,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("try_add", 2055..2062),
                ],
            },
            annotations: Empty,
            generic: None,
            arguments: ArgumentsList {
                terms: [],
            },
            returns: Auto,
            body: Some(
                StatementBlock {
                    terms: [
                        ExpressionNode {
                            omit: false,
                            body: block,
                            span: 2097..2107,
                        },
                    ],
                    span: 2087..2108,
                },
            ),
            span: 2033..2108,
        },
    ],
    span: 1828..2112,
}
