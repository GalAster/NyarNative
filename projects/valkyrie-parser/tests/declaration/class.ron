NamespaceDeclaration {
    kind: Standalone,
    path: declaration∷classes,
}
ClassDeclaration {
    name: Identifier("Base1", 39..44),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 33..49,
}
ClassDeclaration {
    name: Identifier("Base2", 55..60),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 49..67,
}
ClassDeclaration {
    name: Identifier("Base3", 77..82),
    kind: Structure,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 67..89,
}
ClassDeclaration {
    name: Identifier("B", 101..102),
    kind: Class,
    annotations: Annotation {
        modifiers: [
            value,
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 89..113,
}
ClassDeclaration {
    name: Identifier("Inherit1", 168..176),
    kind: Class,
    annotations: Annotation {
        attributes: [
            AttributeTerm {
                kind: Normal,
                path: NamePathNode {
                    names: [
                        Identifier("derive", 114..120),
                    ],
                },
                variant: [],
                arguments: ArgumentsList {
                    terms: [],
                },
                domain: None,
            },
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 113..219,
}
ClassDeclaration {
    name: Identifier("Inherit2", 225..233),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        FieldDeclaration {
            name: Identifier("virtual", 240..247),
            annotations: Empty,
            typing: None,
            default: None,
            span: 240..252,
        },
        FieldDeclaration {
            name: Identifier("base1", 260..265),
            annotations: Annotation {
                modifiers: [
                    inherit,
                ],
            },
            typing: None,
            default: None,
            span: 252..272,
        },
        FieldDeclaration {
            name: Identifier("base2", 286..291),
            annotations: Annotation {
                modifiers: [
                    inherit,
                ],
            },
            typing: None,
            default: None,
            span: 278..298,
        },
        FieldDeclaration {
            name: Identifier("base3", 312..317),
            annotations: Annotation {
                modifiers: [
                    inherit,
                ],
            },
            typing: None,
            default: None,
            span: 304..324,
        },
    ],
    span: 219..329,
}
ClassDeclaration {
    name: Identifier("B", 354..355),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        FieldDeclaration {
            name: Identifier("item1", 362..367),
            annotations: Empty,
            typing: None,
            default: None,
            span: 362..371,
        },
        FieldDeclaration {
            name: Identifier("item2", 377..382),
            annotations: Empty,
            typing: None,
            default: None,
            span: 377..386,
        },
    ],
    span: 329..392,
}
ClassDeclaration {
    name: Identifier("A", 398..399),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("a", 440..441),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    pub,
                    static,
                ],
            },
            generics: [],
            parameters: [],
            returns: ReturnType {
                main: GenericCallNode {
                    monadic: false,
                    base: InfixNode {
                        infix: +,
                        lhs: GenericCallNode {
                            monadic: false,
                            base: Ref,
                            terms: ArgumentsList {
                                terms: [
                                    TupleTermNode {
                                        key: None,
                                        value: B,
                                    },
                                ],
                            },
                            associated: [],
                            span: 448..455,
                        },
                        rhs: Gc,
                    },
                    terms: ArgumentsList {
                        terms: [
                            TupleTermNode {
                                key: None,
                                value: D,
                            },
                        ],
                    },
                    associated: [],
                    span: 460..463,
                },
            },
            body: Some(
                [
                    Control {
                        kind: Return,
                        expression: 1,
                        span: 474..482,
                    },
                ],
            ),
            span: 429..488,
        },
        FieldDeclaration {
            name: Identifier("_a", 493..495),
            annotations: Empty,
            typing: None,
            default: None,
            span: 493..495,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("a", 505..506),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    get,
                ],
            },
            generics: [],
            parameters: [],
            returns: Auto,
            body: Some(
                [
                    ApplyCallNode {
                        monadic: false,
                        caller: violate,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        body: None,
                        span: 526..567,
                    },
                    Control {
                        kind: Return,
                        expression: _a,
                        span: 576..585,
                    },
                ],
            ),
            span: 501..591,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("a", 600..601),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    set,
                ],
            },
            generics: [],
            parameters: [],
            returns: Auto,
            body: Some(
                [
                    InfixNode {
                        infix: =,
                        lhs: _a,
                        rhs: value,
                    },
                ],
            ),
            span: 596..630,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("into", 635..639),
                ],
            },
            annotations: Empty,
            generics: [
                Single {
                    annotations: Empty,
                    key: Identifier("bool", 642..646),
                    bound: None,
                    default: None,
                },
            ],
            parameters: [],
            returns: Auto,
            body: Some(
                [],
            ),
            span: 635..659,
        },
    ],
    span: 392..673,
}
ClassDeclaration {
    name: Identifier("A", 738..739),
    kind: Class,
    annotations: Annotation {
        attributes: [
            AttributeTerm {
                kind: Normal,
                path: NamePathNode {
                    names: [
                        Identifier("Copy", 675..679),
                    ],
                },
                variant: [],
                arguments: ArgumentsList {
                    terms: [],
                },
                domain: None,
            },
            AttributeTerm {
                kind: Normal,
                path: NamePathNode {
                    names: [
                        Identifier("Debug", 688..693),
                    ],
                },
                variant: [],
                arguments: ArgumentsList {
                    terms: [],
                },
                domain: None,
            },
            AttributeTerm {
                kind: Normal,
                path: NamePathNode {
                    names: [
                        Identifier("derive", 704..710),
                    ],
                },
                variant: [],
                arguments: ArgumentsList {
                    terms: [],
                },
                domain: None,
            },
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 673..753,
}
ClassDeclaration {
    name: Identifier("Empty3", 863..869),
    kind: Class,
    annotations: Annotation {
        attributes: [
            AttributeTerm {
                kind: Normal,
                path: NamePathNode {
                    names: [
                        Identifier("Encode", 754..760),
                    ],
                },
                variant: [],
                arguments: ArgumentsList {
                    terms: [],
                },
                domain: None,
            },
            AttributeTerm {
                kind: Normal,
                path: NamePathNode {
                    names: [
                        Identifier("Decode", 762..768),
                    ],
                },
                variant: [],
                arguments: ArgumentsList {
                    terms: [],
                },
                domain: None,
            },
            AttributeTerm {
                kind: Normal,
                path: NamePathNode {
                    names: [
                        Identifier("derive", 771..777),
                    ],
                },
                variant: [],
                arguments: ArgumentsList {
                    terms: [],
                },
                domain: None,
            },
        ],
        modifiers: [
            public,
            static,
            dynamic_transaction_safe,
            volatile,
            final,
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 753..883,
}
ClassDeclaration {
    name: Identifier("Inherit1", 901..909),
    kind: Class,
    annotations: Annotation {
        modifiers: [
            open,
            impart,
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 883..950,
}
ClassDeclaration {
    name: Identifier("Inherit2", 968..976),
    kind: Class,
    annotations: Annotation {
        modifiers: [
            open,
            impart,
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        FieldDeclaration {
            name: Identifier("virtual", 990..997),
            annotations: Annotation {
                modifiers: [
                    public,
                ],
            },
            typing: None,
            default: None,
            span: 983..1002,
        },
        FieldDeclaration {
            name: Identifier("x_base", 1010..1016),
            annotations: Annotation {
                modifiers: [
                    inherit,
                ],
            },
            typing: None,
            default: None,
            span: 1002..1023,
        },
        FieldDeclaration {
            name: Identifier("private", 1029..1036),
            annotations: Empty,
            typing: None,
            default: None,
            span: 1029..1037,
        },
        FieldDeclaration {
            name: Identifier("inline", 1037..1043),
            annotations: Empty,
            typing: None,
            default: None,
            span: 1037..1048,
        },
        FieldDeclaration {
            name: Identifier("_y_base", 1056..1063),
            annotations: Annotation {
                modifiers: [
                    inherit,
                ],
            },
            typing: None,
            default: None,
            span: 1048..1070,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("constructor", 1077..1088),
                ],
            },
            annotations: Empty,
            generics: [],
            parameters: [],
            returns: Auto,
            body: Some(
                [],
            ),
            span: 1077..1099,
        },
    ],
    span: 950..1103,
}
ClassDeclaration {
    name: Identifier("原神", 1149..1155),
    kind: Class,
    annotations: Annotation {
        attributes: [
            AttributeTerm {
                kind: Normal,
                path: NamePathNode {
                    names: [
                        Identifier("derive", 1104..1110),
                    ],
                },
                variant: [],
                arguments: ArgumentsList {
                    terms: [],
                },
                domain: None,
            },
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("启动", 1200..1206),
                ],
            },
            annotations: Empty,
            generics: [],
            parameters: [
                Single {
                    annotations: Empty,
                    key: Identifier("self", 1207..1211),
                    bound: None,
                    default: None,
                },
            ],
            returns: ReturnType {
                main: Unit,
            },
            body: Some(
                [
                    shell'F:\\Games\\Genshin Impact\\UnityCrashHandler64.exe',
                ],
            ),
            span: 1200..1289,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("value", 1298..1303),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    get,
                ],
            },
            generics: [],
            parameters: [],
            returns: ReturnType {
                main: Integer,
            },
            body: Some(
                [
                    _integer,
                ],
            ),
            span: 1294..1339,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("value", 1348..1353),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    set,
                ],
            },
            generics: [],
            parameters: [],
            returns: Auto,
            body: Some(
                [
                    _integer,
                ],
            ),
            span: 1344..1380,
        },
    ],
    span: 1103..1384,
}
ClassDeclaration {
    name: Identifier("ClassA", 1390..1396),
    kind: Class,
    annotations: Empty,
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        FieldDeclaration {
            name: Identifier("type", 1417..1423),
            annotations: Annotation {
                modifiers: [
                    public,
                    static,
                ],
            },
            typing: None,
            default: None,
            span: 1403..1440,
        },
        FieldDeclaration {
            name: Identifier("unknown_all", 1446..1457),
            annotations: Empty,
            typing: None,
            default: None,
            span: 1446..1457,
        },
        FieldDeclaration {
            name: Identifier("default_value", 1463..1476),
            annotations: Empty,
            typing: None,
            default: None,
            span: 1463..1479,
        },
        FieldDeclaration {
            name: Identifier("infer_type", 1485..1495),
            annotations: Empty,
            typing: None,
            default: None,
            span: 1485..1502,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("property", 1512..1520),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    get,
                ],
            },
            generics: [],
            parameters: [],
            returns: Auto,
            body: Some(
                [],
            ),
            span: 1508..1525,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("property", 1535..1543),
                ],
            },
            annotations: Annotation {
                modifiers: [
                    set,
                ],
            },
            generics: [],
            parameters: [],
            returns: Auto,
            body: Some(
                [],
            ),
            span: 1531..1548,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("method", 1554..1560),
                ],
            },
            annotations: Empty,
            generics: [],
            parameters: [],
            returns: Auto,
            body: None,
            span: 1554..1562,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("/", 1591..1594),
                ],
            },
            annotations: Annotation {
                attributes: [
                    AttributeTerm {
                        kind: Normal,
                        path: NamePathNode {
                            names: [
                                Identifier("decorator", 1571..1580),
                            ],
                        },
                        variant: [],
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        domain: None,
                    },
                ],
                modifiers: [
                    infix,
                ],
            },
            generics: [],
            parameters: [
                Single {
                    annotations: Empty,
                    key: Identifier("self", 1595..1599),
                    bound: None,
                    default: None,
                },
                Single {
                    annotations: Empty,
                    key: Identifier("rhs", 1601..1604),
                    bound: Some(
                        Self,
                    ),
                    default: None,
                },
            ],
            returns: ReturnType {
                main: Self,
            },
            body: Some(
                [
                    Control {
                        kind: Return,
                        expression: InfixNode {
                            infix: /,
                            lhs: self,
                            rhs: rhs,
                        },
                        span: 1641..1658,
                    },
                ],
            ),
            span: 1570..1664,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("join", 1681..1685),
                ],
            },
            annotations: Annotation {
                attributes: [
                    AttributeTerm {
                        kind: Normal,
                        path: NamePathNode {
                            names: [
                                Identifier("inline", 1670..1676),
                            ],
                        },
                        variant: [],
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        domain: None,
                    },
                ],
            },
            generics: [
                Single {
                    annotations: Empty,
                    key: Identifier("T", 1688..1689),
                    bound: None,
                    default: None,
                },
            ],
            parameters: [
                Single {
                    annotations: Empty,
                    key: Identifier("self", 1699..1703),
                    bound: Some(
                        T,
                    ),
                    default: None,
                },
                Single {
                    annotations: Empty,
                    key: Identifier("other", 1708..1713),
                    bound: Some(
                        T,
                    ),
                    default: None,
                },
            ],
            returns: ReturnType {
                main: T,
            },
            body: Some(
                [
                    Control {
                        kind: Return,
                        expression: ApplyCallNode {
                            monadic: false,
                            caller: DotCallNode {
                                monadic: false,
                                base: self,
                                term: append,
                                span: 1742..1749,
                            },
                            arguments: ArgumentsList {
                                terms: [
                                    TupleTermNode {
                                        key: None,
                                        value: other,
                                    },
                                ],
                            },
                            body: None,
                            span: 1749..1756,
                        },
                        span: 1731..1756,
                    },
                ],
            ),
            span: 1669..1762,
        },
    ],
    span: 1384..1766,
}
ClassDeclaration {
    name: Identifier("TestClass", 1812..1821),
    kind: Class,
    annotations: Annotation {
        attributes: [
            AttributeTerm {
                kind: Normal,
                path: NamePathNode {
                    names: [
                        Identifier("derive", 1767..1773),
                    ],
                },
                variant: [],
                arguments: ArgumentsList {
                    terms: [],
                },
                domain: None,
            },
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [],
    span: 1766..1828,
}
ClassDeclaration {
    name: Identifier("Class", 1865..1870),
    kind: Class,
    annotations: Annotation {
        attributes: [
            AttributeTerm {
                kind: Normal,
                path: NamePathNode {
                    names: [
                        Identifier("derive", 1829..1835),
                    ],
                },
                variant: [],
                arguments: ArgumentsList {
                    terms: [],
                },
                domain: None,
            },
        ],
    },
    generic: None,
    base_classes: None,
    auto_traits: [],
    terms: [
        FieldDeclaration {
            name: Identifier("field1", 1907..1913),
            annotations: Annotation {
                attributes: [
                    AttributeTerm {
                        kind: Normal,
                        path: NamePathNode {
                            names: [
                                Identifier("call", 1885..1889),
                            ],
                        },
                        variant: [],
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        domain: None,
                    },
                ],
                modifiers: [
                    readonly,
                ],
            },
            typing: None,
            default: None,
            span: 1884..1918,
        },
        FieldDeclaration {
            name: Identifier("field 2", 1933..1942),
            annotations: Annotation {
                modifiers: [
                    readonly,
                ],
            },
            typing: None,
            default: None,
            span: 1924..1947,
        },
        FieldDeclaration {
            name: Identifier("main", 1985..1989),
            annotations: Annotation {
                modifiers: [
                    class,
                    static,
                    void,
                ],
            },
            typing: None,
            default: None,
            span: 1953..1989,
        },
        FieldDeclaration {
            name: Identifier("fields", 2005..2011),
            annotations: Annotation {
                modifiers: [
                    mut,
                ],
            },
            typing: None,
            default: None,
            span: 1995..2026,
        },
        MethodDeclaration {
            name: NamePathNode {
                names: [
                    Identifier("try_add", 2055..2062),
                ],
            },
            annotations: Annotation {
                attributes: [
                    AttributeTerm {
                        kind: Normal,
                        path: NamePathNode {
                            names: [
                                Identifier("call1", 2034..2039),
                            ],
                        },
                        variant: [],
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        domain: None,
                    },
                    AttributeTerm {
                        kind: Normal,
                        path: NamePathNode {
                            names: [
                                Identifier("call2", 2045..2050),
                            ],
                        },
                        variant: [],
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        domain: None,
                    },
                ],
            },
            generics: [],
            parameters: [
                Single {
                    annotations: Empty,
                    key: Identifier("self", 2073..2077),
                    bound: None,
                    default: None,
                },
                Single {
                    annotations: Empty,
                    key: Identifier("args", 2079..2083),
                    bound: None,
                    default: None,
                },
            ],
            returns: Auto,
            body: Some(
                [
                    block,
                ],
            ),
            span: 2033..2108,
        },
    ],
    span: 1828..2112,
}
