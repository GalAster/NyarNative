ProgramRoot {
    statements: [
        NamespaceDeclaration {
            kind: Standalone,
            path: declaration∷classes,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("Base1", 39..44),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 33..49,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("Base2", 55..60),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 49..67,
        },
        ClassDeclaration {
            kind: Structure,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("Base3", 77..82),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 67..89,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [
                    Identifier("value", 89..94),
                ],
            },
            name: Identifier("B", 101..102),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 89..113,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("Inherit1", 168..176),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 113..219,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("Inherit2", 225..233),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 219..329,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("B", 354..355),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 329..392,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("A", 398..399),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("a", 440..441),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("a", 505..506),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("a", 600..601),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("into", 635..639),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
            ],
            span: 392..673,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("A", 738..739),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 673..753,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [
                    Identifier("public", 803..809),
                    Identifier("static", 810..816),
                    Identifier("dynamic_transaction_safe", 817..841),
                    Identifier("volatile", 842..850),
                    Identifier("final", 851..856),
                ],
            },
            name: Identifier("Empty3", 863..869),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 753..883,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [
                    Identifier("open", 883..887),
                    Identifier("impart", 888..894),
                ],
            },
            name: Identifier("Inherit1", 901..909),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 883..950,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [
                    Identifier("open", 950..954),
                    Identifier("impart", 955..961),
                ],
            },
            name: Identifier("Inherit2", 968..976),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("constructor", 1077..1088),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
            ],
            span: 950..1103,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("原神", 1149..1155),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("启动", 1200..1206),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("value", 1298..1303),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("value", 1348..1353),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
            ],
            span: 1103..1384,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("ClassA", 1390..1396),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("property", 1512..1520),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("property", 1535..1543),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("method", 1554..1560),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("/", 1591..1594),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("join", 1681..1685),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
            ],
            span: 1384..1766,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("TestClass", 1812..1821),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [],
            span: 1766..1828,
        },
        ClassDeclaration {
            kind: Class,
            modifiers: ModifiersNode {
                terms: [],
            },
            name: Identifier("Class", 1865..1870),
            generic: None,
            base_classes: None,
            auto_traits: [],
            body: [
                Method(
                    MethodDeclaration {
                        document: DocumentationNode {
                            documentation: "",
                            span: 0..0,
                        },
                        modifiers: ModifiersNode {
                            terms: [],
                        },
                        method_name: NamePathNode {
                            names: [
                                Identifier("try_add", 2055..2062),
                            ],
                        },
                        generic: None,
                        arguments: ArgumentsList {
                            terms: [],
                        },
                        return_type: None,
                        effect_type: None,
                        body: None,
                    },
                ),
            ],
            span: 1828..2112,
        },
    ],
}