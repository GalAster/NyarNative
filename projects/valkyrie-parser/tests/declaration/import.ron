NamespaceDeclaration {
    kind: Test,
    path: tests∷import,
}
ImportStatement {
    annotation: [],
    term: Group(
        ImportGroupNode {
            path: [],
            group: [],
        },
    ),
    span: 26..32,
}
ImportStatement {
    annotation: [],
    term: Alias(
        ImportAliasNode {
            path: [],
            item: Normal(
                Identifier("package", 39..46),
            ),
            alias: None,
        },
    ),
    span: 33..47,
}
ImportStatement {
    annotation: [],
    term: All(
        ImportAllNode {
            path: [
                Identifier("package", 54..61),
                Identifier("module", 62..70),
                Identifier("name", 71..75),
            ],
        },
    ),
    span: 48..79,
}
ImportStatement {
    annotation: [],
    term: Alias(
        ImportAliasNode {
            path: [],
            item: Normal(
                Identifier("numpy", 87..92),
            ),
            alias: Some(
                Normal(
                    Identifier("女朋友", 96..105),
                ),
            ),
        },
    ),
    span: 81..106,
}
ImportStatement {
    annotation: [],
    term: Alias(
        ImportAliasNode {
            path: [],
            item: Normal(
                Identifier("tensor-flow", 112..125),
            ),
            alias: Some(
                Normal(
                    Identifier("tfboys", 129..135),
                ),
            ),
        },
    ),
    span: 106..137,
}
ImportStatement {
    annotation: [],
    term: Group(
        ImportGroupNode {
            path: [],
            group: [],
        },
    ),
    span: 137..147,
}
using
ClosureCallNode {
    monadic: false,
    base: package,
    trailing: [],
    span: 161..167,
}
