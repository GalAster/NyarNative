VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    span: 0..6,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    type: Tuple {
        terms: [],
    },
    body: Tuple {
        terms: [],
    },
    span: 8..23,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: Tuple {
        terms: [
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: i32,
            },
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: UnaryNode {
                    prefix: &,
                    base: i32,
                },
            },
        ],
    },
    span: 25..58,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    type: Tuple {
        terms: [
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: i32,
            },
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: UnaryNode {
                    prefix: &,
                    base: i32,
                },
            },
        ],
    },
    span: 60..92,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: RangeNode {
        kind: Offset,
        terms: [
            Index {
                index: 1,
            },
            Index {
                index: 2,
            },
            Index {
                index: 3,
            },
        ],
        span: 102..111,
    },
    span: 94..112,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: 1,
    span: 114..131,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    type: Tuple {
        terms: [
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: u32,
            },
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: u32,
            },
        ],
    },
    body: RangeNode {
        kind: Offset,
        terms: [
            Index {
                index: 1,
            },
            Index {
                index: 2,
            },
        ],
        span: 160..166,
    },
    span: 131..167,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: Tuple {
        terms: [
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: 1,
            },
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: 2,
            },
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: 3,
            },
        ],
    },
    span: 169..196,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: RangeNode {
        kind: Offset,
        terms: [
            Index {
                index: 1,
            },
            Index {
                index: 2,
            },
        ],
        span: 215..221,
    },
    span: 198..223,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: Tuple {
        terms: [
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: 1,
            },
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: 2,
            },
        ],
    },
    span: 223..248,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: ApplyCallNode {
        monadic: false,
        caller: Fraction,
        arguments: [
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: 1,
            },
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: 2,
            },
        ],
        body: None,
        span: 281..287,
    },
    span: 248..289,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: RangeNode {
        kind: Offset,
        terms: [
            Index {
                index: 0,
            },
            Index {
                index: 1.0,
            },
            Index {
                index: 2.0,
            },
        ],
        span: 299..312,
    },
    span: 289..313,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: RangeNode {
        kind: Offset,
        terms: [
            Index {
                index: 1_s,
            },
            Index {
                index: UnaryNode {
                    prefix: -,
                    base: 1.0_ms,
                },
            },
            Index {
                index: 0_us,
            },
            Index {
                index: UnaryNode {
                    prefix: +,
                    base: 1_Î¼s,
                },
            },
            Index {
                index: 0_m/s,
            },
        ],
        span: 325..357,
    },
    span: 314..359,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: '',
    span: 359..374,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: 'a',
    span: 375..390,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: 'a',
    span: 391..412,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: r'a',
    span: 412..431,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: t'a{0}',
    span: 431..449,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: re'[^0-9]',
    span: 449..469,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: json'\n{\n    key: "value"\n}\n',
    span: 469..514,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: RangeNode {
        kind: Offset,
        terms: [
            Index {
                index: InfixNode {
                    infix: ..=,
                    lhs: UnaryNode {
                        prefix: -,
                        base: 1,
                    },
                    rhs: UnaryNode {
                        prefix: +,
                        base: 1,
                    },
                },
            },
            Index {
                index: InfixNode {
                    infix: ..<,
                    lhs: UnaryNode {
                        prefix: -,
                        base: a,
                    },
                    rhs: UnaryNode {
                        prefix: +,
                        base: a,
                    },
                },
            },
            Index {
                index: InfixNode {
                    infix: ..=,
                    lhs: 'a',
                    rhs: 'z',
                },
            },
            Index {
                index: InfixNode {
                    infix: ..<,
                    lhs: 'A',
                    rhs: 'Z',
                },
            },
        ],
        span: 526..566,
    },
    span: 514..568,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: b,
    span: 568..583,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: ApplyCallNode {
        monadic: false,
        caller: a,
        arguments: [],
        body: None,
        span: 593..595,
    },
    span: 584..596,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: SubscriptCallNode {
        kind: Ordinal,
        base: ApplyCallNode {
            monadic: false,
            caller: GenericCallNode {
                monadic: false,
                base: a,
                term: [
                    ArgumentTerm {
                        modifiers: [],
                        key: Nothing,
                        value: a,
                    },
                ],
                span: 605..612,
            },
            arguments: [],
            body: None,
            span: 612..614,
        },
        monadic: false,
        terms: [
            Range {
                head: None,
                tail: None,
                step: None,
            },
            Range {
                head: None,
                tail: None,
                step: None,
            },
            Range {
                head: Some(
                    1,
                ),
                tail: None,
                step: Some(
                    UnaryNode {
                        prefix: -,
                        base: 1,
                    },
                ),
            },
            Range {
                head: None,
                tail: Some(
                    0,
                ),
                step: None,
            },
        ],
        span: 614..634,
    },
    span: 596..635,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: SubscriptCallNode {
        kind: Ordinal,
        base: a,
        monadic: false,
        terms: [
            Index {
                index: InfixNode {
                    infix: >,
                    lhs: a,
                    rhs: 0,
                },
            },
        ],
        span: 645..652,
    },
    span: 636..653,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: ApplyCallNode {
        monadic: false,
        caller: f'{:?}',
        arguments: [
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: t,
            },
        ],
        body: None,
        span: 668..671,
    },
    span: 653..672,
}
VariableDeclaration {
    pattern: TuplePatternNode {
        bind: None,
        name: None,
        terms: [],
        span: 0..0,
    },
    body: ApplyCallNode {
        monadic: false,
        caller: cf'%d',
        arguments: [
            ArgumentTerm {
                modifiers: [],
                key: Nothing,
                value: t,
            },
        ],
        body: None,
        span: 686..689,
    },
    span: 672..690,
}
