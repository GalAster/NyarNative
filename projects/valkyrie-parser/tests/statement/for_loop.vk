for i in list {
    looping
}

for (k, v) in dict {
    looping
}

for (k, mut v) in dict if k > 0 {
    looping
}

for (k, mut v) in dict if k > 0 {
    looping
}
else {
    nothing
}

class IntegerSet {

}

new stack List<A> () [

]

new Integer<A> () {

}

let team: new keywords BaseballTeam<T> (args) [
	a: b,
    ["RF"]: "Mookie Betts",
    [4]: "Jose Altuve",
    ["CF"]: "Mike Trout"
    (key, value)
]

for i in ℤ⁅-1:1⁆ {

};

for i in ℤ⁅-1:1:2⁆ if i > 0 {

};

class IndexersExample {
	_size: f64;
    name: String,
}

extends IndexersExample {
	set Size(value) {
		self._size = value as float
	}
	view index(i: int) {
		return self._size
	}
	set view index(i: int) {
		self._size = value as float
	}
	set view index(c: char, i: int) {
		self._size = value as float
	}
}

let thing = new IndexersExample [
    name: "object one",
    Size: Math::PI,
    [1]: '1',
    [2]: '4',
    [3]: '9',
    ['C', 4]: "Middle C"
];
