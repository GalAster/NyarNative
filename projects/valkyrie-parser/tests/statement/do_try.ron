NamespaceDeclaration {
    kind: Standalone,
    path: std∷create∷test,
}
ExpressionNode {
    omit: false,
    body: TryStatement {
        handler: None,
        body: StatementBlock {
            terms: [],
            span: 32..36,
        },
        span: 28..36,
    },
    span: 28..38,
}
ExpressionNode {
    omit: false,
    body: TryStatement {
        handler: Some(
            UnaryNode {
                prefix: ℃,
                base: String,
            },
        ),
        body: StatementBlock {
            terms: [],
            span: 50..54,
        },
        span: 38..54,
    },
    span: 38..56,
}
ExpressionNode {
    omit: false,
    body: TryStatement {
        handler: Some(
            GenericCallNode {
                monadic: false,
                base: Option,
                terms: ArgumentsList {
                    terms: [
                        TupleTermNode {
                            key: None,
                            value: T,
                        },
                    ],
                },
                associated: [],
                span: 66..69,
            },
        ),
        body: StatementBlock {
            terms: [],
            span: 70..74,
        },
        span: 56..74,
    },
    span: 56..76,
}
ExpressionNode {
    omit: false,
    body: MatchCallNode {
        monadic: true,
        base: MatchCallNode {
            monadic: false,
            base: TryStatement {
                handler: Some(
                    GenericCallNode {
                        monadic: false,
                        base: Result,
                        terms: ArgumentsList {
                            terms: [
                                TupleTermNode {
                                    key: None,
                                    value: T,
                                },
                                TupleTermNode {
                                    key: None,
                                    value: Noop,
                                },
                            ],
                        },
                        associated: [],
                        span: 86..95,
                    },
                ),
                body: StatementBlock {
                    terms: [
                        ExpressionNode {
                            omit: true,
                            body: ApplyCallNode {
                                monadic: false,
                                caller: print,
                                arguments: ArgumentsList {
                                    terms: [
                                        TupleTermNode {
                                            key: None,
                                            value: 'try',
                                        },
                                    ],
                                },
                                body: None,
                                span: 107..114,
                            },
                            span: 102..115,
                        },
                    ],
                    span: 96..117,
                },
                span: 76..117,
            },
            kind: Effect,
            patterns: PatternBlock {
                branches: [],
                span: 0..0,
            },
            span: 118..181,
        },
        kind: Typing,
        patterns: PatternBlock {
            branches: [],
            span: 0..0,
        },
        span: 181..234,
    },
    span: 76..235,
}
