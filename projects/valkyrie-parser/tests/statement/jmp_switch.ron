SwitchStatement {
    patterns: [],
    span: 0..11,
}
SwitchStatement {
    patterns: [
        PatternBranch {
            condition: When(
                PatternWhenNode {
                    guard: ExpressionNode {
                        omit: false,
                        body: Placeholder,
                        span: 0..0,
                    },
                    span: 22..34,
                },
            ),
            statements: PatternStatements {
                terms: [
                    1,
                ],
            },
            span: 22..34,
        },
        PatternBranch {
            condition: Else,
            statements: PatternStatements {
                terms: [
                    2,
                ],
            },
            span: 36..43,
        },
    ],
    span: 13..44,
}
SwitchStatement {
    patterns: [
        PatternBranch {
            condition: Case(
                PatternCaseNode {
                    pattern: ExpressionNode {
                        omit: false,
                        body: Placeholder,
                        span: 0..0,
                    },
                    guard: None,
                    span: 59..76,
                },
            ),
            statements: PatternStatements {
                terms: [
                    a,
                ],
            },
            span: 59..76,
        },
        PatternBranch {
            condition: Type(
                PatternTypeNode {
                    pattern: ExpressionNode {
                        omit: false,
                        body: Placeholder,
                        span: 0..0,
                    },
                    guard: None,
                    span: 82..99,
                },
            ),
            statements: PatternStatements {
                terms: [
                    b,
                ],
            },
            span: 82..99,
        },
        PatternBranch {
            condition: When(
                PatternWhenNode {
                    guard: ExpressionNode {
                        omit: false,
                        body: Placeholder,
                        span: 0..0,
                    },
                    span: 105..126,
                },
            ),
            statements: PatternStatements {
                terms: [
                    c,
                ],
            },
            span: 105..126,
        },
        PatternBranch {
            condition: Else,
            statements: PatternStatements {
                terms: [
                    d,
                ],
            },
            span: 132..147,
        },
    ],
    span: 46..150,
}
