ProgramRoot {
    statements: [
        NamespaceDeclaration {
            kind: Standalone,
            path: test∷literal,
        },
        ExpressionNode {
            omit: true,
            body: TupleNode {
                kind: Tuple,
                terms: ArgumentsList {
                    terms: [],
                },
                span: 34..36,
            },
            span: 34..37,
        },
        ExpressionNode {
            omit: true,
            body: 0,
            span: 38..42,
        },
        ExpressionNode {
            omit: true,
            body: TupleNode {
                kind: Tuple,
                terms: ArgumentsList {
                    terms: [
                        TupleTermNode {
                            key: None,
                            value: 1,
                        },
                    ],
                },
                span: 43..48,
            },
            span: 43..49,
        },
        ExpressionNode {
            omit: true,
            body: TupleNode {
                kind: Tuple,
                terms: ArgumentsList {
                    terms: [
                        TupleTermNode {
                            key: None,
                            value: 1,
                        },
                        TupleTermNode {
                            key: None,
                            value: 2,
                        },
                    ],
                },
                span: 50..56,
            },
            span: 50..57,
        },
        ExpressionNode {
            omit: true,
            body: TupleNode {
                kind: Tuple,
                terms: ArgumentsList {
                    terms: [
                        TupleTermNode {
                            key: None,
                            value: true,
                        },
                        TupleTermNode {
                            key: None,
                            value: TupleNode {
                                kind: Tuple,
                                terms: ArgumentsList {
                                    terms: [
                                        TupleTermNode {
                                            key: None,
                                            value: false,
                                        },
                                    ],
                                },
                                span: 65..73,
                            },
                        },
                    ],
                },
                span: 58..74,
            },
            span: 58..75,
        },
        ExpressionNode {
            omit: true,
            body: TupleNode {
                kind: Tuple,
                terms: ArgumentsList {
                    terms: [
                        TupleTermNode {
                            key: Some(
                                Identifier("", 85..88),
                            ),
                            value: 2,
                        },
                        TupleTermNode {
                            key: Some(
                                Identifier("", 93..96),
                            ),
                            value: 4,
                        },
                    ],
                },
                span: 84..100,
            },
            span: 84..101,
        },
        ExpressionNode {
            omit: true,
            body: TupleNode {
                kind: Tuple,
                terms: ArgumentsList {
                    terms: [
                        TupleTermNode {
                            key: Some(
                                Identifier("a", 103..104),
                            ),
                            value: 1,
                        },
                        TupleTermNode {
                            key: Some(
                                Identifier("z", 109..110),
                            ),
                            value: 26,
                        },
                    ],
                },
                span: 102..115,
            },
            span: 102..116,
        },
        ExpressionNode {
            omit: true,
            body: TupleNode {
                kind: Tuple,
                terms: ArgumentsList {
                    terms: [
                        TupleTermNode {
                            key: Some(
                                Identifier("啊", 118..121),
                            ),
                            value: 1,
                        },
                        TupleTermNode {
                            key: Some(
                                Identifier("吧", 126..129),
                            ),
                            value: 2,
                        },
                        TupleTermNode {
                            key: Some(
                                Identifier("", 134..139),
                            ),
                            value: 3,
                        },
                        TupleTermNode {
                            key: Some(
                                Identifier("", 144..149),
                            ),
                            value: 4,
                        },
                    ],
                },
                span: 117..153,
            },
            span: 117..154,
        },
        ExpressionNode {
            omit: true,
            body: RangeNode {
                kind: Ordinal,
                terms: [],
                span: 163..165,
            },
            span: 163..166,
        },
        ExpressionNode {
            omit: true,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Index {
                        index: 0,
                    },
                ],
                span: 167..170,
            },
            span: 167..171,
        },
        ExpressionNode {
            omit: true,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Index {
                        index: 1,
                    },
                ],
                span: 172..177,
            },
            span: 172..178,
        },
        ExpressionNode {
            omit: true,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Index {
                        index: 1,
                    },
                    Index {
                        index: 2,
                    },
                ],
                span: 179..185,
            },
            span: 179..186,
        },
        ExpressionNode {
            omit: true,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Index {
                        index: true,
                    },
                    Index {
                        index: RangeNode {
                            kind: Ordinal,
                            terms: [
                                Index {
                                    index: false,
                                },
                            ],
                            span: 194..201,
                        },
                    },
                ],
                span: 187..202,
            },
            span: 187..203,
        },
        ExpressionNode {
            omit: true,
            body: RangeNode {
                kind: Ordinal,
                terms: [],
                span: 213..215,
            },
            span: 213..216,
        },
        ExpressionNode {
            omit: true,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Range {
                        head: None,
                        tail: None,
                        step: None,
                    },
                ],
                span: 217..220,
            },
            span: 217..221,
        },
        ExpressionNode {
            omit: true,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Range {
                        head: None,
                        tail: None,
                        step: None,
                    },
                ],
                span: 222..226,
            },
            span: 222..227,
        },
        ExpressionNode {
            omit: true,
            body: RangeNode {
                kind: Ordinal,
                terms: [
                    Range {
                        head: None,
                        tail: None,
                        step: None,
                    },
                ],
                span: 228..233,
            },
            span: 228..234,
        },
    ],
}