NamespaceDeclaration {
    kind: Standalone,
    path: test∷literal,
}
Tuple {
    terms: [],
}
0
Tuple {
    terms: [
        ArgumentTerm {
            modifiers: [],
            key: Nothing,
            value: 1,
        },
    ],
}
Tuple {
    terms: [
        ArgumentTerm {
            modifiers: [],
            key: Nothing,
            value: 1,
        },
        ArgumentTerm {
            modifiers: [],
            key: Nothing,
            value: 2,
        },
    ],
}
Tuple {
    terms: [
        ArgumentTerm {
            modifiers: [],
            key: Nothing,
            value: true,
        },
        ArgumentTerm {
            modifiers: [],
            key: Nothing,
            value: Tuple {
                terms: [
                    ArgumentTerm {
                        modifiers: [],
                        key: Nothing,
                        value: false,
                    },
                ],
            },
        },
    ],
}
Tuple {
    terms: [
        ArgumentTerm {
            modifiers: [],
            key: Nothing,
            value: 0,
        },
        ArgumentTerm {
            modifiers: [],
            key: Symbol(
                Identifier("a", 91..92),
            ),
            value: 1,
        },
        ArgumentTerm {
            modifiers: [],
            key: Symbol(
                Identifier("z", 97..98),
            ),
            value: 26,
        },
    ],
}
Tuple {
    terms: [
        ArgumentTerm {
            modifiers: [],
            key: Symbol(
                Identifier("啊", 106..109),
            ),
            value: 1,
        },
        ArgumentTerm {
            modifiers: [],
            key: Symbol(
                Identifier("吧", 114..117),
            ),
            value: 2,
        },
        ArgumentTerm {
            modifiers: [],
            key: Symbol(
                Identifier("", 122..127),
            ),
            value: 3,
        },
        ArgumentTerm {
            modifiers: [],
            key: Symbol(
                Identifier("", 132..137),
            ),
            value: 4,
        },
    ],
}
RangeNode {
    kind: Offset,
    terms: [],
    span: 151..153,
}
RangeNode {
    kind: Offset,
    terms: [
        Index {
            index: 0,
        },
    ],
    span: 155..158,
}
RangeNode {
    kind: Offset,
    terms: [
        Index {
            index: 1,
        },
    ],
    span: 160..165,
}
RangeNode {
    kind: Offset,
    terms: [
        Index {
            index: 1,
        },
        Index {
            index: 2,
        },
    ],
    span: 167..173,
}
RangeNode {
    kind: Offset,
    terms: [
        Index {
            index: true,
        },
        Index {
            index: RangeNode {
                kind: Offset,
                terms: [
                    Index {
                        index: false,
                    },
                ],
                span: 182..189,
            },
        },
    ],
    span: 175..190,
}
RangeNode {
    kind: Offset,
    terms: [],
    span: 201..203,
}
RangeNode {
    kind: Offset,
    terms: [
        Range {
            head: None,
            tail: None,
            step: None,
        },
    ],
    span: 205..208,
}
RangeNode {
    kind: Offset,
    terms: [
        Range {
            head: None,
            tail: None,
            step: None,
        },
    ],
    span: 210..214,
}
RangeNode {
    kind: Offset,
    terms: [
        Range {
            head: None,
            tail: None,
            step: None,
        },
    ],
    span: 216..221,
}
