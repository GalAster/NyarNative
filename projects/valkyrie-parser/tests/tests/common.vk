namespace test;
let a = 1⁏
let mut ma = 1⁏

function test(
    // 1
    #[nice(#boat args: what)]
    // 2
    placeholder mut a: A = 0,
    // 3
    `b`: `B` = null
) -> ReturnType {
    if err != nil {
        return a
    }
}


vow {
     require {
         self > 0
     }
    ensure {
        self != infinity
     }
}
function a() {
    @assert // 断言
    @assume // 假设
    @refute // 否定
}


generic T, U {
     // forall {f32, f64}
    // 前置
     // require {

     // }
    // ensure // 后置
    // where // 约束
}
class A {
	inherit Base;
	inherit Base2;
}
