template T, U {
    implements Debug + Display
    where {}
}
template T {
    where {
        T: Trait
    }
}
#derive()
compile_time reflect
template T, U {
    where {
        T: AnyType => U
        U: AnyType
    }
}
template P {
    where { P: AnyType }
}
template {
    ensures {
    result == 5
    }
}
template {
    ensures {
    result.0 / 2 == result.1;
    result.2 == 'a';
    self.len() == @old(self.len());
    }
    after_expiry {
        forall {
        a > b
        }
    }
}