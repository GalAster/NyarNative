

trait Biased {
     biased(self): bool;
}

generic T { }
extends Option<T>: Biased {
    Biased::biased(self){ @matches(self, Some(_)) }
}

generic T { }
extends Result<T>: Biased {
     biased(self) { @matches(self, Success(_)) }
}

match a {
   with [ ]
}

|a| {}