namespace package.time;


⍝? A time and date in seconds plus nanoseconds.
structure Datetime {
    seconds: u64,
    nanoseconds: u32,
}


⍝? Read the current value of the clock.
⍝?
⍝? The clock is monotonic, therefore calling this function repeatedly will produce a sequence of non-decreasing values.
#import("wasi:clocks/monotonic-clock", "now")
pure micro now() -> u64 { }

⍝? Query the resolution of the clock. Returns the duration of time corresponding to a clock tick.
#import("wasi:clocks/monotonic-clock", "resolution")
pure micro resolution() -> u64 { }


⍝? Read the current value of the clock.
⍝?
⍝? This clock is not monotonic, therefore calling this function repeatedly
⍝? will not necessarily produce a sequence of non-decreasing values.
⍝?
⍝? The returned timestamps represent the number of seconds since
⍝? 1970-01-01T00:00:00Z, also known as [POSIX's Seconds Since the Epoch],
⍝? also known as [Unix Time].
⍝?
⍝? The nanoseconds field of the output is always less than 1000000000.
⍝?
⍝? [POSIX's Seconds Since the Epoch]: https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xbd_chap04.html#tag_21_04_16
⍝? [Unix Time]: https://en.wikipedia.org/wiki/Unix_time
#import("wasi:clocks/wall-clock", "now")
pure micro unix_time() -> Datetime { }

⍝? Query the resolution of the clock.
⍝?
⍝? The nanoseconds field of the output is always less than 1000000000.
#import("wasi:clocks/wall-clock", "resolution")
pure micro unix_resolution() -> Datetime { }

